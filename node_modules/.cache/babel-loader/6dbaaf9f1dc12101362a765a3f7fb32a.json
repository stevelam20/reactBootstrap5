{"ast":null,"code":"// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'; // ** Axios Imports\n\nimport axios from 'axios';\nexport const getBookmarks = createAsyncThunk('layout/getBookmarks', async () => {\n  const response = await axios.get('/api/bookmarks/data');\n  return {\n    data: response.data.suggestions,\n    bookmarks: response.data.bookmarks\n  };\n});\nexport const updateBookmarked = createAsyncThunk('layout/updateBookmarked', async id => {\n  await axios.post('/api/bookmarks/update', {\n    id\n  });\n  return id;\n});\nexport const layoutSlice = createSlice({\n  name: 'layout',\n  initialState: {\n    query: '',\n    bookmarks: [],\n    suggestions: []\n  },\n  reducers: {\n    handleSearchQuery: (state, action) => {\n      state.query = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getBookmarks.fulfilled, (state, action) => {\n      state.suggestions = action.payload.data;\n      state.bookmarks = action.payload.bookmarks;\n    }).addCase(updateBookmarked.fulfilled, (state, action) => {\n      let objectToUpdate; // ** find & update object\n\n      state.suggestions.find(item => {\n        if (item.id === action.payload) {\n          item.isBookmarked = !item.isBookmarked;\n          objectToUpdate = item;\n        }\n      }); // ** Get index to add or remove bookmark from array\n\n      const bookmarkIndex = state.bookmarks.findIndex(x => x.id === action.payload);\n\n      if (bookmarkIndex === -1) {\n        state.bookmarks.push(objectToUpdate);\n      } else {\n        state.bookmarks.splice(bookmarkIndex, 1);\n      }\n    });\n  }\n});\nexport const {\n  handleSearchQuery\n} = layoutSlice.actions;\nexport default layoutSlice.reducer;","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/redux/navbar.js"],"names":["createSlice","createAsyncThunk","axios","getBookmarks","response","get","data","suggestions","bookmarks","updateBookmarked","id","post","layoutSlice","name","initialState","query","reducers","handleSearchQuery","state","action","payload","extraReducers","builder","addCase","fulfilled","objectToUpdate","find","item","isBookmarked","bookmarkIndex","findIndex","x","push","splice","actions","reducer"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAAC,qBAAD,EAAwB,YAAY;AAC9E,QAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,qBAAV,CAAvB;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IAAT,CAAcC,WADf;AAELC,IAAAA,SAAS,EAAEJ,QAAQ,CAACE,IAAT,CAAcE;AAFpB,GAAP;AAID,CAN2C,CAArC;AAQP,OAAO,MAAMC,gBAAgB,GAAGR,gBAAgB,CAAC,yBAAD,EAA4B,MAAMS,EAAN,IAAY;AACtF,QAAMR,KAAK,CAACS,IAAN,CAAW,uBAAX,EAAoC;AAAED,IAAAA;AAAF,GAApC,CAAN;AACA,SAAOA,EAAP;AACD,CAH+C,CAAzC;AAKP,OAAO,MAAME,WAAW,GAAGZ,WAAW,CAAC;AACrCa,EAAAA,IAAI,EAAE,QAD+B;AAErCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZP,IAAAA,SAAS,EAAE,EAFC;AAGZD,IAAAA,WAAW,EAAE;AAHD,GAFuB;AAOrCS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpCD,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;AACD;AAHO,GAP2B;AAYrCC,EAAAA,aAAa,EAAEC,OAAO,IAAI;AACxBA,IAAAA,OAAO,CACJC,OADH,CACWpB,YAAY,CAACqB,SADxB,EACmC,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAClDD,MAAAA,KAAK,CAACX,WAAN,GAAoBY,MAAM,CAACC,OAAP,CAAed,IAAnC;AACAY,MAAAA,KAAK,CAACV,SAAN,GAAkBW,MAAM,CAACC,OAAP,CAAeZ,SAAjC;AACD,KAJH,EAKGe,OALH,CAKWd,gBAAgB,CAACe,SAL5B,EAKuC,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACtD,UAAIM,cAAJ,CADsD,CAGtD;;AACAP,MAAAA,KAAK,CAACX,WAAN,CAAkBmB,IAAlB,CAAuBC,IAAI,IAAI;AAC7B,YAAIA,IAAI,CAACjB,EAAL,KAAYS,MAAM,CAACC,OAAvB,EAAgC;AAC9BO,UAAAA,IAAI,CAACC,YAAL,GAAoB,CAACD,IAAI,CAACC,YAA1B;AACAH,UAAAA,cAAc,GAAGE,IAAjB;AACD;AACF,OALD,EAJsD,CAWtD;;AACA,YAAME,aAAa,GAAGX,KAAK,CAACV,SAAN,CAAgBsB,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACrB,EAAF,KAASS,MAAM,CAACC,OAA/C,CAAtB;;AAEA,UAAIS,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBX,QAAAA,KAAK,CAACV,SAAN,CAAgBwB,IAAhB,CAAqBP,cAArB;AACD,OAFD,MAEO;AACLP,QAAAA,KAAK,CAACV,SAAN,CAAgByB,MAAhB,CAAuBJ,aAAvB,EAAsC,CAAtC;AACD;AACF,KAxBH;AAyBD;AAtCoC,CAAD,CAA/B;AAyCP,OAAO,MAAM;AAAEZ,EAAAA;AAAF,IAAwBL,WAAW,CAACsB,OAA1C;AAEP,eAAetB,WAAW,CAACuB,OAA3B","sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from 'axios'\n\nexport const getBookmarks = createAsyncThunk('layout/getBookmarks', async () => {\n  const response = await axios.get('/api/bookmarks/data')\n  return {\n    data: response.data.suggestions,\n    bookmarks: response.data.bookmarks\n  }\n})\n\nexport const updateBookmarked = createAsyncThunk('layout/updateBookmarked', async id => {\n  await axios.post('/api/bookmarks/update', { id })\n  return id\n})\n\nexport const layoutSlice = createSlice({\n  name: 'layout',\n  initialState: {\n    query: '',\n    bookmarks: [],\n    suggestions: []\n  },\n  reducers: {\n    handleSearchQuery: (state, action) => {\n      state.query = action.payload\n    }\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(getBookmarks.fulfilled, (state, action) => {\n        state.suggestions = action.payload.data\n        state.bookmarks = action.payload.bookmarks\n      })\n      .addCase(updateBookmarked.fulfilled, (state, action) => {\n        let objectToUpdate\n\n        // ** find & update object\n        state.suggestions.find(item => {\n          if (item.id === action.payload) {\n            item.isBookmarked = !item.isBookmarked\n            objectToUpdate = item\n          }\n        })\n\n        // ** Get index to add or remove bookmark from array\n        const bookmarkIndex = state.bookmarks.findIndex(x => x.id === action.payload)\n\n        if (bookmarkIndex === -1) {\n          state.bookmarks.push(objectToUpdate)\n        } else {\n          state.bookmarks.splice(bookmarkIndex, 1)\n        }\n      })\n  }\n})\n\nexport const { handleSearchQuery } = layoutSlice.actions\n\nexport default layoutSlice.reducer\n"]},"metadata":{},"sourceType":"module"}