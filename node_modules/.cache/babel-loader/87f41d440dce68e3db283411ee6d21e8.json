{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\apps\\\\roles-permissions\\\\roles\\\\Table.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState, useEffect, forwardRef } from 'react'; // ** Table Columns\n\nimport { columns } from './columns'; // ** Store & Actions\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllData, getData } from '@src/views/apps/user/store'; // ** Third Party Components\n\nimport ReactPaginate from 'react-paginate';\nimport { ChevronDown } from 'react-feather';\nimport DataTable from 'react-data-table-component'; // ** Reactstrap Imports\n\nimport { Card, Input, Row, Col } from 'reactstrap'; // ** Styles\n\nimport '@styles/react/libs/tables/react-dataTable-component.scss'; // ** Bootstrap Checkbox Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BootstrapCheckbox = /*#__PURE__*/forwardRef(_c = (props, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"form-check\",\n  children: /*#__PURE__*/_jsxDEV(Input, {\n    type: \"checkbox\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this)); // ** Table Header\n\n_c2 = BootstrapCheckbox;\n\nconst CustomHeader = _ref => {\n  let {\n    plan,\n    handlePlanChange,\n    handlePerPage,\n    rowsPerPage,\n    handleFilter,\n    searchTerm\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xl: \"6\",\n        className: \"d-flex align-items-center p-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rows-per-page\",\n            children: \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            className: \"mx-50\",\n            type: \"select\",\n            id: \"rows-per-page\",\n            value: rowsPerPage,\n            onChange: handlePerPage,\n            style: {\n              width: '5rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"25\",\n              children: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"50\",\n              children: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rows-per-page\",\n            children: \"Entries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xl: \"6\",\n        className: \"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pe-lg-1 p-0 mt-lg-0 mt-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center mb-sm-0 mb-1 me-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-0\",\n            htmlFor: \"search-invoice\",\n            children: \"Search:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: searchTerm,\n            id: \"search-invoice\",\n            className: \"ms-50 w-100\",\n            onChange: e => handleFilter(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: plan,\n          type: \"select\",\n          style: {\n            width: '10rem'\n          },\n          onChange: e => handlePlanChange(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"basic\",\n            children: \"Basic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"company\",\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"enterprise\",\n            children: \"Enterprise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"team\",\n            children: \"Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = CustomHeader;\n\nconst Table = () => {\n  _s();\n\n  // ** Store Vars\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.users); // ** States\n\n  const [plan, setPlan] = useState('');\n  const [sort, setSort] = useState('desc');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [sortColumn, setSortColumn] = useState('id'); // ** Get data on mount\n\n  useEffect(() => {\n    dispatch(getAllData());\n    dispatch(getData({\n      sort,\n      role: '',\n      sortColumn,\n      status: '',\n      q: searchTerm,\n      currentPlan: plan,\n      page: currentPage,\n      perPage: rowsPerPage\n    }));\n  }, [dispatch, store.data.length]); // ** Function in get data on page change\n\n  const handlePagination = page => {\n    dispatch(getData({\n      sort,\n      role: '',\n      status: '',\n      sortColumn,\n      q: searchTerm,\n      currentPlan: plan,\n      perPage: rowsPerPage,\n      page: page.selected + 1\n    }));\n    setCurrentPage(page.selected + 1);\n  }; // ** Function in get data on rows per page\n\n\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value);\n    dispatch(getData({\n      sort,\n      role: '',\n      sortColumn,\n      status: '',\n      q: searchTerm,\n      perPage: value,\n      currentPlan: plan,\n      page: currentPage\n    }));\n    setRowsPerPage(value);\n  }; // ** Function in get data on search query change\n\n\n  const handleFilter = val => {\n    setSearchTerm(val);\n    dispatch(getData({\n      q: val,\n      sort,\n      role: '',\n      sortColumn,\n      status: '',\n      currentPlan: plan,\n      page: currentPage,\n      perPage: rowsPerPage\n    }));\n  };\n\n  const handlePlanChange = val => {\n    setPlan(val);\n    dispatch(getData({\n      sort,\n      role: val,\n      sortColumn,\n      status: '',\n      q: searchTerm,\n      currentPlan: plan,\n      page: currentPage,\n      perPage: rowsPerPage\n    }));\n  }; // ** Custom Pagination\n\n\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage));\n    return /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: '',\n      nextLabel: '',\n      pageCount: count || 1,\n      activeClassName: \"active\",\n      forcePage: currentPage !== 0 ? currentPage - 1 : 0,\n      onPageChange: page => handlePagination(page),\n      pageClassName: 'page-item',\n      nextLinkClassName: 'page-link',\n      nextClassName: 'page-item next',\n      previousClassName: 'page-item prev',\n      previousLinkClassName: 'page-link',\n      pageLinkClassName: 'page-link',\n      containerClassName: 'pagination react-paginate justify-content-end my-2 pe-1'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  }; // ** Table data to render\n\n\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    };\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0;\n    });\n\n    if (store.data.length > 0) {\n      return store.data;\n    } else if (store.data.length === 0 && isFiltered) {\n      return [];\n    } else {\n      return store.allData.slice(0, rowsPerPage);\n    }\n  };\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection);\n    setSortColumn(column.sortField);\n    dispatch(getData({\n      sort,\n      role: '',\n      sortColumn,\n      status: '',\n      q: searchTerm,\n      currentPlan: plan,\n      page: currentPage,\n      perPage: rowsPerPage\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"react-dataTable roles-table\",\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        noHeader: true,\n        subHeader: true,\n        pagination: true,\n        responsive: true,\n        selectableRows: true,\n        paginationServer: true,\n        columns: columns,\n        onSort: handleSort,\n        data: dataToRender(),\n        sortIcon: /*#__PURE__*/_jsxDEV(ChevronDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this),\n        className: \"react-dataTable\",\n        paginationComponent: CustomPagination,\n        selectableRowsComponent: BootstrapCheckbox,\n        subHeaderComponent: /*#__PURE__*/_jsxDEV(CustomHeader, {\n          plan: plan,\n          searchTerm: searchTerm,\n          rowsPerPage: rowsPerPage,\n          handleFilter: handleFilter,\n          handlePerPage: handlePerPage,\n          handlePlanChange: handlePlanChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"SZjQ27irIIh8yQwDu29RTDsTWiI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c4 = Table;\nexport default Table;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"BootstrapCheckbox$forwardRef\");\n$RefreshReg$(_c2, \"BootstrapCheckbox\");\n$RefreshReg$(_c3, \"CustomHeader\");\n$RefreshReg$(_c4, \"Table\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/apps/roles-permissions/roles/Table.js"],"names":["useState","useEffect","forwardRef","columns","useDispatch","useSelector","getAllData","getData","ReactPaginate","ChevronDown","DataTable","Card","Input","Row","Col","BootstrapCheckbox","props","ref","CustomHeader","plan","handlePlanChange","handlePerPage","rowsPerPage","handleFilter","searchTerm","width","e","target","value","Table","dispatch","store","state","users","setPlan","sort","setSort","setSearchTerm","currentPage","setCurrentPage","setRowsPerPage","sortColumn","setSortColumn","role","status","q","currentPlan","page","perPage","data","length","handlePagination","selected","parseInt","currentTarget","val","CustomPagination","count","Number","Math","ceil","total","dataToRender","filters","isFiltered","Object","keys","some","k","allData","slice","handleSort","column","sortDirection","sortField"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD,C,CAEA;;AACA,SAASC,OAAT,QAAwB,WAAxB,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,4BAApC,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,SAAP,MAAsB,4BAAtB,C,CAEA;;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAsC,YAAtC,C,CAEA;;AACA,OAAO,0DAAP,C,CAEA;;;AACA,MAAMC,iBAAiB,gBAAGb,UAAU,MAAC,CAACc,KAAD,EAAQC,GAAR,kBACnC;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA,yBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,GAAG,EAAEA,GAA5B;AAAA,OAAqCD;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADkC,CAApC,C,CAMA;;MANMD,iB;;AAON,MAAMG,YAAY,GAAG,QAAsF;AAAA,MAArF;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,gBAAR;AAA0BC,IAAAA,aAA1B;AAAyCC,IAAAA,WAAzC;AAAsDC,IAAAA,YAAtD;AAAoEC,IAAAA;AAApE,GAAqF;AACzG,sBACE;AAAK,IAAA,SAAS,EAAC,uDAAf;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,+BAAtB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AACE,YAAA,SAAS,EAAC,OADZ;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,EAAE,EAAC,eAHL;AAIE,YAAA,KAAK,EAAEF,WAJT;AAKE,YAAA,QAAQ,EAAED,aALZ;AAME,YAAA,KAAK,EAAE;AAAEI,cAAAA,KAAK,EAAE;AAAT,aANT;AAAA,oCAQE;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eASE;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,eAUE;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAcE;AAAO,YAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAmBE,QAAC,GAAD;AACE,QAAA,EAAE,EAAC,GADL;AAEE,QAAA,SAAS,EAAC,qJAFZ;AAAA,gCAIE;AAAK,UAAA,SAAS,EAAC,6CAAf;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,MAAjB;AAAwB,YAAA,OAAO,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAED,UAFT;AAGE,YAAA,EAAE,EAAC,gBAHL;AAIE,YAAA,SAAS,EAAC,aAJZ;AAKE,YAAA,QAAQ,EAAEE,CAAC,IAAIH,YAAY,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAL7B;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAgBE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAET,IAAd;AAAoB,UAAA,IAAI,EAAC,QAAzB;AAAkC,UAAA,KAAK,EAAE;AAAEM,YAAAA,KAAK,EAAE;AAAT,WAAzC;AAA6D,UAAA,QAAQ,EAAEC,CAAC,IAAIN,gBAAgB,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAA5F;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAQ,YAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD,CAjDD;;MAAMV,Y;;AAmDN,MAAMW,KAAK,GAAG,MAAM;AAAA;;AAClB;AACA,QAAMC,QAAQ,GAAG1B,WAAW,EAA5B;AACA,QAAM2B,KAAK,GAAG1B,WAAW,CAAC2B,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAAzB,CAHkB,CAKlB;;AACA,QAAM,CAACd,IAAD,EAAOe,OAAP,IAAkBlC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmC,IAAD,EAAOC,OAAP,IAAkBpC,QAAQ,CAAC,MAAD,CAAhC;AACA,QAAM,CAACwB,UAAD,EAAaa,aAAb,IAA8BrC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACsC,WAAD,EAAcC,cAAd,IAAgCvC,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACsB,WAAD,EAAckB,cAAd,IAAgCxC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACyC,UAAD,EAAaC,aAAb,IAA8B1C,QAAQ,CAAC,IAAD,CAA5C,CAXkB,CAalB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,QAAQ,CAACxB,UAAU,EAAX,CAAR;AACAwB,IAAAA,QAAQ,CACNvB,OAAO,CAAC;AACN4B,MAAAA,IADM;AAENQ,MAAAA,IAAI,EAAE,EAFA;AAGNF,MAAAA,UAHM;AAING,MAAAA,MAAM,EAAE,EAJF;AAKNC,MAAAA,CAAC,EAAErB,UALG;AAMNsB,MAAAA,WAAW,EAAE3B,IANP;AAON4B,MAAAA,IAAI,EAAET,WAPA;AAQNU,MAAAA,OAAO,EAAE1B;AARH,KAAD,CADD,CAAR;AAYD,GAdQ,EAcN,CAACQ,QAAD,EAAWC,KAAK,CAACkB,IAAN,CAAWC,MAAtB,CAdM,CAAT,CAdkB,CA8BlB;;AACA,QAAMC,gBAAgB,GAAGJ,IAAI,IAAI;AAC/BjB,IAAAA,QAAQ,CACNvB,OAAO,CAAC;AACN4B,MAAAA,IADM;AAENQ,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINH,MAAAA,UAJM;AAKNI,MAAAA,CAAC,EAAErB,UALG;AAMNsB,MAAAA,WAAW,EAAE3B,IANP;AAON6B,MAAAA,OAAO,EAAE1B,WAPH;AAQNyB,MAAAA,IAAI,EAAEA,IAAI,CAACK,QAAL,GAAgB;AARhB,KAAD,CADD,CAAR;AAYAb,IAAAA,cAAc,CAACQ,IAAI,CAACK,QAAL,GAAgB,CAAjB,CAAd;AACD,GAdD,CA/BkB,CA+ClB;;;AACA,QAAM/B,aAAa,GAAGK,CAAC,IAAI;AACzB,UAAME,KAAK,GAAGyB,QAAQ,CAAC3B,CAAC,CAAC4B,aAAF,CAAgB1B,KAAjB,CAAtB;AACAE,IAAAA,QAAQ,CACNvB,OAAO,CAAC;AACN4B,MAAAA,IADM;AAENQ,MAAAA,IAAI,EAAE,EAFA;AAGNF,MAAAA,UAHM;AAING,MAAAA,MAAM,EAAE,EAJF;AAKNC,MAAAA,CAAC,EAAErB,UALG;AAMNwB,MAAAA,OAAO,EAAEpB,KANH;AAONkB,MAAAA,WAAW,EAAE3B,IAPP;AAQN4B,MAAAA,IAAI,EAAET;AARA,KAAD,CADD,CAAR;AAYAE,IAAAA,cAAc,CAACZ,KAAD,CAAd;AACD,GAfD,CAhDkB,CAiElB;;;AACA,QAAML,YAAY,GAAGgC,GAAG,IAAI;AAC1BlB,IAAAA,aAAa,CAACkB,GAAD,CAAb;AACAzB,IAAAA,QAAQ,CACNvB,OAAO,CAAC;AACNsC,MAAAA,CAAC,EAAEU,GADG;AAENpB,MAAAA,IAFM;AAGNQ,MAAAA,IAAI,EAAE,EAHA;AAINF,MAAAA,UAJM;AAKNG,MAAAA,MAAM,EAAE,EALF;AAMNE,MAAAA,WAAW,EAAE3B,IANP;AAON4B,MAAAA,IAAI,EAAET,WAPA;AAQNU,MAAAA,OAAO,EAAE1B;AARH,KAAD,CADD,CAAR;AAYD,GAdD;;AAgBA,QAAMF,gBAAgB,GAAGmC,GAAG,IAAI;AAC9BrB,IAAAA,OAAO,CAACqB,GAAD,CAAP;AACAzB,IAAAA,QAAQ,CACNvB,OAAO,CAAC;AACN4B,MAAAA,IADM;AAENQ,MAAAA,IAAI,EAAEY,GAFA;AAGNd,MAAAA,UAHM;AAING,MAAAA,MAAM,EAAE,EAJF;AAKNC,MAAAA,CAAC,EAAErB,UALG;AAMNsB,MAAAA,WAAW,EAAE3B,IANP;AAON4B,MAAAA,IAAI,EAAET,WAPA;AAQNU,MAAAA,OAAO,EAAE1B;AARH,KAAD,CADD,CAAR;AAYD,GAdD,CAlFkB,CAkGlB;;;AACA,QAAMkC,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACC,IAAL,CAAU7B,KAAK,CAAC8B,KAAN,GAAcvC,WAAxB,CAAD,CAApB;AAEA,wBACE,QAAC,aAAD;AACE,MAAA,aAAa,EAAE,EADjB;AAEE,MAAA,SAAS,EAAE,EAFb;AAGE,MAAA,SAAS,EAAEmC,KAAK,IAAI,CAHtB;AAIE,MAAA,eAAe,EAAC,QAJlB;AAKE,MAAA,SAAS,EAAEnB,WAAW,KAAK,CAAhB,GAAoBA,WAAW,GAAG,CAAlC,GAAsC,CALnD;AAME,MAAA,YAAY,EAAES,IAAI,IAAII,gBAAgB,CAACJ,IAAD,CANxC;AAOE,MAAA,aAAa,EAAE,WAPjB;AAQE,MAAA,iBAAiB,EAAE,WARrB;AASE,MAAA,aAAa,EAAE,gBATjB;AAUE,MAAA,iBAAiB,EAAE,gBAVrB;AAWE,MAAA,qBAAqB,EAAE,WAXzB;AAYE,MAAA,iBAAiB,EAAE,WAZrB;AAaE,MAAA,kBAAkB,EAAE;AAbtB;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GApBD,CAnGkB,CAyHlB;;;AACA,QAAMe,YAAY,GAAG,MAAM;AACzB,UAAMC,OAAO,GAAG;AACdlB,MAAAA,CAAC,EAAErB;AADW,KAAhB;AAIA,UAAMwC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,IAArB,CAA0B,UAAUC,CAAV,EAAa;AACxD,aAAOL,OAAO,CAACK,CAAD,CAAP,CAAWlB,MAAX,GAAoB,CAA3B;AACD,KAFkB,CAAnB;;AAIA,QAAInB,KAAK,CAACkB,IAAN,CAAWC,MAAX,GAAoB,CAAxB,EAA2B;AACzB,aAAOnB,KAAK,CAACkB,IAAb;AACD,KAFD,MAEO,IAAIlB,KAAK,CAACkB,IAAN,CAAWC,MAAX,KAAsB,CAAtB,IAA2Bc,UAA/B,EAA2C;AAChD,aAAO,EAAP;AACD,KAFM,MAEA;AACL,aAAOjC,KAAK,CAACsC,OAAN,CAAcC,KAAd,CAAoB,CAApB,EAAuBhD,WAAvB,CAAP;AACD;AACF,GAhBD;;AAkBA,QAAMiD,UAAU,GAAG,CAACC,MAAD,EAASC,aAAT,KAA2B;AAC5CrC,IAAAA,OAAO,CAACqC,aAAD,CAAP;AACA/B,IAAAA,aAAa,CAAC8B,MAAM,CAACE,SAAR,CAAb;AACA5C,IAAAA,QAAQ,CACNvB,OAAO,CAAC;AACN4B,MAAAA,IADM;AAENQ,MAAAA,IAAI,EAAE,EAFA;AAGNF,MAAAA,UAHM;AAING,MAAAA,MAAM,EAAE,EAJF;AAKNC,MAAAA,CAAC,EAAErB,UALG;AAMNsB,MAAAA,WAAW,EAAE3B,IANP;AAON4B,MAAAA,IAAI,EAAET,WAPA;AAQNU,MAAAA,OAAO,EAAE1B;AARH,KAAD,CADD,CAAR;AAYD,GAfD;;AAiBA,sBACE,QAAC,IAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,UAAU,MAHZ;AAIE,QAAA,UAAU,MAJZ;AAKE,QAAA,cAAc,MALhB;AAME,QAAA,gBAAgB,MANlB;AAOE,QAAA,OAAO,EAAEnB,OAPX;AAQE,QAAA,MAAM,EAAEoE,UARV;AASE,QAAA,IAAI,EAAET,YAAY,EATpB;AAUE,QAAA,QAAQ,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAVZ;AAWE,QAAA,SAAS,EAAC,iBAXZ;AAYE,QAAA,mBAAmB,EAAEN,gBAZvB;AAaE,QAAA,uBAAuB,EAAEzC,iBAb3B;AAcE,QAAA,kBAAkB,eAChB,QAAC,YAAD;AACE,UAAA,IAAI,EAAEI,IADR;AAEE,UAAA,UAAU,EAAEK,UAFd;AAGE,UAAA,WAAW,EAAEF,WAHf;AAIE,UAAA,YAAY,EAAEC,YAJhB;AAKE,UAAA,aAAa,EAAEF,aALjB;AAME,UAAA,gBAAgB,EAAED;AANpB;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA5LD;;GAAMS,K;UAEazB,W,EACHC,W;;;MAHVwB,K;AA8LN,eAAeA,KAAf","sourcesContent":["// ** React Imports\nimport { useState, useEffect, forwardRef } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllData, getData } from '@src/views/apps/user/store'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\n\n// ** Reactstrap Imports\nimport { Card, Input, Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef((props, ref) => (\n  <div className='form-check'>\n    <Input type='checkbox' ref={ref} {...props} />\n  </div>\n))\n\n// ** Table Header\nconst CustomHeader = ({ plan, handlePlanChange, handlePerPage, rowsPerPage, handleFilter, searchTerm }) => {\n  return (\n    <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75'>\n      <Row>\n        <Col xl='6' className='d-flex align-items-center p-0'>\n          <div className='d-flex align-items-center w-100'>\n            <label htmlFor='rows-per-page'>Show</label>\n            <Input\n              className='mx-50'\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{ width: '5rem' }}\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </Input>\n            <label htmlFor='rows-per-page'>Entries</label>\n          </div>\n        </Col>\n        <Col\n          xl='6'\n          className='d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pe-lg-1 p-0 mt-lg-0 mt-1'\n        >\n          <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n            <label className='mb-0' htmlFor='search-invoice'>\n              Search:\n            </label>\n            <Input\n              type='text'\n              value={searchTerm}\n              id='search-invoice'\n              className='ms-50 w-100'\n              onChange={e => handleFilter(e.target.value)}\n            />\n          </div>\n          <Input value={plan} type='select' style={{ width: '10rem' }} onChange={e => handlePlanChange(e.target.value)}>\n            <option value=''>Select Role</option>\n            <option value='basic'>Basic</option>\n            <option value='company'>Company</option>\n            <option value='enterprise'>Enterprise</option>\n            <option value='team'>Team</option>\n          </Input>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst Table = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.users)\n\n  // ** States\n  const [plan, setPlan] = useState('')\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sortColumn, setSortColumn] = useState('id')\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllData())\n    dispatch(\n      getData({\n        sort,\n        role: '',\n        sortColumn,\n        status: '',\n        q: searchTerm,\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }, [dispatch, store.data.length])\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getData({\n        sort,\n        role: '',\n        status: '',\n        sortColumn,\n        q: searchTerm,\n        currentPlan: plan,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getData({\n        sort,\n        role: '',\n        sortColumn,\n        status: '',\n        q: searchTerm,\n        perPage: value,\n        currentPlan: plan,\n        page: currentPage\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getData({\n        q: val,\n        sort,\n        role: '',\n        sortColumn,\n        status: '',\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  const handlePlanChange = val => {\n    setPlan(val)\n    dispatch(\n      getData({\n        sort,\n        role: val,\n        sortColumn,\n        status: '',\n        q: searchTerm,\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    dispatch(\n      getData({\n        sort,\n        role: '',\n        sortColumn,\n        status: '',\n        q: searchTerm,\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  return (\n    <Card>\n      <div className='react-dataTable roles-table'>\n        <DataTable\n          noHeader\n          subHeader\n          pagination\n          responsive\n          selectableRows\n          paginationServer\n          columns={columns}\n          onSort={handleSort}\n          data={dataToRender()}\n          sortIcon={<ChevronDown />}\n          className='react-dataTable'\n          paginationComponent={CustomPagination}\n          selectableRowsComponent={BootstrapCheckbox}\n          subHeaderComponent={\n            <CustomHeader\n              plan={plan}\n              searchTerm={searchTerm}\n              rowsPerPage={rowsPerPage}\n              handleFilter={handleFilter}\n              handlePerPage={handlePerPage}\n              handlePlanChange={handlePlanChange}\n            />\n          }\n        />\n      </div>\n    </Card>\n  )\n}\n\nexport default Table\n"]},"metadata":{},"sourceType":"module"}