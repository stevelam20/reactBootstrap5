{"ast":null,"code":"import mock from '../mock';\nconst data = {\n  tasks: [{\n    id: 1,\n    title: 'Entire change break our wife wide it daughter mention member.',\n    dueDate: '2020-11-25',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Jacob Ramirez',\n      avatar: require('@src/assets/images/avatars/12.png').default\n    },\n    tags: ['update'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 2,\n    title: 'Citizen stand administration step agency century.',\n    dueDate: '2020-12-14',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Andrew Anderson',\n      avatar: ''\n    },\n    tags: ['team', 'medium'],\n    isCompleted: true,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 3,\n    title: 'Meet Jane and ask for coffee ❤️',\n    dueDate: '2020-11-25',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Benjamin Jacobs',\n      avatar: ''\n    },\n    tags: ['high'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 4,\n    title: 'Answer the support tickets and close completed tickets. ',\n    dueDate: '2020-11-20',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Curtis Schmidt',\n      avatar: require('@src/assets/images/avatars/9.png').default\n    },\n    tags: ['medium'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: true\n  }, {\n    id: 5,\n    title: 'Test functionality of apps developed by dev team for enhancements. ',\n    dueDate: '2020-12-06',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Katherine Perkins',\n      avatar: require('@src/assets/images/avatars/9.png').default\n    },\n    tags: ['medium'],\n    isCompleted: true,\n    isDeleted: false,\n    isImportant: true\n  }, {\n    id: 6,\n    title: 'Conduct a mini awareness meeting regarding health care. ',\n    dueDate: '2020-12-06',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'David Murphy',\n      avatar: ''\n    },\n    tags: ['high', 'medium'],\n    isCompleted: true,\n    isDeleted: true,\n    isImportant: false\n  }, {\n    id: 7,\n    title: 'Plan new dashboard design with design team for Google app store. ',\n    dueDate: '2020-12-05',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Karina Miller',\n      avatar: require('@src/assets/images/avatars/1.png').default\n    },\n    tags: ['medium'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: true\n  }, {\n    id: 8,\n    title: 'Pick up Nats from her school and drop at dance class😁 ',\n    dueDate: '2020-12-08',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Thomas Moses',\n      avatar: require('@src/assets/images/avatars/7.png').default\n    },\n    tags: ['low', 'medium'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 9,\n    title: 'Finish documentation and make it live',\n    dueDate: '2020-11-25',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Angel Morrow',\n      avatar: ''\n    },\n    tags: ['high', 'update'],\n    isCompleted: false,\n    isDeleted: true,\n    isImportant: false\n  }, {\n    id: 10,\n    title: 'List out all the SEO resources and send it to new SEO team. ',\n    dueDate: '2020-12-09',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Karen Carrillo',\n      avatar: ''\n    },\n    tags: ['low'],\n    isCompleted: true,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 11,\n    title: 'Refactor Code and fix the bugs and test it on server ',\n    dueDate: '2020-12-01',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Timothy Brewer',\n      avatar: require('@src/assets/images/avatars/1.png').default\n    },\n    tags: ['low'],\n    isCompleted: true,\n    isDeleted: false,\n    isImportant: true\n  }, {\n    id: 12,\n    title: 'Reminder to mail clients for holidays',\n    dueDate: '2020-12-09',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Brian Barry',\n      avatar: ''\n    },\n    tags: ['team'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 13,\n    title: \"Submit quotation for Abid's ecommerce website and admin project\",\n    dueDate: '2020-12-01',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Joshua Golden',\n      avatar: require('@src/assets/images/avatars/5.png').default\n    },\n    tags: ['team'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 14,\n    title: 'Send PPT with real-time reports',\n    dueDate: '2020-11-29',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Paula Hammond',\n      avatar: require('@src/assets/images/avatars/5.png').default\n    },\n    tags: ['medium'],\n    isCompleted: true,\n    isDeleted: false,\n    isImportant: true\n  }, {\n    id: 15,\n    title: 'Skype Tommy for project status & report',\n    dueDate: '2020-11-29',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Tyler Garcia',\n      avatar: ''\n    },\n    tags: ['medium'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 16,\n    title: 'Hire 5 new Fresher or Experienced, frontend and backend developers ',\n    dueDate: '2020-12-12',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Darlene Shields',\n      avatar: require('@src/assets/images/avatars/1.png').default\n    },\n    tags: ['low'],\n    isCompleted: true,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 17,\n    title: 'Plan a party for development team 🎁',\n    dueDate: '2020-12-04',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Destiny Michael',\n      avatar: ''\n    },\n    tags: ['medium', 'low'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 18,\n    title: 'Fix Responsiveness for new structure 💻',\n    dueDate: '2020-11-18',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Danielle Anderson',\n      avatar: require('@src/assets/images/portrait/small/avatar-s-9.jpg').default\n    },\n    tags: ['low'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: true\n  }]\n}; // ------------------------------------------------\n// GET: Return Tasks\n// ------------------------------------------------\n\nmock.onGet('/apps/todo/tasks').reply(config => {\n  // eslint-disable-next-line object-curly-newline\n  const {\n    q = '',\n    filter,\n    tag,\n    sortBy: sortByParam = 'latest'\n  } = config.params;\n  /* eslint-enable */\n  // ------------------------------------------------\n  // Get Sort by and Sort Direction\n  // ------------------------------------------------\n\n  let sortDesc = true;\n\n  const sortBy = (() => {\n    if (sortByParam === 'title-asc') {\n      sortDesc = false;\n      return 'title';\n    }\n\n    if (sortByParam === 'title-desc') return 'title';\n\n    if (sortByParam === 'assignee') {\n      sortDesc = false;\n      return 'assignee';\n    }\n\n    if (sortByParam === 'due-date') {\n      sortDesc = false;\n      return 'dueDate';\n    }\n\n    return 'id';\n  })(); // ------------------------------------------------\n  // Filtering\n  // ------------------------------------------------\n\n\n  const queryLowered = q.toLowerCase();\n\n  const hasFilter = task => {\n    if (filter === 'important') return task.isImportant && !task.isDeleted;\n    if (filter === 'completed') return task.isCompleted && !task.isDeleted;\n    if (filter === 'deleted') return task.isDeleted;\n    return !task.isDeleted;\n  };\n\n  const includesFilter = task => task.tags.includes(queryLowered) || task.tags.some(tag => tag.includes(queryLowered));\n\n  const includesDueDate = task => {\n    const date = new Date(task.dueDate).getDate().toString().padStart(2, '0');\n    const month = new Date(task.dueDate).toLocaleString('default', {\n      month: 'short'\n    }).toLowerCase();\n    const dateMonth = `${date} ${month}`;\n    const monthDate = `${month} ${date}`;\n    return date.includes(queryLowered) || month.includes(queryLowered) || dateMonth.includes(queryLowered) || monthDate.includes(queryLowered);\n  };\n  /* eslint-disable */\n\n\n  const filteredData = data.tasks.filter(task => {\n    if (filter || tag) {\n      return task.title.toLowerCase().includes(queryLowered) && hasFilter(task) && (tag ? task.tags.includes(tag) : true);\n    } else {\n      return task.title.toLowerCase().includes(queryLowered) || includesFilter(task) || includesDueDate(task);\n    }\n  });\n  /* eslint-enable  */\n  // ------------------------------------------------\n  // Perform sorting\n  // ------------------------------------------------\n\n  const sortTasks = key => (a, b) => {\n    let fieldA;\n    let fieldB; // If sorting is by dueDate => Convert data to date\n\n    if (key === 'dueDate') {\n      fieldA = new Date(a[key]);\n      fieldB = new Date(b[key]); // eslint-disable-next-line brace-style\n    } // If sorting is by assignee => Use `fullName` of assignee\n    else if (key === 'assignee') {\n      fieldA = a.assignee ? a.assignee.fullName : null;\n      fieldB = b.assignee ? b.assignee.fullName : null;\n    } else {\n      fieldA = a[key];\n      fieldB = b[key];\n    }\n\n    let comparison = 0;\n\n    if (fieldA === fieldB) {\n      comparison = 0;\n    } else if (fieldA === null) {\n      comparison = 1;\n    } else if (fieldB === null) {\n      comparison = -1;\n    } else if (fieldA > fieldB) {\n      comparison = 1;\n    } else if (fieldA < fieldB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }; // Sort Data\n\n\n  const sortedData = filteredData.sort(sortTasks(sortBy));\n  if (sortDesc) sortedData.reverse();\n  return [200, sortedData];\n}); // ------------------------------------------------\n// POST: Add new task\n// ------------------------------------------------\n\nmock.onPost('/apps/todo/add-tasks').reply(config => {\n  // Get event from post data\n  const {\n    task\n  } = JSON.parse(config.data);\n  const {\n    length\n  } = data.tasks;\n  let lastIndex = 0;\n\n  if (length) {\n    lastIndex = data.tasks[length - 1].id;\n  }\n\n  task.id = lastIndex + 1;\n  data.tasks.push(task);\n  return [201, {\n    task\n  }];\n}); // ------------------------------------------------\n// POST: Update Task\n// ------------------------------------------------\n\nmock.onPost('/apps/todo/update-task').reply(config => {\n  const taskData = JSON.parse(config.data).task; // Convert Id to number\n\n  taskData.id = Number(taskData.id);\n  const task = data.tasks.find(e => e.id === Number(taskData.id));\n  Object.assign(task, taskData);\n  return [200, {\n    task\n  }];\n}); // ------------------------------------------------\n// DELETE: Remove Task\n// ------------------------------------------------\n\nmock.onDelete('/apps/todo/delete-task').reply(config => {\n  // Get task id from URL\n  let taskId = config.taskId; // Convert Id to number\n\n  taskId = Number(taskId);\n  const task = data.tasks.find(t => t.id === taskId);\n  Object.assign(task, {\n    isDeleted: true\n  });\n  return [200];\n});","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/@fake-db/apps/todo.js"],"names":["mock","data","tasks","id","title","dueDate","description","assignee","fullName","avatar","require","default","tags","isCompleted","isDeleted","isImportant","onGet","reply","config","q","filter","tag","sortBy","sortByParam","params","sortDesc","queryLowered","toLowerCase","hasFilter","task","includesFilter","includes","some","includesDueDate","date","Date","getDate","toString","padStart","month","toLocaleString","dateMonth","monthDate","filteredData","sortTasks","key","a","b","fieldA","fieldB","comparison","sortedData","sort","reverse","onPost","JSON","parse","length","lastIndex","push","taskData","Number","find","e","Object","assign","onDelete","taskId","t"],"mappings":"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","sourcesContent":["import mock from '../mock'\n\nconst data = {\n  tasks: [\n    {\n      id: 1,\n      title: 'Entire change break our wife wide it daughter mention member.',\n      dueDate: '2020-11-25',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Jacob Ramirez',\n        avatar: require('@src/assets/images/avatars/12.png').default\n      },\n      tags: ['update'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false\n    },\n    {\n      id: 2,\n      title: 'Citizen stand administration step agency century.',\n      dueDate: '2020-12-14',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Andrew Anderson',\n        avatar: ''\n      },\n      tags: ['team', 'medium'],\n      isCompleted: true,\n      isDeleted: false,\n      isImportant: false\n    },\n    {\n      id: 3,\n      title: 'Meet Jane and ask for coffee ❤️',\n      dueDate: '2020-11-25',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Benjamin Jacobs',\n        avatar: ''\n      },\n      tags: ['high'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false\n    },\n    {\n      id: 4,\n      title: 'Answer the support tickets and close completed tickets. ',\n      dueDate: '2020-11-20',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Curtis Schmidt',\n        avatar: require('@src/assets/images/avatars/9.png').default\n      },\n      tags: ['medium'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: true\n    },\n    {\n      id: 5,\n      title: 'Test functionality of apps developed by dev team for enhancements. ',\n      dueDate: '2020-12-06',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Katherine Perkins',\n        avatar: require('@src/assets/images/avatars/9.png').default\n      },\n      tags: ['medium'],\n      isCompleted: true,\n      isDeleted: false,\n      isImportant: true\n    },\n    {\n      id: 6,\n      title: 'Conduct a mini awareness meeting regarding health care. ',\n      dueDate: '2020-12-06',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'David Murphy',\n        avatar: ''\n      },\n      tags: ['high', 'medium'],\n      isCompleted: true,\n      isDeleted: true,\n      isImportant: false\n    },\n    {\n      id: 7,\n      title: 'Plan new dashboard design with design team for Google app store. ',\n      dueDate: '2020-12-05',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Karina Miller',\n        avatar: require('@src/assets/images/avatars/1.png').default\n      },\n      tags: ['medium'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: true\n    },\n    {\n      id: 8,\n      title: 'Pick up Nats from her school and drop at dance class😁 ',\n      dueDate: '2020-12-08',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Thomas Moses',\n        avatar: require('@src/assets/images/avatars/7.png').default\n      },\n      tags: ['low', 'medium'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false\n    },\n    {\n      id: 9,\n      title: 'Finish documentation and make it live',\n      dueDate: '2020-11-25',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Angel Morrow',\n        avatar: ''\n      },\n      tags: ['high', 'update'],\n      isCompleted: false,\n      isDeleted: true,\n      isImportant: false\n    },\n    {\n      id: 10,\n      title: 'List out all the SEO resources and send it to new SEO team. ',\n      dueDate: '2020-12-09',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Karen Carrillo',\n        avatar: ''\n      },\n      tags: ['low'],\n      isCompleted: true,\n      isDeleted: false,\n      isImportant: false\n    },\n    {\n      id: 11,\n      title: 'Refactor Code and fix the bugs and test it on server ',\n      dueDate: '2020-12-01',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Timothy Brewer',\n        avatar: require('@src/assets/images/avatars/1.png').default\n      },\n      tags: ['low'],\n      isCompleted: true,\n      isDeleted: false,\n      isImportant: true\n    },\n    {\n      id: 12,\n      title: 'Reminder to mail clients for holidays',\n      dueDate: '2020-12-09',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Brian Barry',\n        avatar: ''\n      },\n      tags: ['team'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false\n    },\n    {\n      id: 13,\n      title: \"Submit quotation for Abid's ecommerce website and admin project\",\n      dueDate: '2020-12-01',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Joshua Golden',\n        avatar: require('@src/assets/images/avatars/5.png').default\n      },\n      tags: ['team'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false\n    },\n    {\n      id: 14,\n      title: 'Send PPT with real-time reports',\n      dueDate: '2020-11-29',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Paula Hammond',\n        avatar: require('@src/assets/images/avatars/5.png').default\n      },\n      tags: ['medium'],\n      isCompleted: true,\n      isDeleted: false,\n      isImportant: true\n    },\n    {\n      id: 15,\n      title: 'Skype Tommy for project status & report',\n      dueDate: '2020-11-29',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Tyler Garcia',\n        avatar: ''\n      },\n      tags: ['medium'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false\n    },\n    {\n      id: 16,\n      title: 'Hire 5 new Fresher or Experienced, frontend and backend developers ',\n      dueDate: '2020-12-12',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Darlene Shields',\n        avatar: require('@src/assets/images/avatars/1.png').default\n      },\n      tags: ['low'],\n      isCompleted: true,\n      isDeleted: false,\n      isImportant: false\n    },\n    {\n      id: 17,\n      title: 'Plan a party for development team 🎁',\n      dueDate: '2020-12-04',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Destiny Michael',\n        avatar: ''\n      },\n      tags: ['medium', 'low'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: false\n    },\n    {\n      id: 18,\n      title: 'Fix Responsiveness for new structure 💻',\n      dueDate: '2020-11-18',\n      description:\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n      assignee: {\n        fullName: 'Danielle Anderson',\n        avatar: require('@src/assets/images/portrait/small/avatar-s-9.jpg').default\n      },\n      tags: ['low'],\n      isCompleted: false,\n      isDeleted: false,\n      isImportant: true\n    }\n  ]\n}\n\n// ------------------------------------------------\n// GET: Return Tasks\n// ------------------------------------------------\nmock.onGet('/apps/todo/tasks').reply(config => {\n  // eslint-disable-next-line object-curly-newline\n  const { q = '', filter, tag, sortBy: sortByParam = 'latest' } = config.params\n  /* eslint-enable */\n  // ------------------------------------------------\n  // Get Sort by and Sort Direction\n  // ------------------------------------------------\n  let sortDesc = true\n\n  const sortBy = (() => {\n    if (sortByParam === 'title-asc') {\n      sortDesc = false\n      return 'title'\n    }\n    if (sortByParam === 'title-desc') return 'title'\n    if (sortByParam === 'assignee') {\n      sortDesc = false\n      return 'assignee'\n    }\n    if (sortByParam === 'due-date') {\n      sortDesc = false\n      return 'dueDate'\n    }\n    return 'id'\n  })()\n\n  // ------------------------------------------------\n  // Filtering\n  // ------------------------------------------------\n  const queryLowered = q.toLowerCase()\n\n  const hasFilter = task => {\n    if (filter === 'important') return task.isImportant && !task.isDeleted\n    if (filter === 'completed') return task.isCompleted && !task.isDeleted\n    if (filter === 'deleted') return task.isDeleted\n    return !task.isDeleted\n  }\n\n  const includesFilter = task => task.tags.includes(queryLowered) || task.tags.some(tag => tag.includes(queryLowered))\n\n  const includesDueDate = task => {\n    const date = new Date(task.dueDate).getDate().toString().padStart(2, '0')\n    const month = new Date(task.dueDate).toLocaleString('default', { month: 'short' }).toLowerCase()\n    const dateMonth = `${date} ${month}`\n    const monthDate = `${month} ${date}`\n\n    return (\n      date.includes(queryLowered) ||\n      month.includes(queryLowered) ||\n      dateMonth.includes(queryLowered) ||\n      monthDate.includes(queryLowered)\n    )\n  }\n\n  /* eslint-disable */\n  const filteredData = data.tasks.filter(task => {\n    if (filter || tag) {\n      return (\n        task.title.toLowerCase().includes(queryLowered) && hasFilter(task) && (tag ? task.tags.includes(tag) : true)\n      )\n    } else {\n      return task.title.toLowerCase().includes(queryLowered) || includesFilter(task) || includesDueDate(task)\n    }\n  })\n  /* eslint-enable  */\n\n  // ------------------------------------------------\n  // Perform sorting\n  // ------------------------------------------------\n  const sortTasks = key => (a, b) => {\n    let fieldA\n    let fieldB\n\n    // If sorting is by dueDate => Convert data to date\n    if (key === 'dueDate') {\n      fieldA = new Date(a[key])\n      fieldB = new Date(b[key])\n      // eslint-disable-next-line brace-style\n    }\n\n    // If sorting is by assignee => Use `fullName` of assignee\n    else if (key === 'assignee') {\n      fieldA = a.assignee ? a.assignee.fullName : null\n      fieldB = b.assignee ? b.assignee.fullName : null\n    } else {\n      fieldA = a[key]\n      fieldB = b[key]\n    }\n\n    let comparison = 0\n\n    if (fieldA === fieldB) {\n      comparison = 0\n    } else if (fieldA === null) {\n      comparison = 1\n    } else if (fieldB === null) {\n      comparison = -1\n    } else if (fieldA > fieldB) {\n      comparison = 1\n    } else if (fieldA < fieldB) {\n      comparison = -1\n    }\n\n    return comparison\n  }\n\n  // Sort Data\n  const sortedData = filteredData.sort(sortTasks(sortBy))\n  if (sortDesc) sortedData.reverse()\n  return [200, sortedData]\n})\n\n// ------------------------------------------------\n// POST: Add new task\n// ------------------------------------------------\nmock.onPost('/apps/todo/add-tasks').reply(config => {\n  // Get event from post data\n  const { task } = JSON.parse(config.data)\n\n  const { length } = data.tasks\n  let lastIndex = 0\n  if (length) {\n    lastIndex = data.tasks[length - 1].id\n  }\n  task.id = lastIndex + 1\n\n  data.tasks.push(task)\n\n  return [201, { task }]\n})\n\n// ------------------------------------------------\n// POST: Update Task\n// ------------------------------------------------\nmock.onPost('/apps/todo/update-task').reply(config => {\n  const taskData = JSON.parse(config.data).task\n\n  // Convert Id to number\n  taskData.id = Number(taskData.id)\n\n  const task = data.tasks.find(e => e.id === Number(taskData.id))\n  Object.assign(task, taskData)\n\n  return [200, { task }]\n})\n\n// ------------------------------------------------\n// DELETE: Remove Task\n// ------------------------------------------------\nmock.onDelete('/apps/todo/delete-task').reply(config => {\n  // Get task id from URL\n  let taskId = config.taskId\n\n  // Convert Id to number\n  taskId = Number(taskId)\n\n  const task = data.tasks.find(t => t.id === taskId)\n  Object.assign(task, { isDeleted: true })\n  return [200]\n})\n"]},"metadata":{},"sourceType":"module"}