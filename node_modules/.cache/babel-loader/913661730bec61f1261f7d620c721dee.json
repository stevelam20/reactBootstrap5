{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\ui-elements\\\\cards\\\\analytics\\\\SessionByDevice.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useEffect, useState } from 'react'; // ** Third Party Components\n\nimport axios from 'axios';\nimport classnames from 'classnames';\nimport Chart from 'react-apexcharts';\nimport * as Icon from 'react-feather'; // ** Reactstrap Imports\n\nimport { Card, CardBody, CardTitle, CardHeader, DropdownMenu, DropdownItem, DropdownToggle, UncontrolledDropdown } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SessionByDevice = props => {\n  _s();\n\n  // ** State\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    axios.get('/card/card-analytics/sessions-device').then(res => setData(res.data));\n  }, []);\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      }\n    },\n    labels: ['Desktop', 'Mobile', 'Tablet'],\n    dataLabels: {\n      enabled: false\n    },\n    legend: {\n      show: false\n    },\n    comparedResult: [2, -3, 8],\n    stroke: {\n      width: 0\n    },\n    colors: [props.primary, props.warning, props.danger]\n  },\n        series = [58.6, 34.9, 6.5];\n\n  const renderChartInfo = () => {\n    return data.chart_info.map((item, index) => {\n      const IconTag = Icon[item.icon];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('d-flex justify-content-between', {\n          'mb-1': index !== data.chart_info.length - 1\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(IconTag, {\n            size: 17,\n            className: classnames({\n              [item.iconColor]: item.iconColor\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fw-bold ms-75 me-25\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"- \", item.usage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [item.upDown, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), item.upDown > 0 ? /*#__PURE__*/_jsxDEV(Icon.ArrowUp, {\n            size: 14,\n            className: \"ms-25 text-success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Icon.ArrowDown, {\n            size: 14,\n            className: \"ms-25 text-danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return data !== null ? /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      className: \"align-items-end\",\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Session By Device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n        className: \"chart-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n          color: \"\",\n          className: \"bg-transparent btn-sm border-0 p-50\",\n          children: \"Last 7 days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n          end: true,\n          children: data.last_days.map(item => /*#__PURE__*/_jsxDEV(DropdownItem, {\n            className: \"w-100\",\n            children: item\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Chart, {\n        className: \"my-1\",\n        options: options,\n        series: series,\n        type: \"donut\",\n        height: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), renderChartInfo()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(SessionByDevice, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = SessionByDevice;\nexport default SessionByDevice;\n\nvar _c;\n\n$RefreshReg$(_c, \"SessionByDevice\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/ui-elements/cards/analytics/SessionByDevice.js"],"names":["useEffect","useState","axios","classnames","Chart","Icon","Card","CardBody","CardTitle","CardHeader","DropdownMenu","DropdownItem","DropdownToggle","UncontrolledDropdown","SessionByDevice","props","data","setData","get","then","res","options","chart","toolbar","show","labels","dataLabels","enabled","legend","comparedResult","stroke","width","colors","primary","warning","danger","series","renderChartInfo","chart_info","map","item","index","IconTag","icon","length","iconColor","name","usage","upDown","last_days"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport classnames from 'classnames'\nimport Chart from 'react-apexcharts'\nimport * as Icon from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst SessionByDevice = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/sessions-device').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      labels: ['Desktop', 'Mobile', 'Tablet'],\n      dataLabels: {\n        enabled: false\n      },\n      legend: { show: false },\n      comparedResult: [2, -3, 8],\n      stroke: { width: 0 },\n      colors: [props.primary, props.warning, props.danger]\n    },\n    series = [58.6, 34.9, 6.5]\n\n  const renderChartInfo = () => {\n    return data.chart_info.map((item, index) => {\n      const IconTag = Icon[item.icon]\n      return (\n        <div\n          key={index}\n          className={classnames('d-flex justify-content-between', {\n            'mb-1': index !== data.chart_info.length - 1\n          })}\n        >\n          <div className='d-flex align-items-center'>\n            <IconTag\n              size={17}\n              className={classnames({\n                [item.iconColor]: item.iconColor\n              })}\n            />\n            <span className='fw-bold ms-75 me-25'>{item.name}</span>\n            <span>- {item.usage}%</span>\n          </div>\n          <div>\n            <span>{item.upDown}%</span>\n            {item.upDown > 0 ? (\n              <Icon.ArrowUp size={14} className='ms-25 text-success' />\n            ) : (\n              <Icon.ArrowDown size={14} className='ms-25 text-danger' />\n            )}\n          </div>\n        </div>\n      )\n    })\n  }\n\n  return data !== null ? (\n    <Card>\n      <CardHeader className='align-items-end'>\n        <CardTitle tag='h4'>Session By Device</CardTitle>\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            Last 7 days\n          </DropdownToggle>\n          <DropdownMenu end>\n            {data.last_days.map(item => (\n              <DropdownItem className='w-100' key={item}>\n                {item}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n      <CardBody>\n        <Chart className='my-1' options={options} series={series} type='donut' height={300} />\n        {renderChartInfo()}\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default SessionByDevice\n"]},"metadata":{},"sourceType":"module"}