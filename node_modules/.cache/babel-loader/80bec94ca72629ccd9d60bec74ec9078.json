{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\apps\\\\todo\\\\Tasks.js\";\n// ** React Imports\nimport { Link } from 'react-router-dom'; // ** Custom Components\n\nimport Avatar from '@components/avatar'; // ** Blank Avatar Image\n\nimport blankAvatar from '@src/assets/images/avatars/avatar-blank.png'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { ReactSortable } from 'react-sortablejs';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Menu, Search, MoreVertical } from 'react-feather'; // ** Reactstrap Imports\n\nimport { Input, Badge, InputGroup, DropdownMenu, DropdownItem, InputGroupText, DropdownToggle, UncontrolledDropdown } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = props => {\n  // ** Props\n  const {\n    query,\n    tasks,\n    params,\n    setSort,\n    dispatch,\n    getTasks,\n    setQuery,\n    updateTask,\n    selectTask,\n    reOrderTasks,\n    handleTaskSidebar,\n    handleMainSidebar\n  } = props; // ** Function to selectTask on click\n\n  const handleTaskClick = obj => {\n    dispatch(selectTask(obj));\n    handleTaskSidebar();\n  }; // ** Returns avatar color based on task tag\n\n\n  const resolveAvatarVariant = tags => {\n    if (tags.includes('high')) return 'light-primary';\n    if (tags.includes('medium')) return 'light-warning';\n    if (tags.includes('low')) return 'light-success';\n    if (tags.includes('update')) return 'light-danger';\n    if (tags.includes('team')) return 'light-info';\n    return 'light-primary';\n  }; // ** Renders task tags\n\n\n  const renderTags = arr => {\n    const badgeColor = {\n      team: 'light-primary',\n      low: 'light-success',\n      medium: 'light-warning',\n      high: 'light-danger',\n      update: 'light-info'\n    };\n    return arr.map(item => /*#__PURE__*/_jsxDEV(Badge, {\n      className: \"text-capitalize\",\n      color: badgeColor[item],\n      pill: true,\n      children: item\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this));\n  }; // ** Renders Avatar\n\n\n  const renderAvatar = obj => {\n    const item = obj.assignee;\n\n    if (item.avatar === undefined || item.avatar === null) {\n      return /*#__PURE__*/_jsxDEV(Avatar, {\n        img: blankAvatar,\n        imgHeight: \"32\",\n        imgWidth: \"32\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this);\n    } else if (item.avatar !== '') {\n      return /*#__PURE__*/_jsxDEV(Avatar, {\n        img: item.avatar,\n        imgHeight: \"32\",\n        imgWidth: \"32\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Avatar, {\n        color: resolveAvatarVariant(obj.tags),\n        content: item.fullName,\n        initials: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const renderTasks = () => {\n    return /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n      className: \"list-group todo-task-list-wrapper\",\n      options: {\n        wheelPropagation: false\n      },\n      containerRef: ref => {\n        if (ref) {\n          ref._getBoundingClientRect = ref.getBoundingClientRect;\n\n          ref.getBoundingClientRect = () => {\n            const original = ref._getBoundingClientRect();\n\n            return { ...original,\n              height: Math.floor(original.height)\n            };\n          };\n        }\n      },\n      children: tasks.length ? /*#__PURE__*/_jsxDEV(ReactSortable, {\n        tag: \"ul\",\n        list: tasks,\n        handle: \".drag-icon\",\n        className: \"todo-task-list media-list\",\n        setList: newState => dispatch(reOrderTasks(newState)),\n        children: tasks.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleTaskClick(item),\n            className: classnames('todo-item', {\n              completed: item.isCompleted\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-title-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-title-area\",\n                children: [/*#__PURE__*/_jsxDEV(MoreVertical, {\n                  className: \"drag-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check\",\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"checkbox\",\n                    id: item.title,\n                    checked: item.isCompleted,\n                    onClick: e => e.stopPropagation(),\n                    onChange: e => {\n                      e.stopPropagation();\n                      dispatch(updateTask({ ...item,\n                        isCompleted: e.target.checked\n                      }));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"todo-title\",\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-item-action mt-lg-0 mt-50\",\n                children: [item.tags.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"badge-wrapper me-1\",\n                  children: renderTags(item.tags)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 43\n                }, this) : null, item.dueDate ? /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-nowrap text-muted me-1\",\n                  children: [new Date(item.dueDate).toLocaleString('default', {\n                    month: 'short'\n                  }), ' ', new Date(item.dueDate).getDate().toString().padStart(2, '0')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 25\n                }, this) : null, item.assignee ? renderAvatar(item) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results show\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"No Items Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }; // ** Function to getTasks based on search query\n\n\n  const handleFilter = e => {\n    setQuery(e.target.value);\n    dispatch(getTasks(params));\n  }; // ** Function to getTasks based on sort\n\n\n  const handleSort = (e, val) => {\n    e.preventDefault();\n    setSort(val);\n    dispatch(getTasks({ ...params\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-fixed-search d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-toggle cursor-pointer d-block d-lg-none ms-1\",\n        onClick: handleMainSidebar,\n        children: /*#__PURE__*/_jsxDEV(Menu, {\n          size: 21\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-content-center justify-content-between w-100\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"input-group-merge\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroupText, {\n            children: /*#__PURE__*/_jsxDEV(Search, {\n              className: \"text-muted\",\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Search task\",\n            value: query,\n            onChange: handleFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n        children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n          className: \"hide-arrow me-1\",\n          tag: \"a\",\n          href: \"/\",\n          onClick: e => e.preventDefault(),\n          children: /*#__PURE__*/_jsxDEV(MoreVertical, {\n            className: \"text-body\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n          end: true,\n          children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n            tag: Link,\n            to: \"/\",\n            onClick: e => handleSort(e, 'title-asc'),\n            children: \"Sort A-Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n            tag: Link,\n            to: \"/\",\n            onClick: e => handleSort(e, 'title-desc'),\n            children: \"Sort Z-A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n            tag: Link,\n            to: \"/\",\n            onClick: e => handleSort(e, 'assignee'),\n            children: \"Sort Assignee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n            tag: Link,\n            to: \"/\",\n            onClick: e => handleSort(e, 'due-date'),\n            children: \"Sort Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n            tag: Link,\n            to: \"/\",\n            onClick: e => handleSort(e, ''),\n            children: \"Reset Sort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), renderTasks()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/apps/todo/Tasks.js"],"names":["Link","Avatar","blankAvatar","classnames","ReactSortable","PerfectScrollbar","Menu","Search","MoreVertical","Input","Badge","InputGroup","DropdownMenu","DropdownItem","InputGroupText","DropdownToggle","UncontrolledDropdown","Tasks","props","query","tasks","params","setSort","dispatch","getTasks","setQuery","updateTask","selectTask","reOrderTasks","handleTaskSidebar","handleMainSidebar","handleTaskClick","obj","resolveAvatarVariant","tags","includes","renderTags","arr","badgeColor","team","low","medium","high","update","map","item","renderAvatar","assignee","avatar","undefined","fullName","renderTasks","wheelPropagation","ref","_getBoundingClientRect","getBoundingClientRect","original","height","Math","floor","length","newState","completed","isCompleted","title","e","stopPropagation","target","checked","dueDate","Date","toLocaleString","month","getDate","toString","padStart","id","handleFilter","value","handleSort","val","preventDefault"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Blank Avatar Image\nimport blankAvatar from '@src/assets/images/avatars/avatar-blank.png'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ReactSortable } from 'react-sortablejs'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { Menu, Search, MoreVertical } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Input,\n  Badge,\n  InputGroup,\n  DropdownMenu,\n  DropdownItem,\n  InputGroupText,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst Tasks = props => {\n  // ** Props\n  const {\n    query,\n    tasks,\n    params,\n    setSort,\n    dispatch,\n    getTasks,\n    setQuery,\n    updateTask,\n    selectTask,\n    reOrderTasks,\n    handleTaskSidebar,\n    handleMainSidebar\n  } = props\n\n  // ** Function to selectTask on click\n  const handleTaskClick = obj => {\n    dispatch(selectTask(obj))\n    handleTaskSidebar()\n  }\n\n  // ** Returns avatar color based on task tag\n  const resolveAvatarVariant = tags => {\n    if (tags.includes('high')) return 'light-primary'\n    if (tags.includes('medium')) return 'light-warning'\n    if (tags.includes('low')) return 'light-success'\n    if (tags.includes('update')) return 'light-danger'\n    if (tags.includes('team')) return 'light-info'\n    return 'light-primary'\n  }\n\n  // ** Renders task tags\n  const renderTags = arr => {\n    const badgeColor = {\n      team: 'light-primary',\n      low: 'light-success',\n      medium: 'light-warning',\n      high: 'light-danger',\n      update: 'light-info'\n    }\n\n    return arr.map(item => (\n      <Badge className='text-capitalize' key={item} color={badgeColor[item]} pill>\n        {item}\n      </Badge>\n    ))\n  }\n\n  // ** Renders Avatar\n  const renderAvatar = obj => {\n    const item = obj.assignee\n\n    if (item.avatar === undefined || item.avatar === null) {\n      return <Avatar img={blankAvatar} imgHeight='32' imgWidth='32' />\n    } else if (item.avatar !== '') {\n      return <Avatar img={item.avatar} imgHeight='32' imgWidth='32' />\n    } else {\n      return <Avatar color={resolveAvatarVariant(obj.tags)} content={item.fullName} initials />\n    }\n  }\n\n  const renderTasks = () => {\n    return (\n      <PerfectScrollbar\n        className='list-group todo-task-list-wrapper'\n        options={{ wheelPropagation: false }}\n        containerRef={ref => {\n          if (ref) {\n            ref._getBoundingClientRect = ref.getBoundingClientRect\n\n            ref.getBoundingClientRect = () => {\n              const original = ref._getBoundingClientRect()\n\n              return { ...original, height: Math.floor(original.height) }\n            }\n          }\n        }}\n      >\n        {tasks.length ? (\n          <ReactSortable\n            tag='ul'\n            list={tasks}\n            handle='.drag-icon'\n            className='todo-task-list media-list'\n            setList={newState => dispatch(reOrderTasks(newState))}\n          >\n            {tasks.map(item => {\n              return (\n                <li\n                  key={item.id}\n                  onClick={() => handleTaskClick(item)}\n                  className={classnames('todo-item', {\n                    completed: item.isCompleted\n                  })}\n                >\n                  <div className='todo-title-wrapper'>\n                    <div className='todo-title-area'>\n                      <MoreVertical className='drag-icon' />\n                      <div className='form-check'>\n                        <Input\n                          type='checkbox'\n                          id={item.title}\n                          checked={item.isCompleted}\n                          onClick={e => e.stopPropagation()}\n                          onChange={e => {\n                            e.stopPropagation()\n                            dispatch(updateTask({ ...item, isCompleted: e.target.checked }))\n                          }}\n                        />\n                      </div>\n                      <span className='todo-title'>{item.title}</span>\n                    </div>\n                    <div className='todo-item-action mt-lg-0 mt-50'>\n                      {item.tags.length ? <div className='badge-wrapper me-1'>{renderTags(item.tags)}</div> : null}\n                      {item.dueDate ? (\n                        <small className='text-nowrap text-muted me-1'>\n                          {new Date(item.dueDate).toLocaleString('default', { month: 'short' })}{' '}\n                          {new Date(item.dueDate).getDate().toString().padStart(2, '0')}\n                        </small>\n                      ) : null}\n                      {item.assignee ? renderAvatar(item) : null}\n                    </div>\n                  </div>\n                </li>\n              )\n            })}\n          </ReactSortable>\n        ) : (\n          <div className='no-results show'>\n            <h5>No Items Found</h5>\n          </div>\n        )}\n      </PerfectScrollbar>\n    )\n  }\n\n  // ** Function to getTasks based on search query\n  const handleFilter = e => {\n    setQuery(e.target.value)\n    dispatch(getTasks(params))\n  }\n\n  // ** Function to getTasks based on sort\n  const handleSort = (e, val) => {\n    e.preventDefault()\n    setSort(val)\n    dispatch(getTasks({ ...params }))\n  }\n\n  return (\n    <div className='todo-app-list'>\n      <div className='app-fixed-search d-flex align-items-center'>\n        <div className='sidebar-toggle cursor-pointer d-block d-lg-none ms-1' onClick={handleMainSidebar}>\n          <Menu size={21} />\n        </div>\n        <div className='d-flex align-content-center justify-content-between w-100'>\n          <InputGroup className='input-group-merge'>\n            <InputGroupText>\n              <Search className='text-muted' size={14} />\n            </InputGroupText>\n            <Input placeholder='Search task' value={query} onChange={handleFilter} />\n          </InputGroup>\n        </div>\n        <UncontrolledDropdown>\n          <DropdownToggle className='hide-arrow me-1' tag='a' href='/' onClick={e => e.preventDefault()}>\n            <MoreVertical className='text-body' size={16} />\n          </DropdownToggle>\n          <DropdownMenu end>\n            <DropdownItem tag={Link} to='/' onClick={e => handleSort(e, 'title-asc')}>\n              Sort A-Z\n            </DropdownItem>\n            <DropdownItem tag={Link} to='/' onClick={e => handleSort(e, 'title-desc')}>\n              Sort Z-A\n            </DropdownItem>\n            <DropdownItem tag={Link} to='/' onClick={e => handleSort(e, 'assignee')}>\n              Sort Assignee\n            </DropdownItem>\n            <DropdownItem tag={Link} to='/' onClick={e => handleSort(e, 'due-date')}>\n              Sort Due Date\n            </DropdownItem>\n            <DropdownItem tag={Link} to='/' onClick={e => handleSort(e, '')}>\n              Reset Sort\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </div>\n      {renderTasks()}\n    </div>\n  )\n}\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}