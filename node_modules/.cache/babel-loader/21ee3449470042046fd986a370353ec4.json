{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\components\\\\modal\\\\ModalEvents.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState } from 'react'; // ** Reactstrap Imports\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalEvents = () => {\n  _s();\n\n  // ** States\n  const [modalOpened, setModalOpened] = useState(false);\n  const [modalClosed, setModalClosed] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"demo-inline-spacing\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"on-opened-modal\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        outline: true,\n        onClick: () => setModalOpened(!modalOpened),\n        children: \"On Opened\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalOpened,\n        onOpened: () => alert('On Opened Event Fired'),\n        toggle: () => setModalOpened(!modalOpened),\n        className: \"modal-dialog-centered\",\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: () => setModalOpened(!modalOpened),\n          children: \"Basic Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: \"Donut chocolate halvah I love caramels. Dessert croissant I love icing I love drag\\xE9e candy canes chocolate bar. Oat cake lollipop I love cake chocolate bar jelly sweet. I love cotton candy oat cake jelly.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => setModalOpened(!modalOpened),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"on-closed-modal\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        outline: true,\n        onClick: () => setModalClosed(!modalClosed),\n        children: \"On Closed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalClosed,\n        onClosed: () => alert('On Closed Event Fired'),\n        toggle: () => setModalClosed(!modalClosed),\n        className: \"modal-dialog-centered\",\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: () => setModalClosed(!modalClosed),\n          children: \"Basic Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: \"Donut chocolate halvah I love caramels. Dessert croissant I love icing I love drag\\xE9e candy canes chocolate bar. Oat cake lollipop I love cake chocolate bar jelly sweet. I love cotton candy oat cake jelly.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => setModalClosed(!modalClosed),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalEvents, \"4nMCMYLAxANG+k6/e3K8RSxWSd8=\");\n\n_c = ModalEvents;\nexport default ModalEvents;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalEvents\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/components/modal/ModalEvents.js"],"names":["useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","ModalEvents","modalOpened","setModalOpened","modalClosed","setModalClosed","alert"],"mappings":";;;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,MAA/B;AAAgC,QAAA,OAAO,EAAE,MAAMQ,cAAc,CAAC,CAACD,WAAF,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AACE,QAAA,MAAM,EAAEA,WADV;AAEE,QAAA,QAAQ,EAAE,MAAMI,KAAK,CAAC,uBAAD,CAFvB;AAGE,QAAA,MAAM,EAAE,MAAMH,cAAc,CAAC,CAACD,WAAF,CAH9B;AAIE,QAAA,SAAS,EAAC,uBAJZ;AAAA,gCAME,QAAC,WAAD;AAAa,UAAA,MAAM,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAF,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAWE,QAAC,WAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAF,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,MAA/B;AAAgC,QAAA,OAAO,EAAE,MAAMG,cAAc,CAAC,CAACD,WAAF,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AACE,QAAA,MAAM,EAAEA,WADV;AAEE,QAAA,QAAQ,EAAE,MAAME,KAAK,CAAC,uBAAD,CAFvB;AAGE,QAAA,MAAM,EAAE,MAAMD,cAAc,CAAC,CAACD,WAAF,CAH9B;AAIE,QAAA,SAAS,EAAC,uBAJZ;AAAA,gCAME,QAAC,WAAD;AAAa,UAAA,MAAM,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAF,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAWE,QAAC,WAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAF,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD,CArDD;;GAAMH,W;;KAAAA,W;AAuDN,eAAeA,WAAf","sourcesContent":["// ** React Imports\nimport { useState } from 'react'\n\n// ** Reactstrap Imports\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\n\nconst ModalEvents = () => {\n  // ** States\n  const [modalOpened, setModalOpened] = useState(false)\n  const [modalClosed, setModalClosed] = useState(false)\n\n  return (\n    <div className='demo-inline-spacing'>\n      <div className='on-opened-modal'>\n        <Button color='primary' outline onClick={() => setModalOpened(!modalOpened)}>\n          On Opened\n        </Button>\n        <Modal\n          isOpen={modalOpened}\n          onOpened={() => alert('On Opened Event Fired')}\n          toggle={() => setModalOpened(!modalOpened)}\n          className='modal-dialog-centered'\n        >\n          <ModalHeader toggle={() => setModalOpened(!modalOpened)}>Basic Modal</ModalHeader>\n          <ModalBody>\n            Donut chocolate halvah I love caramels. Dessert croissant I love icing I love dragée candy canes chocolate\n            bar. Oat cake lollipop I love cake chocolate bar jelly sweet. I love cotton candy oat cake jelly.\n          </ModalBody>\n          <ModalFooter>\n            <Button color='primary' onClick={() => setModalOpened(!modalOpened)}>\n              Accept\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n      <div className='on-closed-modal'>\n        <Button color='primary' outline onClick={() => setModalClosed(!modalClosed)}>\n          On Closed\n        </Button>\n        <Modal\n          isOpen={modalClosed}\n          onClosed={() => alert('On Closed Event Fired')}\n          toggle={() => setModalClosed(!modalClosed)}\n          className='modal-dialog-centered'\n        >\n          <ModalHeader toggle={() => setModalClosed(!modalClosed)}>Basic Modal</ModalHeader>\n          <ModalBody>\n            Donut chocolate halvah I love caramels. Dessert croissant I love icing I love dragée candy canes chocolate\n            bar. Oat cake lollipop I love cake chocolate bar jelly sweet. I love cotton candy oat cake jelly.\n          </ModalBody>\n          <ModalFooter>\n            <Button color='primary' onClick={() => setModalClosed(!modalClosed)}>\n              Accept\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  )\n}\n\nexport default ModalEvents\n"]},"metadata":{},"sourceType":"module"}