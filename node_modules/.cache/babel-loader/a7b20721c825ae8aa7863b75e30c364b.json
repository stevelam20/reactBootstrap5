{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\forms\\\\validation\\\\BasicHookForm.js\",\n    _s = $RefreshSig$();\n\n// ** Third Party Components\nimport toast from 'react-hot-toast';\nimport { Check } from 'react-feather';\nimport { useForm, Controller } from 'react-hook-form'; // ** Custom Components\n\nimport Avatar from '@components/avatar'; // ** Reactstrap Imports\n\nimport { Card, CardHeader, CardTitle, CardBody, Button, Label, Input, Form } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicHookForm = () => {\n  _s();\n\n  // ** Hooks\n  const {\n    reset,\n    control,\n    setError,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      toast( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"me-1\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            size: \"sm\",\n            color: \"success\",\n            icon: /*#__PURE__*/_jsxDEV(Check, {\n              size: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Form Submitted!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-unstyled mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"firstName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), \": \", data.firstNameBasic]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"lastName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this), \": \", data.lastNameBasic]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), \": \", data.emailBasic]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this));\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          });\n        }\n      }\n    }\n  };\n\n  const handleReset = () => {\n    reset({\n      emailBasic: '',\n      firstNameBasic: '',\n      lastNameBasic: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Basic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"firstNameBasic\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            defaultValue: \"\",\n            control: control,\n            id: \"firstNameBasic\",\n            name: \"firstNameBasic\",\n            render: _ref => {\n              let {\n                field\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Bruce\",\n                invalid: errors.firstNameBasic && true,\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 38\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"lastNameBasic\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            defaultValue: \"\",\n            control: control,\n            id: \"lastNameBasic\",\n            name: \"lastNameBasic\",\n            render: _ref2 => {\n              let {\n                field\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Wayne\",\n                invalid: errors.lastNameBasic && true,\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 38\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"emailBasic\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            defaultValue: \"\",\n            control: control,\n            id: \"emailBasic\",\n            name: \"emailBasic\",\n            render: _ref3 => {\n              let {\n                field\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                placeholder: \"bruce.wayne@email.com\",\n                invalid: errors.emailBasic && true,\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"me-1\",\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            outline: true,\n            color: \"secondary\",\n            type: \"reset\",\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicHookForm, \"RVakVBq67rUGzjHzr2yuCeaOujU=\", false, function () {\n  return [useForm];\n});\n\n_c = BasicHookForm;\nexport default BasicHookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicHookForm\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/forms/validation/BasicHookForm.js"],"names":["toast","Check","useForm","Controller","Avatar","Card","CardHeader","CardTitle","CardBody","Button","Label","Input","Form","BasicHookForm","reset","control","setError","handleSubmit","formState","errors","onSubmit","data","Object","values","every","field","length","firstNameBasic","lastNameBasic","emailBasic","key","type","handleReset"],"mappings":"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","sourcesContent":["// ** Third Party Components\nimport toast from 'react-hot-toast'\nimport { Check } from 'react-feather'\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Button, Label, Input, Form } from 'reactstrap'\n\nconst BasicHookForm = () => {\n  // ** Hooks\n  const {\n    reset,\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm()\n\n  const onSubmit = data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      toast(\n        <div className='d-flex'>\n          <div className='me-1'>\n            <Avatar size='sm' color='success' icon={<Check size={12} />} />\n          </div>\n          <div className='d-flex flex-column'>\n            <h6>Form Submitted!</h6>\n            <ul className='list-unstyled mb-0'>\n              <li>\n                <strong>firstName</strong>: {data.firstNameBasic}\n              </li>\n              <li>\n                <strong>lastName</strong>: {data.lastNameBasic}\n              </li>\n              <li>\n                <strong>email</strong>: {data.emailBasic}\n              </li>\n            </ul>\n          </div>\n        </div>\n      )\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          })\n        }\n      }\n    }\n  }\n\n  const handleReset = () => {\n    reset({\n      emailBasic: '',\n      firstNameBasic: '',\n      lastNameBasic: ''\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Basic</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <div className='mb-1'>\n            <Label className='form-label' for='firstNameBasic'>\n              First Name\n            </Label>\n            <Controller\n              defaultValue=''\n              control={control}\n              id='firstNameBasic'\n              name='firstNameBasic'\n              render={({ field }) => <Input placeholder='Bruce' invalid={errors.firstNameBasic && true} {...field} />}\n            />\n          </div>\n          <div className='mb-1'>\n            <Label className='form-label' for='lastNameBasic'>\n              Last Name\n            </Label>\n            <Controller\n              defaultValue=''\n              control={control}\n              id='lastNameBasic'\n              name='lastNameBasic'\n              render={({ field }) => <Input placeholder='Wayne' invalid={errors.lastNameBasic && true} {...field} />}\n            />\n          </div>\n          <div className='mb-1'>\n            <Label className='form-label' for='emailBasic'>\n              Email\n            </Label>\n            <Controller\n              defaultValue=''\n              control={control}\n              id='emailBasic'\n              name='emailBasic'\n              render={({ field }) => (\n                <Input\n                  type='email'\n                  placeholder='bruce.wayne@email.com'\n                  invalid={errors.emailBasic && true}\n                  {...field}\n                />\n              )}\n            />\n          </div>\n          <div className='d-flex'>\n            <Button className='me-1' color='primary' type='submit'>\n              Submit\n            </Button>\n            <Button outline color='secondary' type='reset' onClick={handleReset}>\n              Reset\n            </Button>\n          </div>\n        </Form>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default BasicHookForm\n"]},"metadata":{},"sourceType":"module"}