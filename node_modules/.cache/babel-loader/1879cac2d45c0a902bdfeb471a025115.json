{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\tables\\\\data-tables\\\\basic\\\\TableMultilingual.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState } from 'react'; // ** Table Columns\n\nimport { data, multiLingColumns } from '../data'; // ** Third Party Components\n\nimport ReactPaginate from 'react-paginate';\nimport { ChevronDown } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\nimport DataTable from 'react-data-table-component'; // ** Reactstrap Imports\n\nimport { Card, CardHeader, CardTitle, CardFooter, CardText, Input, Label, Row, Col } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DataTableWithButtons = () => {\n  _s();\n\n  // ** State\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchValue, setSearchValue] = useState('');\n  const [filteredData, setFilteredData] = useState([]); // ** Hooks\n\n  const {\n    t\n  } = useTranslation(); // ** Function to handle pagination\n\n  const handlePagination = page => {\n    setCurrentPage(page.selected);\n  }; // ** Function to handle filter\n\n\n  const handleFilter = e => {\n    const value = e.target.value;\n    let updatedData = [];\n    setSearchValue(value);\n    const status = {\n      1: {\n        title: 'Current',\n        color: 'light-primary'\n      },\n      2: {\n        title: 'Professional',\n        color: 'light-success'\n      },\n      3: {\n        title: 'Rejected',\n        color: 'light-danger'\n      },\n      4: {\n        title: 'Resigned',\n        color: 'light-warning'\n      },\n      5: {\n        title: 'Applied',\n        color: 'light-info'\n      }\n    };\n\n    if (value.length) {\n      updatedData = data.filter(item => {\n        const startsWith = item.full_name.toLowerCase().startsWith(value.toLowerCase()) || item.post.toLowerCase().startsWith(value.toLowerCase()) || item.email.toLowerCase().startsWith(value.toLowerCase()) || item.age.toLowerCase().startsWith(value.toLowerCase()) || item.salary.toLowerCase().startsWith(value.toLowerCase()) || item.start_date.toLowerCase().startsWith(value.toLowerCase()) || status[item.status].title.toLowerCase().startsWith(value.toLowerCase());\n        const includes = item.full_name.toLowerCase().includes(value.toLowerCase()) || item.post.toLowerCase().includes(value.toLowerCase()) || item.email.toLowerCase().includes(value.toLowerCase()) || item.age.toLowerCase().includes(value.toLowerCase()) || item.salary.toLowerCase().includes(value.toLowerCase()) || item.start_date.toLowerCase().includes(value.toLowerCase()) || status[item.status].title.toLowerCase().includes(value.toLowerCase());\n\n        if (startsWith) {\n          return startsWith;\n        } else if (!startsWith && includes) {\n          return includes;\n        } else return null;\n      });\n      setFilteredData(updatedData);\n      setSearchValue(value);\n    }\n  }; // ** Pagination Previous Component\n\n\n  const Previous = () => {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"align-middle d-none d-md-inline-block\",\n        children: t('Prev')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }; // ** Pagination Next Component\n\n\n  const Next = () => {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"align-middle d-none d-md-inline-block\",\n        children: t('Next')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }; // ** Custom Pagination Component\n\n\n  const CustomPagination = () => /*#__PURE__*/_jsxDEV(ReactPaginate, {\n    previousLabel: /*#__PURE__*/_jsxDEV(Previous, {\n      size: 15\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 22\n    }, this),\n    nextLabel: /*#__PURE__*/_jsxDEV(Next, {\n      size: 15\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 18\n    }, this),\n    forcePage: currentPage,\n    onPageChange: page => handlePagination(page),\n    pageCount: searchValue.length ? Math.ceil(filteredData.length / 7) : Math.ceil(data.length / 7) || 1,\n    breakLabel: '...',\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 2,\n    activeClassName: 'active',\n    pageClassName: 'page-item',\n    nextLinkClassName: 'page-link',\n    nextClassName: 'page-item next',\n    previousClassName: 'page-item prev',\n    previousLinkClassName: 'page-link',\n    pageLinkClassName: 'page-link',\n    breakClassName: \"page-item\",\n    breakLinkClassName: \"page-link\",\n    containerClassName: 'pagination react-paginate pagination-sm justify-content-end pe-1 mt-1'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      className: \"border-bottom\",\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Multilingual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-end mx-0\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"d-flex align-items-center justify-content-end mt-1\",\n        md: \"6\",\n        sm: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"me-1\",\n          for: \"search-input-1\",\n          children: t('Search')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: \"dataTable-filter mb-50\",\n          type: \"text\",\n          bsSize: \"sm\",\n          id: \"search-input-1\",\n          value: searchValue,\n          onChange: handleFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"react-dataTable\",\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        noHeader: true,\n        pagination: true,\n        selectableRowsNoSelectAll: true,\n        columns: multiLingColumns,\n        className: \"react-dataTable\",\n        paginationPerPage: 7,\n        sortIcon: /*#__PURE__*/_jsxDEV(ChevronDown, {\n          size: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this),\n        paginationDefaultPage: currentPage + 1,\n        paginationComponent: CustomPagination,\n        data: searchValue.length ? filteredData : data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n      children: /*#__PURE__*/_jsxDEV(CardText, {\n        className: \"mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"fw-bold\",\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Use Intl Dropdown in Navbar to change table language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataTableWithButtons, \"cPNMJC/s+ecU1QT/J7ssP5ww2Go=\", false, function () {\n  return [useTranslation];\n});\n\n_c = DataTableWithButtons;\nexport default DataTableWithButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTableWithButtons\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/tables/data-tables/basic/TableMultilingual.js"],"names":["Fragment","useState","data","multiLingColumns","ReactPaginate","ChevronDown","useTranslation","DataTable","Card","CardHeader","CardTitle","CardFooter","CardText","Input","Label","Row","Col","DataTableWithButtons","currentPage","setCurrentPage","searchValue","setSearchValue","filteredData","setFilteredData","t","handlePagination","page","selected","handleFilter","e","value","target","updatedData","status","title","color","length","filter","item","startsWith","full_name","toLowerCase","post","email","age","salary","start_date","includes","Previous","Next","CustomPagination","Math","ceil"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Table Columns\nimport { data, multiLingColumns } from '../data'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport { useTranslation } from 'react-i18next'\nimport DataTable from 'react-data-table-component'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardFooter, CardText, Input, Label, Row, Col } from 'reactstrap'\n\nconst DataTableWithButtons = () => {\n  // ** State\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n\n  // ** Hooks\n  const { t } = useTranslation()\n\n  // ** Function to handle pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    setSearchValue(value)\n\n    const status = {\n      1: { title: 'Current', color: 'light-primary' },\n      2: { title: 'Professional', color: 'light-success' },\n      3: { title: 'Rejected', color: 'light-danger' },\n      4: { title: 'Resigned', color: 'light-warning' },\n      5: { title: 'Applied', color: 'light-info' }\n    }\n\n    if (value.length) {\n      updatedData = data.filter(item => {\n        const startsWith =\n          item.full_name.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.post.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.email.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.age.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.salary.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.start_date.toLowerCase().startsWith(value.toLowerCase()) ||\n          status[item.status].title.toLowerCase().startsWith(value.toLowerCase())\n\n        const includes =\n          item.full_name.toLowerCase().includes(value.toLowerCase()) ||\n          item.post.toLowerCase().includes(value.toLowerCase()) ||\n          item.email.toLowerCase().includes(value.toLowerCase()) ||\n          item.age.toLowerCase().includes(value.toLowerCase()) ||\n          item.salary.toLowerCase().includes(value.toLowerCase()) ||\n          item.start_date.toLowerCase().includes(value.toLowerCase()) ||\n          status[item.status].title.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n      })\n      setFilteredData(updatedData)\n      setSearchValue(value)\n    }\n  }\n\n  // ** Pagination Previous Component\n  const Previous = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>{t('Prev')}</span>\n      </Fragment>\n    )\n  }\n\n  // ** Pagination Next Component\n  const Next = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>{t('Next')}</span>\n      </Fragment>\n    )\n  }\n\n  // ** Custom Pagination Component\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel={<Previous size={15} />}\n      nextLabel={<Next size={15} />}\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? Math.ceil(filteredData.length / 7) : Math.ceil(data.length / 7) || 1}\n      breakLabel={'...'}\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName={'active'}\n      pageClassName={'page-item'}\n      nextLinkClassName={'page-link'}\n      nextClassName={'page-item next'}\n      previousClassName={'page-item prev'}\n      previousLinkClassName={'page-link'}\n      pageLinkClassName={'page-link'}\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName={'pagination react-paginate pagination-sm justify-content-end pe-1 mt-1'}\n    />\n  )\n\n  return (\n    <Card>\n      <CardHeader className='border-bottom'>\n        <CardTitle tag='h4'>Multilingual</CardTitle>\n      </CardHeader>\n      <Row className='justify-content-end mx-0'>\n        <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n          <Label className='me-1' for='search-input-1'>\n            {t('Search')}\n          </Label>\n          <Input\n            className='dataTable-filter mb-50'\n            type='text'\n            bsSize='sm'\n            id='search-input-1'\n            value={searchValue}\n            onChange={handleFilter}\n          />\n        </Col>\n      </Row>\n      <div className='react-dataTable'>\n        <DataTable\n          noHeader\n          pagination\n          selectableRowsNoSelectAll\n          columns={multiLingColumns}\n          className='react-dataTable'\n          paginationPerPage={7}\n          sortIcon={<ChevronDown size={10} />}\n          paginationDefaultPage={currentPage + 1}\n          paginationComponent={CustomPagination}\n          data={searchValue.length ? filteredData : data}\n        />\n      </div>\n      <CardFooter>\n        <CardText className='mb-0'>\n          <span className='fw-bold'>Note:</span> <span>Use Intl Dropdown in Navbar to change table language</span>\n        </CardText>\n      </CardFooter>\n    </Card>\n  )\n}\n\nexport default DataTableWithButtons\n"]},"metadata":{},"sourceType":"module"}