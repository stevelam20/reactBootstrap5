{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\apps\\\\invoice\\\\preview\\\\index.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom'; // ** Third Party Components\n\nimport axios from 'axios'; // ** Reactstrap Imports\n\nimport { Row, Col, Alert } from 'reactstrap'; // ** Invoice Preview Components\n\nimport PreviewCard from './PreviewCard';\nimport PreviewActions from './PreviewActions';\nimport AddPaymentSidebar from '../shared-sidebar/SidebarAddPayment';\nimport SendInvoiceSidebar from '../shared-sidebar/SidebarSendInvoice'; // ** Styles\n\nimport '@styles/base/pages/app-invoice.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InvoicePreview = () => {\n  _s();\n\n  // ** HooksVars\n  const {\n    id\n  } = useParams(); // ** States\n\n  const [data, setData] = useState(null);\n  const [sendSidebarOpen, setSendSidebarOpen] = useState(false);\n  const [addPaymentOpen, setAddPaymentOpen] = useState(false); // ** Functions to toggle add & send sidebar\n\n  const toggleSendSidebar = () => setSendSidebarOpen(!sendSidebarOpen);\n\n  const toggleAddSidebar = () => setAddPaymentOpen(!addPaymentOpen); // ** Get invoice on mount based on id\n\n\n  useEffect(() => {\n    axios.get(`/api/invoice/invoices/${id}`).then(response => {\n      setData(response.data);\n    });\n  }, []);\n  return data !== null && data.invoice !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"invoice-preview-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"invoice-preview\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xl: 9,\n        md: 8,\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(PreviewCard, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xl: 3,\n        md: 4,\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(PreviewActions, {\n          id: id,\n          setSendSidebarOpen: setSendSidebarOpen,\n          setAddPaymentOpen: setAddPaymentOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SendInvoiceSidebar, {\n      toggleSidebar: toggleSendSidebar,\n      open: sendSidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPaymentSidebar, {\n      toggleSidebar: toggleAddSidebar,\n      open: addPaymentOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n    color: \"danger\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"alert-heading\",\n      children: \"Invoice not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-body\",\n      children: [\"Invoice with id: \", id, \" doesn't exist. Check list of all invoices:\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/apps/invoice/list\",\n        children: \"Invoice List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InvoicePreview, \"UKfWZu+zsxJzFK48qTPHD/ZY6Yg=\", false, function () {\n  return [useParams];\n});\n\n_c = InvoicePreview;\nexport default InvoicePreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoicePreview\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/apps/invoice/preview/index.js"],"names":["useEffect","useState","useParams","Link","axios","Row","Col","Alert","PreviewCard","PreviewActions","AddPaymentSidebar","SendInvoiceSidebar","InvoicePreview","id","data","setData","sendSidebarOpen","setSendSidebarOpen","addPaymentOpen","setAddPaymentOpen","toggleSendSidebar","toggleAddSidebar","get","then","response","invoice","undefined"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Reactstrap Imports\nimport { Row, Col, Alert } from 'reactstrap'\n\n// ** Invoice Preview Components\nimport PreviewCard from './PreviewCard'\nimport PreviewActions from './PreviewActions'\nimport AddPaymentSidebar from '../shared-sidebar/SidebarAddPayment'\nimport SendInvoiceSidebar from '../shared-sidebar/SidebarSendInvoice'\n\n// ** Styles\nimport '@styles/base/pages/app-invoice.scss'\n\nconst InvoicePreview = () => {\n  // ** HooksVars\n  const { id } = useParams()\n\n  // ** States\n  const [data, setData] = useState(null)\n  const [sendSidebarOpen, setSendSidebarOpen] = useState(false)\n  const [addPaymentOpen, setAddPaymentOpen] = useState(false)\n\n  // ** Functions to toggle add & send sidebar\n  const toggleSendSidebar = () => setSendSidebarOpen(!sendSidebarOpen)\n  const toggleAddSidebar = () => setAddPaymentOpen(!addPaymentOpen)\n\n  // ** Get invoice on mount based on id\n  useEffect(() => {\n    axios.get(`/api/invoice/invoices/${id}`).then(response => {\n      setData(response.data)\n    })\n  }, [])\n\n  return data !== null && data.invoice !== undefined ? (\n    <div className='invoice-preview-wrapper'>\n      <Row className='invoice-preview'>\n        <Col xl={9} md={8} sm={12}>\n          <PreviewCard data={data} />\n        </Col>\n        <Col xl={3} md={4} sm={12}>\n          <PreviewActions id={id} setSendSidebarOpen={setSendSidebarOpen} setAddPaymentOpen={setAddPaymentOpen} />\n        </Col>\n      </Row>\n      <SendInvoiceSidebar toggleSidebar={toggleSendSidebar} open={sendSidebarOpen} />\n      <AddPaymentSidebar toggleSidebar={toggleAddSidebar} open={addPaymentOpen} />\n    </div>\n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>Invoice not found</h4>\n      <div className='alert-body'>\n        Invoice with id: {id} doesn't exist. Check list of all invoices:{' '}\n        <Link to='/apps/invoice/list'>Invoice List</Link>\n      </div>\n    </Alert>\n  )\n}\n\nexport default InvoicePreview\n"]},"metadata":{},"sourceType":"module"}