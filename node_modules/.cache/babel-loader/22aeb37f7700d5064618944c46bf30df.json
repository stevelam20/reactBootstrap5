{"ast":null,"code":"// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'; // ** Axios Imports\n\nimport axios from 'axios';\nexport const getAllData = createAsyncThunk('appUsers/getAllData', async () => {\n  const response = await axios.get('/api/users/list/all-data');\n  return response.data;\n});\nexport const getData = createAsyncThunk('appUsers/getData', async params => {\n  const response = await axios.get('/api/users/list/data', params);\n  return {\n    params,\n    data: response.data.users,\n    totalPages: response.data.total\n  };\n});\nexport const getUser = createAsyncThunk('appUsers/getUser', async id => {\n  const response = await axios.get('/api/users/user', {\n    id\n  });\n  return response.data.user;\n});\nexport const addUser = createAsyncThunk('appUsers/addUser', async (user, _ref) => {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n  await axios.post('/apps/users/add-user', user);\n  await dispatch(getData(getState().users.params));\n  await dispatch(getAllData());\n  return user;\n});\nexport const deleteUser = createAsyncThunk('appUsers/deleteUser', async (id, _ref2) => {\n  let {\n    dispatch,\n    getState\n  } = _ref2;\n  await axios.delete('/apps/users/delete', {\n    id\n  });\n  await dispatch(getData(getState().users.params));\n  await dispatch(getAllData());\n  return id;\n});\nexport const appUsersSlice = createSlice({\n  name: 'appUsers',\n  initialState: {\n    data: [],\n    total: 1,\n    params: {},\n    allData: [],\n    selectedUser: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getAllData.fulfilled, (state, action) => {\n      state.allData = action.payload;\n    }).addCase(getData.fulfilled, (state, action) => {\n      state.data = action.payload.data;\n      state.params = action.payload.params;\n      state.total = action.payload.totalPages;\n    }).addCase(getUser.fulfilled, (state, action) => {\n      state.selectedUser = action.payload;\n    });\n  }\n});\nexport default appUsersSlice.reducer;","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/apps/user/store/index.js"],"names":["createSlice","createAsyncThunk","axios","getAllData","response","get","data","getData","params","users","totalPages","total","getUser","id","user","addUser","dispatch","getState","post","deleteUser","delete","appUsersSlice","name","initialState","allData","selectedUser","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,qBAAD,EAAwB,YAAY;AAC5E,QAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,0BAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAHyC,CAAnC;AAKP,OAAO,MAAMC,OAAO,GAAGN,gBAAgB,CAAC,kBAAD,EAAqB,MAAMO,MAAN,IAAgB;AAC1E,QAAMJ,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,sBAAV,EAAkCG,MAAlC,CAAvB;AACA,SAAO;AACLA,IAAAA,MADK;AAELF,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IAAT,CAAcG,KAFf;AAGLC,IAAAA,UAAU,EAAEN,QAAQ,CAACE,IAAT,CAAcK;AAHrB,GAAP;AAKD,CAPsC,CAAhC;AASP,OAAO,MAAMC,OAAO,GAAGX,gBAAgB,CAAC,kBAAD,EAAqB,MAAMY,EAAN,IAAY;AACtE,QAAMT,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,iBAAV,EAA6B;AAAEQ,IAAAA;AAAF,GAA7B,CAAvB;AACA,SAAOT,QAAQ,CAACE,IAAT,CAAcQ,IAArB;AACD,CAHsC,CAAhC;AAKP,OAAO,MAAMC,OAAO,GAAGd,gBAAgB,CAAC,kBAAD,EAAqB,OAAOa,IAAP,WAAwC;AAAA,MAA3B;AAAEE,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA2B;AAClG,QAAMf,KAAK,CAACgB,IAAN,CAAW,sBAAX,EAAmCJ,IAAnC,CAAN;AACA,QAAME,QAAQ,CAACT,OAAO,CAACU,QAAQ,GAAGR,KAAX,CAAiBD,MAAlB,CAAR,CAAd;AACA,QAAMQ,QAAQ,CAACb,UAAU,EAAX,CAAd;AACA,SAAOW,IAAP;AACD,CALsC,CAAhC;AAOP,OAAO,MAAMK,UAAU,GAAGlB,gBAAgB,CAAC,qBAAD,EAAwB,OAAOY,EAAP,YAAsC;AAAA,MAA3B;AAAEG,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA2B;AACtG,QAAMf,KAAK,CAACkB,MAAN,CAAa,oBAAb,EAAmC;AAAEP,IAAAA;AAAF,GAAnC,CAAN;AACA,QAAMG,QAAQ,CAACT,OAAO,CAACU,QAAQ,GAAGR,KAAX,CAAiBD,MAAlB,CAAR,CAAd;AACA,QAAMQ,QAAQ,CAACb,UAAU,EAAX,CAAd;AACA,SAAOU,EAAP;AACD,CALyC,CAAnC;AAOP,OAAO,MAAMQ,aAAa,GAAGrB,WAAW,CAAC;AACvCsB,EAAAA,IAAI,EAAE,UADiC;AAEvCC,EAAAA,YAAY,EAAE;AACZjB,IAAAA,IAAI,EAAE,EADM;AAEZK,IAAAA,KAAK,EAAE,CAFK;AAGZH,IAAAA,MAAM,EAAE,EAHI;AAIZgB,IAAAA,OAAO,EAAE,EAJG;AAKZC,IAAAA,YAAY,EAAE;AALF,GAFyB;AASvCC,EAAAA,QAAQ,EAAE,EAT6B;AAUvCC,EAAAA,aAAa,EAAEC,OAAO,IAAI;AACxBA,IAAAA,OAAO,CACJC,OADH,CACW1B,UAAU,CAAC2B,SADtB,EACiC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChDD,MAAAA,KAAK,CAACP,OAAN,GAAgBQ,MAAM,CAACC,OAAvB;AACD,KAHH,EAIGJ,OAJH,CAIWtB,OAAO,CAACuB,SAJnB,EAI8B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7CD,MAAAA,KAAK,CAACzB,IAAN,GAAa0B,MAAM,CAACC,OAAP,CAAe3B,IAA5B;AACAyB,MAAAA,KAAK,CAACvB,MAAN,GAAewB,MAAM,CAACC,OAAP,CAAezB,MAA9B;AACAuB,MAAAA,KAAK,CAACpB,KAAN,GAAcqB,MAAM,CAACC,OAAP,CAAevB,UAA7B;AACD,KARH,EASGmB,OATH,CASWjB,OAAO,CAACkB,SATnB,EAS8B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7CD,MAAAA,KAAK,CAACN,YAAN,GAAqBO,MAAM,CAACC,OAA5B;AACD,KAXH;AAYD;AAvBsC,CAAD,CAAjC;AA0BP,eAAeZ,aAAa,CAACa,OAA7B","sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from 'axios'\n\nexport const getAllData = createAsyncThunk('appUsers/getAllData', async () => {\n  const response = await axios.get('/api/users/list/all-data')\n  return response.data\n})\n\nexport const getData = createAsyncThunk('appUsers/getData', async params => {\n  const response = await axios.get('/api/users/list/data', params)\n  return {\n    params,\n    data: response.data.users,\n    totalPages: response.data.total\n  }\n})\n\nexport const getUser = createAsyncThunk('appUsers/getUser', async id => {\n  const response = await axios.get('/api/users/user', { id })\n  return response.data.user\n})\n\nexport const addUser = createAsyncThunk('appUsers/addUser', async (user, { dispatch, getState }) => {\n  await axios.post('/apps/users/add-user', user)\n  await dispatch(getData(getState().users.params))\n  await dispatch(getAllData())\n  return user\n})\n\nexport const deleteUser = createAsyncThunk('appUsers/deleteUser', async (id, { dispatch, getState }) => {\n  await axios.delete('/apps/users/delete', { id })\n  await dispatch(getData(getState().users.params))\n  await dispatch(getAllData())\n  return id\n})\n\nexport const appUsersSlice = createSlice({\n  name: 'appUsers',\n  initialState: {\n    data: [],\n    total: 1,\n    params: {},\n    allData: [],\n    selectedUser: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getAllData.fulfilled, (state, action) => {\n        state.allData = action.payload\n      })\n      .addCase(getData.fulfilled, (state, action) => {\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.total = action.payload.totalPages\n      })\n      .addCase(getUser.fulfilled, (state, action) => {\n        state.selectedUser = action.payload\n      })\n  }\n})\n\nexport default appUsersSlice.reducer\n"]},"metadata":{},"sourceType":"module"}