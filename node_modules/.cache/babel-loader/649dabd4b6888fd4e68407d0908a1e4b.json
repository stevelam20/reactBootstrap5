{"ast":null,"code":"// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'; // ** Axios Imports\n\nimport axios from 'axios';\nexport const getData = createAsyncThunk('appInvoice/getData', async params => {\n  const response = await axios.get('/apps/invoice/invoices', params);\n  return {\n    params,\n    data: response.data.invoices,\n    allData: response.data.allData,\n    totalPages: response.data.total\n  };\n});\nexport const deleteInvoice = createAsyncThunk('appInvoice/deleteInvoice', async (id, _ref) => {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n  await axios.delete('/apps/invoice/delete', {\n    id\n  });\n  await dispatch(getData(getState().invoice.params));\n  return id;\n});\nexport const appInvoiceSlice = createSlice({\n  name: 'appInvoice',\n  initialState: {\n    data: [],\n    total: 1,\n    params: {},\n    allData: []\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getData.fulfilled, (state, action) => {\n      state.data = action.payload.data;\n      state.allData = action.payload.allData;\n      state.total = action.payload.totalPages;\n      state.params = action.payload.params;\n    });\n  }\n});\nexport default appInvoiceSlice.reducer;","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/apps/invoice/store/index.js"],"names":["createSlice","createAsyncThunk","axios","getData","params","response","get","data","invoices","allData","totalPages","total","deleteInvoice","id","dispatch","getState","delete","invoice","appInvoiceSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAGF,gBAAgB,CAAC,oBAAD,EAAuB,MAAMG,MAAN,IAAgB;AAC5E,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,wBAAV,EAAoCF,MAApC,CAAvB;AACA,SAAO;AACLA,IAAAA,MADK;AAELG,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IAAT,CAAcC,QAFf;AAGLC,IAAAA,OAAO,EAAEJ,QAAQ,CAACE,IAAT,CAAcE,OAHlB;AAILC,IAAAA,UAAU,EAAEL,QAAQ,CAACE,IAAT,CAAcI;AAJrB,GAAP;AAMD,CARsC,CAAhC;AAUP,OAAO,MAAMC,aAAa,GAAGX,gBAAgB,CAAC,0BAAD,EAA6B,OAAOY,EAAP,WAAsC;AAAA,MAA3B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA2B;AAC9G,QAAMb,KAAK,CAACc,MAAN,CAAa,sBAAb,EAAqC;AAAEH,IAAAA;AAAF,GAArC,CAAN;AACA,QAAMC,QAAQ,CAACX,OAAO,CAACY,QAAQ,GAAGE,OAAX,CAAmBb,MAApB,CAAR,CAAd;AACA,SAAOS,EAAP;AACD,CAJ4C,CAAtC;AAMP,OAAO,MAAMK,eAAe,GAAGlB,WAAW,CAAC;AACzCmB,EAAAA,IAAI,EAAE,YADmC;AAEzCC,EAAAA,YAAY,EAAE;AACZb,IAAAA,IAAI,EAAE,EADM;AAEZI,IAAAA,KAAK,EAAE,CAFK;AAGZP,IAAAA,MAAM,EAAE,EAHI;AAIZK,IAAAA,OAAO,EAAE;AAJG,GAF2B;AAQzCY,EAAAA,QAAQ,EAAE,EAR+B;AASzCC,EAAAA,aAAa,EAAEC,OAAO,IAAI;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,OAAO,CAACsB,SAAxB,EAAmC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpDD,MAAAA,KAAK,CAACnB,IAAN,GAAaoB,MAAM,CAACC,OAAP,CAAerB,IAA5B;AACAmB,MAAAA,KAAK,CAACjB,OAAN,GAAgBkB,MAAM,CAACC,OAAP,CAAenB,OAA/B;AACAiB,MAAAA,KAAK,CAACf,KAAN,GAAcgB,MAAM,CAACC,OAAP,CAAelB,UAA7B;AACAgB,MAAAA,KAAK,CAACtB,MAAN,GAAeuB,MAAM,CAACC,OAAP,CAAexB,MAA9B;AACD,KALD;AAMD;AAhBwC,CAAD,CAAnC;AAmBP,eAAec,eAAe,CAACW,OAA/B","sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from 'axios'\n\nexport const getData = createAsyncThunk('appInvoice/getData', async params => {\n  const response = await axios.get('/apps/invoice/invoices', params)\n  return {\n    params,\n    data: response.data.invoices,\n    allData: response.data.allData,\n    totalPages: response.data.total\n  }\n})\n\nexport const deleteInvoice = createAsyncThunk('appInvoice/deleteInvoice', async (id, { dispatch, getState }) => {\n  await axios.delete('/apps/invoice/delete', { id })\n  await dispatch(getData(getState().invoice.params))\n  return id\n})\n\nexport const appInvoiceSlice = createSlice({\n  name: 'appInvoice',\n  initialState: {\n    data: [],\n    total: 1,\n    params: {},\n    allData: []\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getData.fulfilled, (state, action) => {\n      state.data = action.payload.data\n      state.allData = action.payload.allData\n      state.total = action.payload.totalPages\n      state.params = action.payload.params\n    })\n  }\n})\n\nexport default appInvoiceSlice.reducer\n"]},"metadata":{},"sourceType":"module"}