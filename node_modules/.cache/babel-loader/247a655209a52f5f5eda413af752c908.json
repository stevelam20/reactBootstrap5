{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\apps\\\\calendar\\\\AddEventSidebar.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState } from 'react'; // ** Custom Components\n\nimport Avatar from '@components/avatar'; // ** Third Party Components\n\nimport { X } from 'react-feather';\nimport toast from 'react-hot-toast';\nimport Flatpickr from 'react-flatpickr';\nimport Select, { components } from 'react-select'; // eslint-disable-line\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useForm, Controller } from 'react-hook-form'; // ** Reactstrap Imports\n\nimport { Button, Modal, ModalHeader, ModalBody, Label, Input, Form } from 'reactstrap'; // ** Utils\n\nimport { selectThemeColors, isObjEmpty } from '@utils'; // ** Avatar Images\n\nimport img1 from '@src/assets/images/avatars/1-small.png';\nimport img2 from '@src/assets/images/avatars/3-small.png';\nimport img3 from '@src/assets/images/avatars/5-small.png';\nimport img4 from '@src/assets/images/avatars/7-small.png';\nimport img5 from '@src/assets/images/avatars/9-small.png';\nimport img6 from '@src/assets/images/avatars/11-small.png'; // ** Styles Imports\n\nimport '@styles/react/libs/react-select/_react-select.scss';\nimport '@styles/react/libs/flatpickr/flatpickr.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEventSidebar = props => {\n  _s();\n\n  // ** Props\n  const {\n    open,\n    store,\n    dispatch,\n    addEvent,\n    calendarApi,\n    selectEvent,\n    updateEvent,\n    removeEvent,\n    refetchEvents,\n    calendarsColor,\n    handleAddEventSidebar\n  } = props; // ** Vars & Hooks\n\n  const selectedEvent = store.selectedEvent,\n        {\n    control,\n    setError,\n    setValue,\n    getValues,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      title: ''\n    }\n  }); // ** States\n\n  const [url, setUrl] = useState('');\n  const [desc, setDesc] = useState('');\n  const [guests, setGuests] = useState({});\n  const [allDay, setAllDay] = useState(false);\n  const [location, setLocation] = useState('');\n  const [endPicker, setEndPicker] = useState(new Date());\n  const [startPicker, setStartPicker] = useState(new Date());\n  const [calendarLabel, setCalendarLabel] = useState([{\n    value: 'Business',\n    label: 'Business',\n    color: 'primary'\n  }]); // ** Select Options\n\n  const options = [{\n    value: 'Business',\n    label: 'Business',\n    color: 'primary'\n  }, {\n    value: 'Personal',\n    label: 'Personal',\n    color: 'danger'\n  }, {\n    value: 'Family',\n    label: 'Family',\n    color: 'warning'\n  }, {\n    value: 'Holiday',\n    label: 'Holiday',\n    color: 'success'\n  }, {\n    value: 'ETC',\n    label: 'ETC',\n    color: 'info'\n  }];\n  const guestsOptions = [{\n    value: 'Donna Frank',\n    label: 'Donna Frank',\n    avatar: img1\n  }, {\n    value: 'Jane Foster',\n    label: 'Jane Foster',\n    avatar: img2\n  }, {\n    value: 'Gabrielle Robertson',\n    label: 'Gabrielle Robertson',\n    avatar: img3\n  }, {\n    value: 'Lori Spears',\n    label: 'Lori Spears',\n    avatar: img4\n  }, {\n    value: 'Sandy Vega',\n    label: 'Sandy Vega',\n    avatar: img5\n  }, {\n    value: 'Cheryl May',\n    label: 'Cheryl May',\n    avatar: img6\n  }]; // ** Custom select components\n\n  const OptionComponent = _ref => {\n    let {\n      data,\n      ...props\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `bullet bullet-${data.color} bullet-sm me-50`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), data.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  };\n\n  const GuestsComponent = _ref2 => {\n    let {\n      data,\n      ...props\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: \"my-0 me-1\",\n          size: \"sm\",\n          img: data.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }; // ** Adds New Event\n\n\n  const handleAddEvent = () => {\n    const obj = {\n      title: getValues('title'),\n      start: startPicker,\n      end: endPicker,\n      allDay,\n      display: 'block',\n      extendedProps: {\n        calendar: calendarLabel[0].label,\n        url: url.length ? url : undefined,\n        guests: guests.length ? guests : undefined,\n        location: location.length ? location : undefined,\n        desc: desc.length ? desc : undefined\n      }\n    };\n    dispatch(addEvent(obj));\n    refetchEvents();\n    handleAddEventSidebar();\n    toast.success('Event Added');\n  }; // ** Reset Input Values on Close\n\n\n  const handleResetInputValues = () => {\n    dispatch(selectEvent({}));\n    setValue('title', '');\n    setAllDay(false);\n    setUrl('');\n    setLocation('');\n    setDesc('');\n    setGuests({});\n    setCalendarLabel([{\n      value: 'Business',\n      label: 'Business',\n      color: 'primary'\n    }]);\n    setStartPicker(new Date());\n    setEndPicker(new Date());\n  }; // ** Set sidebar fields\n\n\n  const handleSelectedEvent = () => {\n    if (!isObjEmpty(selectedEvent)) {\n      const calendar = selectedEvent.extendedProps.calendar;\n\n      const resolveLabel = () => {\n        if (calendar.length) {\n          return {\n            label: calendar,\n            value: calendar,\n            color: calendarsColor[calendar]\n          };\n        } else {\n          return {\n            value: 'Business',\n            label: 'Business',\n            color: 'primary'\n          };\n        }\n      };\n\n      setValue('title', selectedEvent.title || getValues('title'));\n      setAllDay(selectedEvent.allDay || allDay);\n      setUrl(selectedEvent.url || url);\n      setLocation(selectedEvent.extendedProps.location || location);\n      setDesc(selectedEvent.extendedProps.description || desc);\n      setGuests(selectedEvent.extendedProps.guests || guests);\n      setStartPicker(new Date(selectedEvent.start));\n      setEndPicker(selectedEvent.allDay ? new Date(selectedEvent.start) : new Date(selectedEvent.end));\n      setCalendarLabel([resolveLabel()]);\n    }\n  }; // ** (UI) updateEventInCalendar\n\n\n  const updateEventInCalendar = (updatedEventData, propsToUpdate, extendedPropsToUpdate) => {\n    const existingEvent = calendarApi.getEventById(updatedEventData.id); // ** Set event properties except date related\n    // ? Docs: https://fullcalendar.io/docs/Event-setProp\n    // ** dateRelatedProps => ['start', 'end', 'allDay']\n    // ** eslint-disable-next-line no-plusplus\n\n    for (let index = 0; index < propsToUpdate.length; index++) {\n      const propName = propsToUpdate[index];\n      existingEvent.setProp(propName, updatedEventData[propName]);\n    } // ** Set date related props\n    // ? Docs: https://fullcalendar.io/docs/Event-setDates\n\n\n    existingEvent.setDates(new Date(updatedEventData.start), new Date(updatedEventData.end), {\n      allDay: updatedEventData.allDay\n    }); // ** Set event's extendedProps\n    // ? Docs: https://fullcalendar.io/docs/Event-setExtendedProp\n    // ** eslint-disable-next-line no-plusplus\n\n    for (let index = 0; index < extendedPropsToUpdate.length; index++) {\n      const propName = extendedPropsToUpdate[index];\n      existingEvent.setExtendedProp(propName, updatedEventData.extendedProps[propName]);\n    }\n  }; // ** Updates Event in Store\n\n\n  const handleUpdateEvent = () => {\n    if (getValues('title').length) {\n      const eventToUpdate = {\n        id: selectedEvent.id,\n        title: getValues('title'),\n        allDay,\n        start: startPicker,\n        end: endPicker,\n        url,\n        display: allDay === false ? 'block' : undefined,\n        extendedProps: {\n          location,\n          description: desc,\n          guests,\n          calendar: calendarLabel[0].label\n        }\n      };\n      const propsToUpdate = ['id', 'title', 'url'];\n      const extendedPropsToUpdate = ['calendar', 'guests', 'location', 'description'];\n      dispatch(updateEvent(eventToUpdate));\n      updateEventInCalendar(eventToUpdate, propsToUpdate, extendedPropsToUpdate);\n      handleAddEventSidebar();\n      toast.success('Event Updated');\n    } else {\n      setError('title', {\n        type: 'manual'\n      });\n    }\n  }; // ** (UI) removeEventInCalendar\n\n\n  const removeEventInCalendar = eventId => {\n    calendarApi.getEventById(eventId).remove();\n  };\n\n  const handleDeleteEvent = () => {\n    dispatch(removeEvent(selectedEvent.id));\n    removeEventInCalendar(selectedEvent.id);\n    handleAddEventSidebar();\n    toast.error('Event Removed');\n  }; // ** Event Action buttons\n\n\n  const EventActions = () => {\n    if (isObjEmpty(selectedEvent) || !isObjEmpty(selectedEvent) && !selectedEvent.title.length) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"me-1\",\n          type: \"submit\",\n          color: \"primary\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          type: \"reset\",\n          onClick: handleAddEventSidebar,\n          outline: true,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"me-1\",\n          color: \"primary\",\n          onClick: handleUpdateEvent,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          onClick: handleDeleteEvent,\n          outline: true,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this);\n    }\n  }; // ** Close BTN\n\n\n  const CloseBtn = /*#__PURE__*/_jsxDEV(X, {\n    className: \"cursor-pointer\",\n    size: 15,\n    onClick: handleAddEventSidebar\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 20\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: open,\n    className: \"sidebar-lg\",\n    toggle: handleAddEventSidebar,\n    onOpened: handleSelectedEvent,\n    onClosed: handleResetInputValues,\n    contentClassName: \"p-0 overflow-hidden\",\n    modalClassName: \"modal-slide-in event-sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      className: \"mb-1\",\n      toggle: handleAddEventSidebar,\n      close: CloseBtn,\n      tag: \"div\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title\",\n        children: [selectedEvent && selectedEvent.title && selectedEvent.title.length ? 'Update' : 'Add', \" Event\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n      options: {\n        wheelPropagation: false\n      },\n      children: /*#__PURE__*/_jsxDEV(ModalBody, {\n        className: \"flex-grow-1 pb-sm-0 pb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(data => {\n            if (data.title.length) {\n              if (isObjEmpty(errors)) {\n                if (isObjEmpty(selectedEvent) || !isObjEmpty(selectedEvent) && !selectedEvent.title.length) {\n                  handleAddEvent();\n                } else {\n                  handleUpdateEvent();\n                }\n\n                handleAddEventSidebar();\n              }\n            } else {\n              setError('title', {\n                type: 'manual'\n              });\n            }\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"title\",\n              children: [\"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"title\",\n              control: control,\n              render: _ref3 => {\n                let {\n                  field\n                } = _ref3;\n                return /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"title\",\n                  placeholder: \"Title\",\n                  invalid: errors.title && true,\n                  ...field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"label\",\n              children: \"Label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              id: \"label\",\n              value: calendarLabel,\n              options: options,\n              theme: selectThemeColors,\n              className: \"react-select\",\n              classNamePrefix: \"select\",\n              isClearable: false,\n              onChange: data => setCalendarLabel([data]),\n              components: {\n                Option: OptionComponent\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"startDate\",\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n              required: true,\n              id: \"startDate\",\n              name: \"startDate\",\n              className: \"form-control\",\n              onChange: date => setStartPicker(date[0]),\n              value: startPicker,\n              options: {\n                enableTime: allDay === false,\n                dateFormat: 'Y-m-d H:i'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"endDate\",\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n              required: true,\n              id: \"endDate\" // tag={Flatpickr}\n              ,\n              name: \"endDate\",\n              className: \"form-control\",\n              onChange: date => setEndPicker(date[0]),\n              value: endPicker,\n              options: {\n                enableTime: allDay === false,\n                dateFormat: 'Y-m-d H:i'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-switch mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"allDay\",\n              type: \"switch\",\n              className: \"me-1\",\n              checked: allDay,\n              name: \"customSwitch\",\n              onChange: e => setAllDay(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"allDay\",\n              children: \"All Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"eventURL\",\n              children: \"Event URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"url\",\n              id: \"eventURL\",\n              value: url,\n              onChange: e => setUrl(e.target.value),\n              placeholder: \"https://www.google.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"guests\",\n              children: \"Guests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              isMulti: true,\n              id: \"guests\",\n              className: \"react-select\",\n              classNamePrefix: \"select\",\n              isClearable: false,\n              options: guestsOptions,\n              theme: selectThemeColors,\n              value: guests.length ? [...guests] : null,\n              onChange: data => setGuests([...data]),\n              components: {\n                Option: GuestsComponent\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"location\",\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"location\",\n              value: location,\n              onChange: e => setLocation(e.target.value),\n              placeholder: \"Office\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"textarea\",\n              name: \"text\",\n              id: \"description\",\n              rows: \"3\",\n              value: desc,\n              onChange: e => setDesc(e.target.value),\n              placeholder: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex mb-1\",\n            children: /*#__PURE__*/_jsxDEV(EventActions, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEventSidebar, \"Hp/is2KaAi22OUirWwK+TPaMYDQ=\", false, function () {\n  return [useForm];\n});\n\n_c = AddEventSidebar;\nexport default AddEventSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEventSidebar\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/apps/calendar/AddEventSidebar.js"],"names":["Fragment","useState","Avatar","X","toast","Flatpickr","Select","components","PerfectScrollbar","useForm","Controller","Button","Modal","ModalHeader","ModalBody","Label","Input","Form","selectThemeColors","isObjEmpty","img1","img2","img3","img4","img5","img6","AddEventSidebar","props","open","store","dispatch","addEvent","calendarApi","selectEvent","updateEvent","removeEvent","refetchEvents","calendarsColor","handleAddEventSidebar","selectedEvent","control","setError","setValue","getValues","handleSubmit","formState","errors","defaultValues","title","url","setUrl","desc","setDesc","guests","setGuests","allDay","setAllDay","location","setLocation","endPicker","setEndPicker","Date","startPicker","setStartPicker","calendarLabel","setCalendarLabel","value","label","color","options","guestsOptions","avatar","OptionComponent","data","GuestsComponent","handleAddEvent","obj","start","end","display","extendedProps","calendar","length","undefined","success","handleResetInputValues","handleSelectedEvent","resolveLabel","description","updateEventInCalendar","updatedEventData","propsToUpdate","extendedPropsToUpdate","existingEvent","getEventById","id","index","propName","setProp","setDates","setExtendedProp","handleUpdateEvent","eventToUpdate","type","removeEventInCalendar","eventId","remove","handleDeleteEvent","error","EventActions","CloseBtn","wheelPropagation","field","Option","date","enableTime","dateFormat","e","target","checked"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { X } from 'react-feather'\nimport toast from 'react-hot-toast'\nimport Flatpickr from 'react-flatpickr'\nimport Select, { components } from 'react-select' // eslint-disable-line\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Reactstrap Imports\nimport { Button, Modal, ModalHeader, ModalBody, Label, Input, Form } from 'reactstrap'\n\n// ** Utils\nimport { selectThemeColors, isObjEmpty } from '@utils'\n\n// ** Avatar Images\nimport img1 from '@src/assets/images/avatars/1-small.png'\nimport img2 from '@src/assets/images/avatars/3-small.png'\nimport img3 from '@src/assets/images/avatars/5-small.png'\nimport img4 from '@src/assets/images/avatars/7-small.png'\nimport img5 from '@src/assets/images/avatars/9-small.png'\nimport img6 from '@src/assets/images/avatars/11-small.png'\n\n// ** Styles Imports\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst AddEventSidebar = props => {\n  // ** Props\n  const {\n    open,\n    store,\n    dispatch,\n    addEvent,\n    calendarApi,\n    selectEvent,\n    updateEvent,\n    removeEvent,\n    refetchEvents,\n    calendarsColor,\n    handleAddEventSidebar\n  } = props\n\n  // ** Vars & Hooks\n  const selectedEvent = store.selectedEvent,\n    {\n      control,\n      setError,\n      setValue,\n      getValues,\n      handleSubmit,\n      formState: { errors }\n    } = useForm({\n      defaultValues: { title: '' }\n    })\n\n  // ** States\n  const [url, setUrl] = useState('')\n  const [desc, setDesc] = useState('')\n  const [guests, setGuests] = useState({})\n  const [allDay, setAllDay] = useState(false)\n  const [location, setLocation] = useState('')\n  const [endPicker, setEndPicker] = useState(new Date())\n  const [startPicker, setStartPicker] = useState(new Date())\n  const [calendarLabel, setCalendarLabel] = useState([{ value: 'Business', label: 'Business', color: 'primary' }])\n\n  // ** Select Options\n  const options = [\n    { value: 'Business', label: 'Business', color: 'primary' },\n    { value: 'Personal', label: 'Personal', color: 'danger' },\n    { value: 'Family', label: 'Family', color: 'warning' },\n    { value: 'Holiday', label: 'Holiday', color: 'success' },\n    { value: 'ETC', label: 'ETC', color: 'info' }\n  ]\n\n  const guestsOptions = [\n    { value: 'Donna Frank', label: 'Donna Frank', avatar: img1 },\n    { value: 'Jane Foster', label: 'Jane Foster', avatar: img2 },\n    { value: 'Gabrielle Robertson', label: 'Gabrielle Robertson', avatar: img3 },\n    { value: 'Lori Spears', label: 'Lori Spears', avatar: img4 },\n    { value: 'Sandy Vega', label: 'Sandy Vega', avatar: img5 },\n    { value: 'Cheryl May', label: 'Cheryl May', avatar: img6 }\n  ]\n\n  // ** Custom select components\n  const OptionComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <span className={`bullet bullet-${data.color} bullet-sm me-50`}></span>\n        {data.label}\n      </components.Option>\n    )\n  }\n\n  const GuestsComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex flex-wrap align-items-center'>\n          <Avatar className='my-0 me-1' size='sm' img={data.avatar} />\n          <div>{data.label}</div>\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** Adds New Event\n  const handleAddEvent = () => {\n    const obj = {\n      title: getValues('title'),\n      start: startPicker,\n      end: endPicker,\n      allDay,\n      display: 'block',\n      extendedProps: {\n        calendar: calendarLabel[0].label,\n        url: url.length ? url : undefined,\n        guests: guests.length ? guests : undefined,\n        location: location.length ? location : undefined,\n        desc: desc.length ? desc : undefined\n      }\n    }\n    dispatch(addEvent(obj))\n    refetchEvents()\n    handleAddEventSidebar()\n    toast.success('Event Added')\n  }\n\n  // ** Reset Input Values on Close\n  const handleResetInputValues = () => {\n    dispatch(selectEvent({}))\n    setValue('title', '')\n    setAllDay(false)\n    setUrl('')\n    setLocation('')\n    setDesc('')\n    setGuests({})\n    setCalendarLabel([{ value: 'Business', label: 'Business', color: 'primary' }])\n    setStartPicker(new Date())\n    setEndPicker(new Date())\n  }\n\n  // ** Set sidebar fields\n  const handleSelectedEvent = () => {\n    if (!isObjEmpty(selectedEvent)) {\n      const calendar = selectedEvent.extendedProps.calendar\n\n      const resolveLabel = () => {\n        if (calendar.length) {\n          return { label: calendar, value: calendar, color: calendarsColor[calendar] }\n        } else {\n          return { value: 'Business', label: 'Business', color: 'primary' }\n        }\n      }\n      setValue('title', selectedEvent.title || getValues('title'))\n      setAllDay(selectedEvent.allDay || allDay)\n      setUrl(selectedEvent.url || url)\n      setLocation(selectedEvent.extendedProps.location || location)\n      setDesc(selectedEvent.extendedProps.description || desc)\n      setGuests(selectedEvent.extendedProps.guests || guests)\n      setStartPicker(new Date(selectedEvent.start))\n      setEndPicker(selectedEvent.allDay ? new Date(selectedEvent.start) : new Date(selectedEvent.end))\n      setCalendarLabel([resolveLabel()])\n    }\n  }\n\n  // ** (UI) updateEventInCalendar\n  const updateEventInCalendar = (updatedEventData, propsToUpdate, extendedPropsToUpdate) => {\n    const existingEvent = calendarApi.getEventById(updatedEventData.id)\n\n    // ** Set event properties except date related\n    // ? Docs: https://fullcalendar.io/docs/Event-setProp\n    // ** dateRelatedProps => ['start', 'end', 'allDay']\n    // ** eslint-disable-next-line no-plusplus\n    for (let index = 0; index < propsToUpdate.length; index++) {\n      const propName = propsToUpdate[index]\n      existingEvent.setProp(propName, updatedEventData[propName])\n    }\n\n    // ** Set date related props\n    // ? Docs: https://fullcalendar.io/docs/Event-setDates\n    existingEvent.setDates(new Date(updatedEventData.start), new Date(updatedEventData.end), {\n      allDay: updatedEventData.allDay\n    })\n\n    // ** Set event's extendedProps\n    // ? Docs: https://fullcalendar.io/docs/Event-setExtendedProp\n    // ** eslint-disable-next-line no-plusplus\n    for (let index = 0; index < extendedPropsToUpdate.length; index++) {\n      const propName = extendedPropsToUpdate[index]\n      existingEvent.setExtendedProp(propName, updatedEventData.extendedProps[propName])\n    }\n  }\n\n  // ** Updates Event in Store\n  const handleUpdateEvent = () => {\n    if (getValues('title').length) {\n      const eventToUpdate = {\n        id: selectedEvent.id,\n        title: getValues('title'),\n        allDay,\n        start: startPicker,\n        end: endPicker,\n        url,\n        display: allDay === false ? 'block' : undefined,\n        extendedProps: {\n          location,\n          description: desc,\n          guests,\n          calendar: calendarLabel[0].label\n        }\n      }\n\n      const propsToUpdate = ['id', 'title', 'url']\n      const extendedPropsToUpdate = ['calendar', 'guests', 'location', 'description']\n      dispatch(updateEvent(eventToUpdate))\n      updateEventInCalendar(eventToUpdate, propsToUpdate, extendedPropsToUpdate)\n\n      handleAddEventSidebar()\n      toast.success('Event Updated')\n    } else {\n      setError('title', {\n        type: 'manual'\n      })\n    }\n  }\n\n  // ** (UI) removeEventInCalendar\n  const removeEventInCalendar = eventId => {\n    calendarApi.getEventById(eventId).remove()\n  }\n\n  const handleDeleteEvent = () => {\n    dispatch(removeEvent(selectedEvent.id))\n    removeEventInCalendar(selectedEvent.id)\n    handleAddEventSidebar()\n    toast.error('Event Removed')\n  }\n\n  // ** Event Action buttons\n  const EventActions = () => {\n    if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\n      return (\n        <Fragment>\n          <Button className='me-1' type='submit' color='primary'>\n            Add\n          </Button>\n          <Button color='secondary' type='reset' onClick={handleAddEventSidebar} outline>\n            Cancel\n          </Button>\n        </Fragment>\n      )\n    } else {\n      return (\n        <Fragment>\n          <Button className='me-1' color='primary' onClick={handleUpdateEvent}>\n            Update\n          </Button>\n          <Button color='danger' onClick={handleDeleteEvent} outline>\n            Delete\n          </Button>\n        </Fragment>\n      )\n    }\n  }\n\n  // ** Close BTN\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleAddEventSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      className='sidebar-lg'\n      toggle={handleAddEventSidebar}\n      onOpened={handleSelectedEvent}\n      onClosed={handleResetInputValues}\n      contentClassName='p-0 overflow-hidden'\n      modalClassName='modal-slide-in event-sidebar'\n    >\n      <ModalHeader className='mb-1' toggle={handleAddEventSidebar} close={CloseBtn} tag='div'>\n        <h5 className='modal-title'>\n          {selectedEvent && selectedEvent.title && selectedEvent.title.length ? 'Update' : 'Add'} Event\n        </h5>\n      </ModalHeader>\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\n        <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\n          <Form\n            onSubmit={handleSubmit(data => {\n              if (data.title.length) {\n                if (isObjEmpty(errors)) {\n                  if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\n                    handleAddEvent()\n                  } else {\n                    handleUpdateEvent()\n                  }\n                  handleAddEventSidebar()\n                }\n              } else {\n                setError('title', {\n                  type: 'manual'\n                })\n              }\n            })}\n          >\n            <div className='mb-1'>\n              <Label className='form-label' for='title'>\n                Title <span className='text-danger'>*</span>\n              </Label>\n              <Controller\n                name='title'\n                control={control}\n                render={({ field }) => (\n                  <Input id='title' placeholder='Title' invalid={errors.title && true} {...field} />\n                )}\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='label'>\n                Label\n              </Label>\n              <Select\n                id='label'\n                value={calendarLabel}\n                options={options}\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                isClearable={false}\n                onChange={data => setCalendarLabel([data])}\n                components={{\n                  Option: OptionComponent\n                }}\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='startDate'>\n                Start Date\n              </Label>\n              <Flatpickr\n                required\n                id='startDate'\n                name='startDate'\n                className='form-control'\n                onChange={date => setStartPicker(date[0])}\n                value={startPicker}\n                options={{\n                  enableTime: allDay === false,\n                  dateFormat: 'Y-m-d H:i'\n                }}\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='endDate'>\n                End Date\n              </Label>\n              <Flatpickr\n                required\n                id='endDate'\n                // tag={Flatpickr}\n                name='endDate'\n                className='form-control'\n                onChange={date => setEndPicker(date[0])}\n                value={endPicker}\n                options={{\n                  enableTime: allDay === false,\n                  dateFormat: 'Y-m-d H:i'\n                }}\n              />\n            </div>\n\n            <div className='form-switch mb-1'>\n              <Input\n                id='allDay'\n                type='switch'\n                className='me-1'\n                checked={allDay}\n                name='customSwitch'\n                onChange={e => setAllDay(e.target.checked)}\n              />\n              <Label className='form-label' for='allDay'>\n                All Day\n              </Label>\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='eventURL'>\n                Event URL\n              </Label>\n              <Input\n                type='url'\n                id='eventURL'\n                value={url}\n                onChange={e => setUrl(e.target.value)}\n                placeholder='https://www.google.com'\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='guests'>\n                Guests\n              </Label>\n              <Select\n                isMulti\n                id='guests'\n                className='react-select'\n                classNamePrefix='select'\n                isClearable={false}\n                options={guestsOptions}\n                theme={selectThemeColors}\n                value={guests.length ? [...guests] : null}\n                onChange={data => setGuests([...data])}\n                components={{\n                  Option: GuestsComponent\n                }}\n              />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='location'>\n                Location\n              </Label>\n              <Input id='location' value={location} onChange={e => setLocation(e.target.value)} placeholder='Office' />\n            </div>\n\n            <div className='mb-1'>\n              <Label className='form-label' for='description'>\n                Description\n              </Label>\n              <Input\n                type='textarea'\n                name='text'\n                id='description'\n                rows='3'\n                value={desc}\n                onChange={e => setDesc(e.target.value)}\n                placeholder='Description'\n              />\n            </div>\n            <div className='d-flex mb-1'>\n              <EventActions />\n            </div>\n          </Form>\n        </ModalBody>\n      </PerfectScrollbar>\n    </Modal>\n  )\n}\n\nexport default AddEventSidebar\n"]},"metadata":{},"sourceType":"module"}