{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\apps\\\\todo\\\\TaskSidebar.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState, Fragment } from 'react'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport Flatpickr from 'react-flatpickr';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { X, Star, Trash } from 'react-feather';\nimport Select, { components } from 'react-select'; //eslint-disable-line\n\nimport { useForm, Controller } from 'react-hook-form';\nimport { EditorState, ContentState } from 'draft-js'; // ** Reactstrap Imports\n\nimport { Modal, ModalBody, Button, Form, Input, Label, FormFeedback } from 'reactstrap'; // ** Utils\n\nimport { isObjEmpty, selectThemeColors } from '@utils'; // ** Assignee Avatars\n\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg';\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg';\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg';\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg';\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg';\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg'; // ** Styles Imports\n\nimport '@styles/react/libs/editor/editor.scss';\nimport '@styles/react/libs/flatpickr/flatpickr.scss';\nimport '@styles/react/libs/react-select/_react-select.scss'; // ** Function to capitalize the first letter of string\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1); // ** Modal Header\n\n\nconst ModalHeader = props => {\n  // ** Props\n  const {\n    children,\n    store,\n    handleTaskSidebar,\n    setDeleted,\n    deleted,\n    important,\n    setImportant,\n    deleteTask,\n    dispatch\n  } = props; // ** Function to delete task\n\n  const handleDeleteTask = () => {\n    setDeleted(!deleted);\n    dispatch(deleteTask(store.selectedTask.id));\n    handleTaskSidebar();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-header d-flex align-items-center justify-content-between mb-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"modal-title\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-item-action d-flex align-items-center\",\n      children: [store && !isObjEmpty(store.selectedTask) ? /*#__PURE__*/_jsxDEV(Trash, {\n        className: \"cursor-pointer mt-25\",\n        size: 16,\n        onClick: () => handleDeleteTask()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todo-item-favorite cursor-pointer mx-75\",\n        children: /*#__PURE__*/_jsxDEV(Star, {\n          size: 16,\n          onClick: () => setImportant(!important),\n          className: classnames({\n            'text-warning': important === true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(X, {\n        className: \"fw-normal mt-25\",\n        size: 16,\n        onClick: handleTaskSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ModalHeader;\n\nconst TaskSidebar = props => {\n  _s();\n\n  // ** Props\n  const {\n    open,\n    handleTaskSidebar,\n    store,\n    dispatch,\n    updateTask,\n    selectTask,\n    addTask,\n    deleteTask\n  } = props; // ** States\n\n  const [assignee, setAssignee] = useState({\n    value: 'pheobe',\n    label: 'Pheobe Buffay',\n    img: img1\n  });\n  const [tags, setTags] = useState([]);\n  const [desc, setDesc] = useState(EditorState.createEmpty());\n  const [completed, setCompleted] = useState(false);\n  const [important, setImportant] = useState(false);\n  const [deleted, setDeleted] = useState(false);\n  const [dueDate, setDueDate] = useState(new Date());\n  const {\n    control,\n    setError,\n    setValue,\n    clearErrors,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      title: ''\n    }\n  }); // ** Assignee Select Options\n\n  const assigneeOptions = [{\n    value: 'pheobe',\n    label: 'Pheobe Buffay',\n    img: img1\n  }, {\n    value: 'chandler',\n    label: 'Chandler Bing',\n    img: img2\n  }, {\n    value: 'ross',\n    label: 'Ross Geller',\n    img: img3\n  }, {\n    value: 'monica',\n    label: 'Monica Geller',\n    img: img4\n  }, {\n    value: 'joey',\n    label: 'Joey Tribbiani',\n    img: img5\n  }, {\n    value: 'Rachel',\n    label: 'Rachel Green',\n    img: img6\n  }]; // ** Tag Select Options\n\n  const tagOptions = [{\n    value: 'team',\n    label: 'Team'\n  }, {\n    value: 'low',\n    label: 'Low'\n  }, {\n    value: 'medium',\n    label: 'Medium'\n  }, {\n    value: 'high',\n    label: 'High'\n  }, {\n    value: 'update',\n    label: 'Update'\n  }]; // ** Custom Assignee Component\n\n  const AssigneeComponent = _ref => {\n    let {\n      data,\n      ...props\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"d-block rounded-circle me-50\",\n          src: data.img,\n          height: \"26\",\n          width: \"26\",\n          alt: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0\",\n          children: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }; // ** Returns sidebar title\n\n\n  const handleSidebarTitle = () => {\n    if (store && !isObjEmpty(store.selectedTask)) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        outline: true,\n        size: \"sm\",\n        onClick: () => setCompleted(!completed),\n        color: completed === true ? 'success' : 'secondary',\n        children: completed === true ? 'Completed' : 'Mark Complete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this);\n    } else {\n      return 'Add Task';\n    }\n  }; // ** Function to run when sidebar opens\n\n\n  const handleSidebarOpened = () => {\n    const {\n      selectedTask\n    } = store;\n\n    if (!isObjEmpty(selectedTask)) {\n      setValue('title', selectedTask.title);\n      setCompleted(selectedTask.isCompleted);\n      setImportant(selectedTask.isImportant);\n      setAssignee([{\n        value: selectedTask.assignee.fullName,\n        label: selectedTask.assignee.fullName,\n        img: selectedTask.assignee.avatar\n      }]);\n      setDueDate(selectedTask.dueDate);\n\n      if (typeof selectedTask.description === 'string') {\n        setDesc(EditorState.createWithContent(ContentState.createFromText(selectedTask.description)));\n      } else {\n        const obj = selectedTask.description._immutable.currentContent.blockMap;\n        const property = Object.keys(obj).map(val => val);\n        setDesc(EditorState.createWithContent(ContentState.createFromText(obj[property].text)));\n      }\n\n      if (selectedTask.tags.length) {\n        const tags = [];\n        selectedTask.tags.map(tag => {\n          tags.push({\n            value: tag,\n            label: capitalize(tag)\n          });\n        });\n        setTags(tags);\n      }\n    }\n  }; // ** Function to run when sidebar closes\n\n\n  const handleSidebarClosed = () => {\n    setTags([]);\n    setDesc('');\n    setValue('title', '');\n    setAssignee({\n      value: 'pheobe',\n      label: 'Pheobe Buffay',\n      img: img1\n    });\n    setCompleted(false);\n    setImportant(false);\n    setDueDate(new Date());\n    dispatch(selectTask({}));\n    clearErrors();\n  }; // ** Function to reset fileds\n\n\n  const handleResetFields = () => {\n    const descValue = EditorState.createWithContent(ContentState.createFromText(store.selectedTask.description));\n    setValue('title', store.selectedTask.title);\n    setDesc(descValue);\n    setCompleted(store.selectedTask.isCompleted);\n    setImportant(store.selectedTask.isImportant);\n    setDeleted(store.selectedTask.isDeleted);\n    setDueDate(store.selectedTask.dueDate);\n\n    if (store.selectedTask.assignee.fullName !== assignee.label) {\n      setAssignee({\n        value: store.selectedTask.assignee.fullName,\n        label: store.selectedTask.assignee.fullName,\n        img: store.selectedTask.assignee.avatar\n      });\n    }\n\n    if (store.selectedTask.tags.length) {\n      const tags = [];\n      store.selectedTask.tags.map(tag => {\n        tags.push({\n          value: tag,\n          label: capitalize(tag)\n        });\n      });\n      setTags(tags);\n    }\n  }; // ** Renders Footer Buttons\n\n\n  const renderFooterButtons = () => {\n    if (store && !isObjEmpty(store.selectedTask)) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"update-btn update-todo-item me-1\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: handleResetFields,\n          outline: true,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"add-todo-item me-1\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: handleTaskSidebar,\n          outline: true,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const onSubmit = data => {\n    const newTaskTag = [];\n    const doesInclude = !isObjEmpty(store.selectedTask) && assignee.label === store.selectedTask.assignee.fullName;\n\n    if (tags.length) {\n      tags.map(tag => newTaskTag.push(tag.value));\n    }\n\n    const newAssignee = {\n      fullName: assignee.label,\n      avatar: assignee.img\n    };\n    const state = {\n      dueDate,\n      title: data.title,\n      tags: newTaskTag,\n      description: desc,\n      isCompleted: completed,\n      isDeleted: deleted,\n      isImportant: important,\n      assignee: doesInclude || assignee.label === undefined ? store.selectedTask.assignee : newAssignee\n    };\n\n    if (data.title.length) {\n      if (isObjEmpty(errors)) {\n        if (isObjEmpty(store.selectedTask) || !isObjEmpty(store.selectedTask) && !store.selectedTask.title.length) {\n          dispatch(addTask(state));\n        } else {\n          dispatch(updateTask({ ...state,\n            id: store.selectedTask.id\n          }));\n        }\n\n        handleTaskSidebar();\n      }\n    } else {\n      setError('title', {\n        type: 'manual'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: open,\n    toggle: handleTaskSidebar,\n    className: \"sidebar-lg\",\n    contentClassName: \"p-0\",\n    onOpened: handleSidebarOpened,\n    onClosed: handleSidebarClosed,\n    modalClassName: \"modal-slide-in sidebar-todo-modal\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: \"form-modal-todo\",\n      className: \"todo-modal\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        store: store,\n        deleted: deleted,\n        dispatch: dispatch,\n        important: important,\n        deleteTask: deleteTask,\n        setDeleted: setDeleted,\n        setImportant: setImportant,\n        handleTaskSidebar: handleTaskSidebar,\n        children: handleSidebarTitle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        className: \"flex-grow-1 pb-sm-0 pb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"task-title\",\n            children: [\"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"title\",\n            control: control,\n            render: _ref2 => {\n              let {\n                field\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(Input, {\n                id: \"task-title\",\n                placeholder: \"Title\",\n                className: \"new-todo-item-title\",\n                invalid: errors.title && true,\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(FormFeedback, {\n            children: \"Please enter a valid task title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"task-assignee\",\n            children: \"Assignee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"task-assignee\",\n            className: \"react-select\",\n            classNamePrefix: \"select\",\n            isClearable: false,\n            options: assigneeOptions,\n            theme: selectThemeColors,\n            value: assignee,\n            onChange: data => setAssignee(data),\n            components: {\n              Option: AssigneeComponent\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"due-date\",\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n            id: \"due-date\",\n            name: \"due-date\",\n            className: \"form-control\",\n            onChange: date => setDueDate(date[0]),\n            value: dueDate,\n            options: {\n              dateFormat: 'Y-m-d'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"task-tags\",\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            isMulti: true,\n            id: \"task-tags\",\n            className: \"react-select\",\n            classNamePrefix: \"select\",\n            isClearable: false,\n            options: tagOptions,\n            theme: selectThemeColors,\n            value: tags,\n            onChange: data => {\n              setTags(data !== null ? [...data] : []);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"task-desc\",\n            className: \"form-label\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            editorState: desc,\n            wrapperClassName: \"toolbar-bottom\",\n            toolbar: {\n              options: ['inline', 'textAlign'],\n              inline: {\n                inDropdown: false,\n                options: ['bold', 'italic', 'underline']\n              }\n            },\n            onEditorStateChange: data => setDesc(data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: renderFooterButtons()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskSidebar, \"cW9qKq1NDLMFK1pdqOpJEHcYavM=\", false, function () {\n  return [useForm];\n});\n\n_c2 = TaskSidebar;\nexport default TaskSidebar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalHeader\");\n$RefreshReg$(_c2, \"TaskSidebar\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/apps/todo/TaskSidebar.js"],"names":["useState","Fragment","classnames","Flatpickr","Editor","X","Star","Trash","Select","components","useForm","Controller","EditorState","ContentState","Modal","ModalBody","Button","Form","Input","Label","FormFeedback","isObjEmpty","selectThemeColors","img1","img2","img3","img4","img5","img6","capitalize","string","charAt","toUpperCase","slice","ModalHeader","props","children","store","handleTaskSidebar","setDeleted","deleted","important","setImportant","deleteTask","dispatch","handleDeleteTask","selectedTask","id","TaskSidebar","open","updateTask","selectTask","addTask","assignee","setAssignee","value","label","img","tags","setTags","desc","setDesc","createEmpty","completed","setCompleted","dueDate","setDueDate","Date","control","setError","setValue","clearErrors","handleSubmit","formState","errors","defaultValues","title","assigneeOptions","tagOptions","AssigneeComponent","data","handleSidebarTitle","handleSidebarOpened","isCompleted","isImportant","fullName","avatar","description","createWithContent","createFromText","obj","_immutable","currentContent","blockMap","property","Object","keys","map","val","text","length","tag","push","handleSidebarClosed","handleResetFields","descValue","isDeleted","renderFooterButtons","onSubmit","newTaskTag","doesInclude","newAssignee","state","undefined","type","field","Option","date","dateFormat","options","inline","inDropdown"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { useState, Fragment } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport Flatpickr from 'react-flatpickr'\nimport { Editor } from 'react-draft-wysiwyg'\nimport { X, Star, Trash } from 'react-feather'\nimport Select, { components } from 'react-select' //eslint-disable-line\nimport { useForm, Controller } from 'react-hook-form'\nimport { EditorState, ContentState } from 'draft-js'\n\n// ** Reactstrap Imports\nimport { Modal, ModalBody, Button, Form, Input, Label, FormFeedback } from 'reactstrap'\n\n// ** Utils\nimport { isObjEmpty, selectThemeColors } from '@utils'\n\n// ** Assignee Avatars\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\n// ** Styles Imports\nimport '@styles/react/libs/editor/editor.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/react/libs/react-select/_react-select.scss'\n\n// ** Function to capitalize the first letter of string\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1)\n\n// ** Modal Header\nconst ModalHeader = props => {\n  // ** Props\n  const { children, store, handleTaskSidebar, setDeleted, deleted, important, setImportant, deleteTask, dispatch } =\n    props\n\n  // ** Function to delete task\n  const handleDeleteTask = () => {\n    setDeleted(!deleted)\n    dispatch(deleteTask(store.selectedTask.id))\n    handleTaskSidebar()\n  }\n\n  return (\n    <div className='modal-header d-flex align-items-center justify-content-between mb-1'>\n      <h5 className='modal-title'>{children}</h5>\n      <div className='todo-item-action d-flex align-items-center'>\n        {store && !isObjEmpty(store.selectedTask) ? (\n          <Trash className='cursor-pointer mt-25' size={16} onClick={() => handleDeleteTask()} />\n        ) : null}\n        <span className='todo-item-favorite cursor-pointer mx-75'>\n          <Star\n            size={16}\n            onClick={() => setImportant(!important)}\n            className={classnames({\n              'text-warning': important === true\n            })}\n          />\n        </span>\n        <X className='fw-normal mt-25' size={16} onClick={handleTaskSidebar} />\n      </div>\n    </div>\n  )\n}\n\nconst TaskSidebar = props => {\n  // ** Props\n  const { open, handleTaskSidebar, store, dispatch, updateTask, selectTask, addTask, deleteTask } = props\n\n  // ** States\n  const [assignee, setAssignee] = useState({ value: 'pheobe', label: 'Pheobe Buffay', img: img1 })\n  const [tags, setTags] = useState([])\n  const [desc, setDesc] = useState(EditorState.createEmpty())\n  const [completed, setCompleted] = useState(false)\n  const [important, setImportant] = useState(false)\n  const [deleted, setDeleted] = useState(false)\n  const [dueDate, setDueDate] = useState(new Date())\n\n  const {\n    control,\n    setError,\n    setValue,\n    clearErrors,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues: { title: '' }\n  })\n\n  // ** Assignee Select Options\n  const assigneeOptions = [\n    { value: 'pheobe', label: 'Pheobe Buffay', img: img1 },\n    { value: 'chandler', label: 'Chandler Bing', img: img2 },\n    { value: 'ross', label: 'Ross Geller', img: img3 },\n    { value: 'monica', label: 'Monica Geller', img: img4 },\n    { value: 'joey', label: 'Joey Tribbiani', img: img5 },\n    { value: 'Rachel', label: 'Rachel Green', img: img6 }\n  ]\n\n  // ** Tag Select Options\n  const tagOptions = [\n    { value: 'team', label: 'Team' },\n    { value: 'low', label: 'Low' },\n    { value: 'medium', label: 'Medium' },\n    { value: 'high', label: 'High' },\n    { value: 'update', label: 'Update' }\n  ]\n\n  // ** Custom Assignee Component\n  const AssigneeComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex align-items-center'>\n          <img className='d-block rounded-circle me-50' src={data.img} height='26' width='26' alt={data.label} />\n          <p className='mb-0'>{data.label}</p>\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** Returns sidebar title\n  const handleSidebarTitle = () => {\n    if (store && !isObjEmpty(store.selectedTask)) {\n      return (\n        <Button\n          outline\n          size='sm'\n          onClick={() => setCompleted(!completed)}\n          color={completed === true ? 'success' : 'secondary'}\n        >\n          {completed === true ? 'Completed' : 'Mark Complete'}\n        </Button>\n      )\n    } else {\n      return 'Add Task'\n    }\n  }\n\n  // ** Function to run when sidebar opens\n  const handleSidebarOpened = () => {\n    const { selectedTask } = store\n    if (!isObjEmpty(selectedTask)) {\n      setValue('title', selectedTask.title)\n      setCompleted(selectedTask.isCompleted)\n      setImportant(selectedTask.isImportant)\n      setAssignee([\n        {\n          value: selectedTask.assignee.fullName,\n          label: selectedTask.assignee.fullName,\n          img: selectedTask.assignee.avatar\n        }\n      ])\n      setDueDate(selectedTask.dueDate)\n      if (typeof selectedTask.description === 'string') {\n        setDesc(EditorState.createWithContent(ContentState.createFromText(selectedTask.description)))\n      } else {\n        const obj = selectedTask.description._immutable.currentContent.blockMap\n        const property = Object.keys(obj).map(val => val)\n\n        setDesc(EditorState.createWithContent(ContentState.createFromText(obj[property].text)))\n      }\n\n      if (selectedTask.tags.length) {\n        const tags = []\n        selectedTask.tags.map(tag => {\n          tags.push({ value: tag, label: capitalize(tag) })\n        })\n        setTags(tags)\n      }\n    }\n  }\n\n  // ** Function to run when sidebar closes\n  const handleSidebarClosed = () => {\n    setTags([])\n    setDesc('')\n    setValue('title', '')\n    setAssignee({ value: 'pheobe', label: 'Pheobe Buffay', img: img1 })\n    setCompleted(false)\n    setImportant(false)\n    setDueDate(new Date())\n    dispatch(selectTask({}))\n    clearErrors()\n  }\n\n  // ** Function to reset fileds\n  const handleResetFields = () => {\n    const descValue = EditorState.createWithContent(ContentState.createFromText(store.selectedTask.description))\n\n    setValue('title', store.selectedTask.title)\n    setDesc(descValue)\n    setCompleted(store.selectedTask.isCompleted)\n    setImportant(store.selectedTask.isImportant)\n    setDeleted(store.selectedTask.isDeleted)\n    setDueDate(store.selectedTask.dueDate)\n    if (store.selectedTask.assignee.fullName !== assignee.label) {\n      setAssignee({\n        value: store.selectedTask.assignee.fullName,\n        label: store.selectedTask.assignee.fullName,\n        img: store.selectedTask.assignee.avatar\n      })\n    }\n    if (store.selectedTask.tags.length) {\n      const tags = []\n      store.selectedTask.tags.map(tag => {\n        tags.push({ value: tag, label: capitalize(tag) })\n      })\n      setTags(tags)\n    }\n  }\n\n  // ** Renders Footer Buttons\n  const renderFooterButtons = () => {\n    if (store && !isObjEmpty(store.selectedTask)) {\n      return (\n        <Fragment>\n          <Button color='primary' className='update-btn update-todo-item me-1'>\n            Update\n          </Button>\n          <Button color='secondary' onClick={handleResetFields} outline>\n            Reset\n          </Button>\n        </Fragment>\n      )\n    } else {\n      return (\n        <Fragment>\n          <Button color='primary' className='add-todo-item me-1'>\n            Add\n          </Button>\n          <Button color='secondary' onClick={handleTaskSidebar} outline>\n            Cancel\n          </Button>\n        </Fragment>\n      )\n    }\n  }\n\n  const onSubmit = data => {\n    const newTaskTag = []\n\n    const doesInclude = !isObjEmpty(store.selectedTask) && assignee.label === store.selectedTask.assignee.fullName\n\n    if (tags.length) {\n      tags.map(tag => newTaskTag.push(tag.value))\n    }\n\n    const newAssignee = {\n      fullName: assignee.label,\n      avatar: assignee.img\n    }\n    const state = {\n      dueDate,\n      title: data.title,\n      tags: newTaskTag,\n      description: desc,\n      isCompleted: completed,\n      isDeleted: deleted,\n      isImportant: important,\n      assignee: doesInclude || assignee.label === undefined ? store.selectedTask.assignee : newAssignee\n    }\n\n    if (data.title.length) {\n      if (isObjEmpty(errors)) {\n        if (isObjEmpty(store.selectedTask) || (!isObjEmpty(store.selectedTask) && !store.selectedTask.title.length)) {\n          dispatch(addTask(state))\n        } else {\n          dispatch(updateTask({ ...state, id: store.selectedTask.id }))\n        }\n        handleTaskSidebar()\n      }\n    } else {\n      setError('title', {\n        type: 'manual'\n      })\n    }\n  }\n  return (\n    <Modal\n      isOpen={open}\n      toggle={handleTaskSidebar}\n      className='sidebar-lg'\n      contentClassName='p-0'\n      onOpened={handleSidebarOpened}\n      onClosed={handleSidebarClosed}\n      modalClassName='modal-slide-in sidebar-todo-modal'\n    >\n      <Form id='form-modal-todo' className='todo-modal' onSubmit={handleSubmit(onSubmit)}>\n        <ModalHeader\n          store={store}\n          deleted={deleted}\n          dispatch={dispatch}\n          important={important}\n          deleteTask={deleteTask}\n          setDeleted={setDeleted}\n          setImportant={setImportant}\n          handleTaskSidebar={handleTaskSidebar}\n        >\n          {handleSidebarTitle()}\n        </ModalHeader>\n        <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\n          <div className='mb-1'>\n            <Label className='form-label' for='task-title'>\n              Title <span className='text-danger'>*</span>\n            </Label>\n            <Controller\n              name='title'\n              control={control}\n              render={({ field }) => (\n                <Input\n                  id='task-title'\n                  placeholder='Title'\n                  className='new-todo-item-title'\n                  invalid={errors.title && true}\n                  {...field}\n                />\n              )}\n            />\n            {errors.title && <FormFeedback>Please enter a valid task title</FormFeedback>}\n          </div>\n          <div className='mb-1'>\n            <Label className='form-label' for='task-assignee'>\n              Assignee\n            </Label>\n            <Select\n              id='task-assignee'\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              options={assigneeOptions}\n              theme={selectThemeColors}\n              value={assignee}\n              onChange={data => setAssignee(data)}\n              components={{ Option: AssigneeComponent }}\n            />\n          </div>\n          <div className='mb-1'>\n            <Label className='form-label' for='due-date'>\n              Due Date\n            </Label>\n            <Flatpickr\n              id='due-date'\n              name='due-date'\n              className='form-control'\n              onChange={date => setDueDate(date[0])}\n              value={dueDate}\n              options={{ dateFormat: 'Y-m-d' }}\n            />\n          </div>\n          <div className='mb-1'>\n            <Label className='form-label' for='task-tags'>\n              Tags\n            </Label>\n            <Select\n              isMulti\n              id='task-tags'\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              options={tagOptions}\n              theme={selectThemeColors}\n              value={tags}\n              onChange={data => {\n                setTags(data !== null ? [...data] : [])\n              }}\n            />\n          </div>\n          <div className='mb-1'>\n            <Label for='task-desc' className='form-label'>\n              Description\n            </Label>\n            <Editor\n              editorState={desc}\n              wrapperClassName='toolbar-bottom'\n              toolbar={{\n                options: ['inline', 'textAlign'],\n                inline: {\n                  inDropdown: false,\n                  options: ['bold', 'italic', 'underline']\n                }\n              }}\n              onEditorStateChange={data => setDesc(data)}\n            />\n          </div>\n          <div>{renderFooterButtons()}</div>\n        </ModalBody>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default TaskSidebar\n"]},"metadata":{},"sourceType":"module"}