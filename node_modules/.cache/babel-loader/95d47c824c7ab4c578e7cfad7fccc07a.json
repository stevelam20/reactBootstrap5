{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\@core\\\\layouts\\\\VerticalLayout.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // ** Store & Actions\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/layout'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { ArrowUp } from 'react-feather'; // ** Reactstrap Imports\n\nimport { Navbar, Button } from 'reactstrap'; // ** Configs\n\nimport themeConfig from '@configs/themeConfig'; // ** Custom Components\n\nimport Customizer from '@components/customizer';\nimport ScrollToTop from '@components/scrolltop';\nimport FooterComponent from './components/footer';\nimport NavbarComponent from './components/navbar';\nimport SidebarComponent from './components/menu/vertical-menu'; // ** Custom Hooks\n\nimport { useRTL } from '@hooks/useRTL';\nimport { useSkin } from '@hooks/useSkin';\nimport { useLayout } from '@hooks/useLayout';\nimport { useNavbarType } from '@hooks/useNavbarType';\nimport { useFooterType } from '@hooks/useFooterType';\nimport { useNavbarColor } from '@hooks/useNavbarColor';\nimport { useRouterTransition } from '@hooks/useRouterTransition'; // ** Styles\n\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss';\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VerticalLayout = props => {\n  _s();\n\n  // ** Props\n  const {\n    menu,\n    navbar,\n    footer,\n    children,\n    menuData\n  } = props; // ** Hooks\n\n  const [isRtl, setIsRtl] = useRTL();\n  const {\n    skin,\n    setSkin\n  } = useSkin();\n  const {\n    navbarType,\n    setNavbarType\n  } = useNavbarType();\n  const {\n    footerType,\n    setFooterType\n  } = useFooterType();\n  const {\n    navbarColor,\n    setNavbarColor\n  } = useNavbarColor();\n  const {\n    layout,\n    setLayout,\n    setLastLayout\n  } = useLayout();\n  const {\n    transition,\n    setTransition\n  } = useRouterTransition(); // ** States\n\n  const [isMounted, setIsMounted] = useState(false);\n  const [menuVisibility, setMenuVisibility] = useState(false);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth); // ** Vars\n\n  const dispatch = useDispatch();\n  const layoutStore = useSelector(state => state.layout); // ** Update Window Width\n\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth);\n  }; // ** Vars\n\n\n  const location = useLocation();\n  const isHidden = layoutStore.menuHidden;\n  const contentWidth = layoutStore.contentWidth;\n  const menuCollapsed = layoutStore.menuCollapsed; // ** Toggles Menu Collapsed\n\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val)); // ** Handles Content Width\n\n\n  const setContentWidth = val => dispatch(handleContentWidth(val)); // ** Handles Content Width\n\n\n  const setIsHidden = val => dispatch(handleMenuHidden(val)); //** This function will detect the Route Change and will hide the menu on menu item click\n\n\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false);\n    }\n  }, [location]); //** Sets Window Size & Layout Props\n\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth);\n    }\n  }, [windowWidth]); //** ComponentDidMount\n\n  useEffect(() => {\n    setIsMounted(true);\n    return () => setIsMounted(false);\n  }, []); // ** Vars\n\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  };\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  };\n  const navbarClasses = {\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  };\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white';\n\n  if (!isMounted) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames(`wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${footerClasses[footerType] || 'footer-static'}`, {\n      // Modern Menu\n      'vertical-menu-modern': windowWidth >= 1200,\n      'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n      'menu-expanded': !menuCollapsed && windowWidth > 1200,\n      // Overlay Menu\n      'vertical-overlay-menu': windowWidth < 1200,\n      'menu-hide': !menuVisibility && windowWidth < 1200,\n      'menu-open': menuVisibility && windowWidth < 1200\n    }),\n    ...(isHidden ? {\n      'data-col': '1-column'\n    } : {}),\n    children: [!isHidden ? /*#__PURE__*/_jsxDEV(SidebarComponent, {\n      skin: skin,\n      menu: menu,\n      menuData: menuData,\n      menuCollapsed: menuCollapsed,\n      menuVisibility: menuVisibility,\n      setMenuCollapsed: setMenuCollapsed,\n      setMenuVisibility: setMenuVisibility\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Navbar, {\n      expand: \"lg\",\n      container: false,\n      light: skin !== 'dark',\n      dark: skin === 'dark' || bgColorCondition,\n      color: bgColorCondition ? navbarColor : undefined,\n      className: classnames(`header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-container d-flex content\",\n        children: navbar ? navbar({\n          skin,\n          setSkin,\n          setMenuVisibility\n        }) : /*#__PURE__*/_jsxDEV(NavbarComponent, {\n          setMenuVisibility: setMenuVisibility,\n          skin: skin,\n          setSkin: setSkin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames('sidenav-overlay', {\n        show: menuVisibility\n      }),\n      onClick: () => setMenuVisibility(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), themeConfig.layout.customizer === true ? /*#__PURE__*/_jsxDEV(Customizer, {\n      skin: skin,\n      isRtl: isRtl,\n      layout: layout,\n      setSkin: setSkin,\n      setIsRtl: setIsRtl,\n      isHidden: isHidden,\n      setLayout: setLayout,\n      footerType: footerType,\n      navbarType: navbarType,\n      transition: transition,\n      setIsHidden: setIsHidden,\n      themeConfig: themeConfig,\n      navbarColor: navbarColor,\n      contentWidth: contentWidth,\n      setTransition: setTransition,\n      setFooterType: setFooterType,\n      setNavbarType: setNavbarType,\n      setLastLayout: setLastLayout,\n      menuCollapsed: menuCollapsed,\n      setNavbarColor: setNavbarColor,\n      setContentWidth: setContentWidth,\n      setMenuCollapsed: setMenuCollapsed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n        'd-none': footerType === 'hidden'\n      }),\n      children: footer ? footer : /*#__PURE__*/_jsxDEV(FooterComponent, {\n        footerType: footerType,\n        footerClasses: footerClasses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), themeConfig.layout.scrollTop === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll-to-top\",\n      children: /*#__PURE__*/_jsxDEV(ScrollToTop, {\n        showOffset: 300,\n        className: \"scroll-top d-block\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-icon\",\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(ArrowUp, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VerticalLayout, \"tE4DBWbpeFQ4AtOWW+x8letZBLI=\", false, function () {\n  return [useRTL, useSkin, useNavbarType, useFooterType, useNavbarColor, useLayout, useRouterTransition, useDispatch, useSelector, useLocation];\n});\n\n_c = VerticalLayout;\nexport default VerticalLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerticalLayout\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/@core/layouts/VerticalLayout.js"],"names":["useState","useEffect","useLocation","useSelector","useDispatch","handleMenuCollapsed","handleContentWidth","handleMenuHidden","classnames","ArrowUp","Navbar","Button","themeConfig","Customizer","ScrollToTop","FooterComponent","NavbarComponent","SidebarComponent","useRTL","useSkin","useLayout","useNavbarType","useFooterType","useNavbarColor","useRouterTransition","VerticalLayout","props","menu","navbar","footer","children","menuData","isRtl","setIsRtl","skin","setSkin","navbarType","setNavbarType","footerType","setFooterType","navbarColor","setNavbarColor","layout","setLayout","setLastLayout","transition","setTransition","isMounted","setIsMounted","menuVisibility","setMenuVisibility","windowWidth","setWindowWidth","window","innerWidth","dispatch","layoutStore","state","handleWindowWidth","location","isHidden","menuHidden","contentWidth","menuCollapsed","setMenuCollapsed","val","setContentWidth","setIsHidden","undefined","addEventListener","footerClasses","static","sticky","hidden","navbarWrapperClasses","floating","navbarClasses","bgColorCondition","show","customizer","scrollTop"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Navbar, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\n\nimport Customizer from '@components/customizer'\nimport ScrollToTop from '@components/scrolltop'\nimport FooterComponent from './components/footer'\nimport NavbarComponent from './components/navbar'\nimport SidebarComponent from './components/menu/vertical-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useLayout } from '@hooks/useLayout'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\nimport { useRouterTransition } from '@hooks/useRouterTransition'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\n\nconst VerticalLayout = props => {\n  // ** Props\n  const { menu, navbar, footer, children, menuData } = props\n\n  // ** Hooks\n  const [isRtl, setIsRtl] = useRTL()\n  const { skin, setSkin } = useSkin()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n  const { layout, setLayout, setLastLayout } = useLayout()\n  const { transition, setTransition } = useRouterTransition()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const isHidden = layoutStore.menuHidden\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  }\n\n  const navbarClasses = {\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        }`,\n        {\n          // Modern Menu\n          'vertical-menu-modern': windowWidth >= 1200,\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          'vertical-overlay-menu': windowWidth < 1200,\n          'menu-hide': !menuVisibility && windowWidth < 1200,\n          'menu-open': menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuData={menuData}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n        />\n      ) : null}\n\n      <Navbar\n        expand='lg'\n        container={false}\n        light={skin !== 'dark'}\n        dark={skin === 'dark' || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\n        )}\n      >\n        <div className='navbar-container d-flex content'>\n          {navbar ? (\n            navbar({ skin, setSkin, setMenuVisibility })\n          ) : (\n            <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />\n          )}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames('sidenav-overlay', {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      {/* Vertical Nav Menu Overlay */}\n\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          isRtl={isRtl}\n          layout={layout}\n          setSkin={setSkin}\n          setIsRtl={setIsRtl}\n          isHidden={isHidden}\n          setLayout={setLayout}\n          footerType={footerType}\n          navbarType={navbarType}\n          transition={transition}\n          setIsHidden={setIsHidden}\n          themeConfig={themeConfig}\n          navbarColor={navbarColor}\n          contentWidth={contentWidth}\n          setTransition={setTransition}\n          setFooterType={setFooterType}\n          setNavbarType={setNavbarType}\n          setLastLayout={setLastLayout}\n          menuCollapsed={menuCollapsed}\n          setNavbarColor={setNavbarColor}\n          setContentWidth={setContentWidth}\n          setMenuCollapsed={setMenuCollapsed}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n"]},"metadata":{},"sourceType":"module"}