{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\ui-elements\\\\cards\\\\advance\\\\CardChat.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState, useEffect } from 'react'; // ** Custom Components\n\nimport Avatar from '@components/avatar'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { MoreVertical, Send, Image } from 'react-feather'; // ** Reactstrap Imports\n\nimport { Card, CardHeader, Form, Label, InputGroup, Input, InputGroupText, Button } from 'reactstrap'; // ** Images\n\nimport profilePic from '@src/assets/images/portrait/small/avatar-s-11.jpg'; // ** Styles\n\nimport '@styles/base/pages/app-chat-list.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  chat: {\n    id: 2,\n    userId: 1,\n    unseenMsgs: 0,\n    chat: [{\n      message: \"How can we help? We're here for you!\",\n      time: 'Mon Dec 10 2018 07:45:00 GMT+0000 (GMT)',\n      senderId: 11\n    }, {\n      message: 'Hey John, I am looking for the best admin template. Could you please help me to find it out?',\n      time: 'Mon Dec 10 2018 07:45:23 GMT+0000 (GMT)',\n      senderId: 1\n    }, {\n      message: 'It should be Bootstrap 5 compatible.',\n      time: 'Mon Dec 10 2018 07:45:55 GMT+0000 (GMT)',\n      senderId: 1\n    }, {\n      message: 'Absolutely!',\n      time: 'Mon Dec 10 2018 07:46:00 GMT+0000 (GMT)',\n      senderId: 11\n    }, {\n      message: 'Modern admin is the responsive bootstrap 5 admin template.!',\n      time: 'Mon Dec 10 2018 07:46:05 GMT+0000 (GMT)',\n      senderId: 11\n    }, {\n      message: 'Looks clean and fresh UI.',\n      time: 'Mon Dec 10 2018 07:46:23 GMT+0000 (GMT)',\n      senderId: 1\n    }, {\n      message: \"It's perfect for my next project.\",\n      time: 'Mon Dec 10 2018 07:46:33 GMT+0000 (GMT)',\n      senderId: 1\n    }, {\n      message: 'How can I purchase it?',\n      time: 'Mon Dec 10 2018 07:46:43 GMT+0000 (GMT)',\n      senderId: 1\n    }, {\n      message: 'Thanks, from ThemeForest.',\n      time: 'Mon Dec 10 2018 07:46:53 GMT+0000 (GMT)',\n      senderId: 11\n    }, {\n      message: 'I will purchase it for sure. 👍',\n      time: '2020-12-08T13:52:38.013Z',\n      senderId: 1\n    }]\n  },\n  contact: {\n    id: 1,\n    fullName: 'Felecia Rower',\n    avatar: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default,\n    status: 'away'\n  }\n};\n\nconst CardChat = () => {\n  _s();\n\n  // ** States\n  const [msg, setMsg] = useState('');\n  const [chatRef, setChatRef] = useState(null);\n  const [chatData, setChatData] = useState(data); //** Formats chat data based on sender\n\n  const formattedChatData = () => {\n    let chatLog = [];\n\n    if (chatData) {\n      chatLog = chatData.chat.chat;\n    }\n\n    const formattedChatLog = [];\n    let chatMessageSenderId = chatLog[0] ? chatLog[0].senderId : undefined;\n    let msgGroup = {\n      senderId: chatMessageSenderId,\n      messages: []\n    };\n    chatLog.forEach((msg, index) => {\n      if (chatMessageSenderId === msg.senderId) {\n        msgGroup.messages.push({\n          msg: msg.message,\n          time: msg.time\n        });\n      } else {\n        chatMessageSenderId = msg.senderId;\n        formattedChatLog.push(msgGroup);\n        msgGroup = {\n          senderId: msg.senderId,\n          messages: [{\n            msg: msg.message,\n            time: msg.time\n          }]\n        };\n      }\n\n      if (index === chatLog.length - 1) formattedChatLog.push(msgGroup);\n    });\n    return formattedChatLog;\n  }; //** Renders user chat\n\n\n  const renderChats = () => {\n    return formattedChatData().map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('chat', {\n          'chat-left': item.senderId !== 11\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-avatar\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"box-shadow-1 cursor-pointer\",\n            img: item.senderId === 11 ? profilePic : chatData.contact.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: item.messages.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: chat.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n          }, chat.msg, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this);\n    });\n  }; //** Scroll to chat bottom\n\n\n  const scrollToBottom = () => {\n    chatRef.scrollTop = Number.MAX_SAFE_INTEGER;\n  };\n\n  useEffect(() => {\n    if (chatRef !== null) {\n      scrollToBottom();\n    }\n  }, [chatRef, chatData.chat.chat.length]);\n\n  const handleSendMsg = e => {\n    e.preventDefault();\n\n    if (msg.trim().length) {\n      const newMsg = chatData;\n      newMsg.chat.chat.push({\n        message: msg,\n        time: new Date(),\n        senderId: 11\n      });\n      setChatData(newMsg);\n      setMsg('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"chat-widget\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          status: \"online\",\n          className: \"me-2\",\n          img: chatData.contact.avatar,\n          imgHeight: \"34\",\n          imgWidth: \"34\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: \"Carrie Hawkins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MoreVertical, {\n        size: 18,\n        className: \"cursor-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-app-window\",\n      children: [/*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n        containerRef: el => setChatRef(el),\n        className: \"user-chats scroll-area\",\n        options: {\n          wheelPropagation: false\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chats\",\n          children: renderChats()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"chat-app-form\",\n        onSubmit: e => handleSendMsg(e),\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"input-group-merge me-1 form-send-message\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroupText, {\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              className: \"attachment-icon mb-0\",\n              for: \"attach-doc\",\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                className: \"cursor-pointer text-secondary\",\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"attach-doc\",\n                hidden: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: msg,\n            className: \"border-0\",\n            onChange: e => setMsg(e.target.value),\n            placeholder: \"Type your message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"send\",\n          color: \"primary\",\n          children: [/*#__PURE__*/_jsxDEV(Send, {\n            size: 14,\n            className: \"d-lg-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"d-none d-lg-block\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardChat, \"Gw1uwuRvKyftiMkkipxhxZ3HlAg=\");\n\n_c = CardChat;\nexport default CardChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardChat\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/ui-elements/cards/advance/CardChat.js"],"names":["useState","useEffect","Avatar","classnames","PerfectScrollbar","MoreVertical","Send","Image","Card","CardHeader","Form","Label","InputGroup","Input","InputGroupText","Button","profilePic","data","chat","id","userId","unseenMsgs","message","time","senderId","contact","fullName","avatar","require","default","status","CardChat","msg","setMsg","chatRef","setChatRef","chatData","setChatData","formattedChatData","chatLog","formattedChatLog","chatMessageSenderId","undefined","msgGroup","messages","forEach","index","push","length","renderChats","map","item","scrollToBottom","scrollTop","Number","MAX_SAFE_INTEGER","handleSendMsg","e","preventDefault","trim","newMsg","Date","el","wheelPropagation","target","value"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { MoreVertical, Send, Image } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, Form, Label, InputGroup, Input, InputGroupText, Button } from 'reactstrap'\n\n// ** Images\nimport profilePic from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\n// ** Styles\nimport '@styles/base/pages/app-chat-list.scss'\n\nconst data = {\n  chat: {\n    id: 2,\n    userId: 1,\n    unseenMsgs: 0,\n    chat: [\n      {\n        message: \"How can we help? We're here for you!\",\n        time: 'Mon Dec 10 2018 07:45:00 GMT+0000 (GMT)',\n        senderId: 11\n      },\n      {\n        message: 'Hey John, I am looking for the best admin template. Could you please help me to find it out?',\n        time: 'Mon Dec 10 2018 07:45:23 GMT+0000 (GMT)',\n        senderId: 1\n      },\n      {\n        message: 'It should be Bootstrap 5 compatible.',\n        time: 'Mon Dec 10 2018 07:45:55 GMT+0000 (GMT)',\n        senderId: 1\n      },\n      { message: 'Absolutely!', time: 'Mon Dec 10 2018 07:46:00 GMT+0000 (GMT)', senderId: 11 },\n      {\n        message: 'Modern admin is the responsive bootstrap 5 admin template.!',\n        time: 'Mon Dec 10 2018 07:46:05 GMT+0000 (GMT)',\n        senderId: 11\n      },\n      { message: 'Looks clean and fresh UI.', time: 'Mon Dec 10 2018 07:46:23 GMT+0000 (GMT)', senderId: 1 },\n      { message: \"It's perfect for my next project.\", time: 'Mon Dec 10 2018 07:46:33 GMT+0000 (GMT)', senderId: 1 },\n      { message: 'How can I purchase it?', time: 'Mon Dec 10 2018 07:46:43 GMT+0000 (GMT)', senderId: 1 },\n      { message: 'Thanks, from ThemeForest.', time: 'Mon Dec 10 2018 07:46:53 GMT+0000 (GMT)', senderId: 11 },\n      { message: 'I will purchase it for sure. 👍', time: '2020-12-08T13:52:38.013Z', senderId: 1 }\n    ]\n  },\n  contact: {\n    id: 1,\n    fullName: 'Felecia Rower',\n    avatar: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default,\n    status: 'away'\n  }\n}\n\nconst CardChat = () => {\n  // ** States\n  const [msg, setMsg] = useState('')\n  const [chatRef, setChatRef] = useState(null)\n  const [chatData, setChatData] = useState(data)\n\n  //** Formats chat data based on sender\n  const formattedChatData = () => {\n    let chatLog = []\n    if (chatData) {\n      chatLog = chatData.chat.chat\n    }\n\n    const formattedChatLog = []\n    let chatMessageSenderId = chatLog[0] ? chatLog[0].senderId : undefined\n    let msgGroup = {\n      senderId: chatMessageSenderId,\n      messages: []\n    }\n    chatLog.forEach((msg, index) => {\n      if (chatMessageSenderId === msg.senderId) {\n        msgGroup.messages.push({\n          msg: msg.message,\n          time: msg.time\n        })\n      } else {\n        chatMessageSenderId = msg.senderId\n        formattedChatLog.push(msgGroup)\n        msgGroup = {\n          senderId: msg.senderId,\n          messages: [\n            {\n              msg: msg.message,\n              time: msg.time\n            }\n          ]\n        }\n      }\n      if (index === chatLog.length - 1) formattedChatLog.push(msgGroup)\n    })\n    return formattedChatLog\n  }\n\n  //** Renders user chat\n  const renderChats = () => {\n    return formattedChatData().map((item, index) => {\n      return (\n        <div\n          key={index}\n          className={classnames('chat', {\n            'chat-left': item.senderId !== 11\n          })}\n        >\n          <div className='chat-avatar'>\n            <Avatar\n              className='box-shadow-1 cursor-pointer'\n              img={item.senderId === 11 ? profilePic : chatData.contact.avatar}\n            />\n          </div>\n\n          <div className='chat-body'>\n            {item.messages.map(chat => (\n              <div key={chat.msg} className='chat-content'>\n                <p>{chat.msg}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )\n    })\n  }\n\n  //** Scroll to chat bottom\n  const scrollToBottom = () => {\n    chatRef.scrollTop = Number.MAX_SAFE_INTEGER\n  }\n\n  useEffect(() => {\n    if (chatRef !== null) {\n      scrollToBottom()\n    }\n  }, [chatRef, chatData.chat.chat.length])\n\n  const handleSendMsg = e => {\n    e.preventDefault()\n    if (msg.trim().length) {\n      const newMsg = chatData\n\n      newMsg.chat.chat.push({\n        message: msg,\n        time: new Date(),\n        senderId: 11\n      })\n\n      setChatData(newMsg)\n      setMsg('')\n    }\n  }\n\n  return (\n    <Card className='chat-widget'>\n      <CardHeader>\n        <div className='d-flex align-items-center'>\n          <Avatar status='online' className='me-2' img={chatData.contact.avatar} imgHeight='34' imgWidth='34' />\n          <h5 className='mb-0'>Carrie Hawkins</h5>\n        </div>\n        <MoreVertical size={18} className='cursor-pointer' />\n      </CardHeader>\n      <div className='chat-app-window'>\n        <PerfectScrollbar\n          containerRef={el => setChatRef(el)}\n          className='user-chats scroll-area'\n          options={{ wheelPropagation: false }}\n        >\n          <div className='chats'>{renderChats()}</div>\n        </PerfectScrollbar>\n        <Form className='chat-app-form' onSubmit={e => handleSendMsg(e)}>\n          <InputGroup className='input-group-merge me-1 form-send-message'>\n            <InputGroupText>\n              <Label className='attachment-icon mb-0' for='attach-doc'>\n                <Image className='cursor-pointer text-secondary' size={14} />\n                <input type='file' id='attach-doc' hidden />\n              </Label>\n            </InputGroupText>\n            <Input\n              value={msg}\n              className='border-0'\n              onChange={e => setMsg(e.target.value)}\n              placeholder='Type your message'\n            />\n          </InputGroup>\n          <Button className='send' color='primary'>\n            <Send size={14} className='d-lg-none' />\n            <span className='d-none d-lg-block'>Send</span>\n          </Button>\n        </Form>\n      </div>\n    </Card>\n  )\n}\n\nexport default CardChat\n"]},"metadata":{},"sourceType":"module"}