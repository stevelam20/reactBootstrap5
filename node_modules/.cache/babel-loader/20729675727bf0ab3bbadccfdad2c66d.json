{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\apps\\\\user\\\\list\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\n// ** React Import\nimport { useState } from 'react'; // ** Custom Components\n\nimport Sidebar from '@components/sidebar'; // ** Utils\n\nimport { selectThemeColors } from '@utils'; // ** Third Party Components\n\nimport Select from 'react-select';\nimport classnames from 'classnames';\nimport { useForm, Controller } from 'react-hook-form'; // ** Reactstrap Imports\n\nimport { Button, Label, FormText, Form, Input } from 'reactstrap'; // ** Store & Actions\n\nimport { addUser } from '../store';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValues = {\n  email: '',\n  contact: '',\n  company: '',\n  fullName: '',\n  username: '',\n  country: null\n};\nconst countryOptions = [{\n  label: 'Australia',\n  value: 'Australia'\n}, {\n  label: 'Bangladesh',\n  value: 'Bangladesh'\n}, {\n  label: 'Belarus',\n  value: 'Belarus'\n}, {\n  label: 'Brazil',\n  value: 'Brazil'\n}, {\n  label: 'Canada',\n  value: 'Canada'\n}, {\n  label: 'China',\n  value: 'China'\n}, {\n  label: 'France',\n  value: 'France'\n}, {\n  label: 'Germany',\n  value: 'Germany'\n}, {\n  label: 'India',\n  value: 'India'\n}, {\n  label: 'Indonesia',\n  value: 'Indonesia'\n}, {\n  label: 'Israel',\n  value: 'Israel'\n}, {\n  label: 'Italy',\n  value: 'Italy'\n}, {\n  label: 'Japan',\n  value: 'Japan'\n}, {\n  label: 'Korea',\n  value: 'Korea'\n}, {\n  label: 'Mexico',\n  value: 'Mexico'\n}, {\n  label: 'Philippines',\n  value: 'Philippines'\n}, {\n  label: 'Russia',\n  value: 'Russia'\n}, {\n  label: 'South',\n  value: 'South'\n}, {\n  label: 'Thailand',\n  value: 'Thailand'\n}, {\n  label: 'Turkey',\n  value: 'Turkey'\n}, {\n  label: 'Ukraine',\n  value: 'Ukraine'\n}, {\n  label: 'United Arab Emirates',\n  value: 'United Arab Emirates'\n}, {\n  label: 'United Kingdom',\n  value: 'United Kingdom'\n}, {\n  label: 'United States',\n  value: 'United States'\n}];\n\nconst checkIsValid = data => {\n  return Object.values(data).every(field => typeof field === 'object' ? field !== null : field.length > 0);\n};\n\nconst SidebarNewUsers = _ref => {\n  _s();\n\n  let {\n    open,\n    toggleSidebar\n  } = _ref;\n  // ** States\n  const [data, setData] = useState(null);\n  const [plan, setPlan] = useState('basic');\n  const [role, setRole] = useState('subscriber'); // ** Store Vars\n\n  const dispatch = useDispatch(); // ** Vars\n\n  const {\n    control,\n    setValue,\n    setError,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues\n  }); // ** Function to handle form submit\n\n  const onSubmit = data => {\n    setData(data);\n\n    if (checkIsValid(data)) {\n      toggleSidebar();\n      dispatch(addUser({\n        role,\n        avatar: '',\n        status: 'active',\n        email: data.email,\n        currentPlan: plan,\n        billing: 'auto debit',\n        company: data.company,\n        contact: data.contact,\n        fullName: data.fullName,\n        username: data.username,\n        country: data.country.value\n      }));\n    } else {\n      for (const key in data) {\n        if (data[key] === null) {\n          setError('country', {\n            type: 'manual'\n          });\n        }\n\n        if (data[key] !== null && data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          });\n        }\n      }\n    }\n  };\n\n  const handleSidebarClosed = () => {\n    for (const key in defaultValues) {\n      setValue(key, '');\n    }\n\n    setRole('subscriber');\n    setPlan('basic');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sidebar, {\n    size: \"lg\",\n    open: open,\n    title: \"New User\",\n    headerClassName: \"mb-1\",\n    contentClassName: \"pt-0\",\n    toggleSidebar: toggleSidebar,\n    onClosed: handleSidebarClosed,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"form-label\",\n          for: \"fullName\",\n          children: [\"Full Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"fullName\",\n          control: control,\n          render: _ref2 => {\n            let {\n              field\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(Input, {\n              id: \"fullName\",\n              placeholder: \"John Doe\",\n              invalid: errors.fullName && true,\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"form-label\",\n          for: \"username\",\n          children: [\"Username \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"username\",\n          control: control,\n          render: _ref3 => {\n            let {\n              field\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(Input, {\n              id: \"username\",\n              placeholder: \"johnDoe99\",\n              invalid: errors.username && true,\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"form-label\",\n          for: \"userEmail\",\n          children: [\"Email \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"email\",\n          control: control,\n          render: _ref4 => {\n            let {\n              field\n            } = _ref4;\n            return /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              id: \"userEmail\",\n              placeholder: \"john.doe@example.com\",\n              invalid: errors.email && true,\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormText, {\n          color: \"muted\",\n          children: \"You can use letters, numbers & periods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"form-label\",\n          for: \"contact\",\n          children: [\"Contact \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"contact\",\n          control: control,\n          render: _ref5 => {\n            let {\n              field\n            } = _ref5;\n            return /*#__PURE__*/_jsxDEV(Input, {\n              id: \"contact\",\n              placeholder: \"(397) 294-5153\",\n              invalid: errors.contact && true,\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"form-label\",\n          for: \"company\",\n          children: [\"Company \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"company\",\n          control: control,\n          render: _ref6 => {\n            let {\n              field\n            } = _ref6;\n            return /*#__PURE__*/_jsxDEV(Input, {\n              id: \"company\",\n              placeholder: \"Company Pvt Ltd\",\n              invalid: errors.company && true,\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"form-label\",\n          for: \"country\",\n          children: [\"Country \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"country\",\n          control: control,\n          render: _ref7 => {\n            let {\n              field\n            } = _ref7;\n            return (\n              /*#__PURE__*/\n              // <Input id='country' placeholder='Australia' invalid={errors.country && true} {...field} />\n              _jsxDEV(Select, {\n                isClearable: false,\n                classNamePrefix: \"select\",\n                options: countryOptions,\n                theme: selectThemeColors,\n                className: classnames('react-select', {\n                  'is-invalid': data !== null && data.country === null\n                }),\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 15\n              }, this)\n            );\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"form-label\",\n          for: \"user-role\",\n          children: \"User Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          id: \"user-role\",\n          name: \"user-role\",\n          value: role,\n          onChange: e => setRole(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"subscriber\",\n            children: \"Subscriber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"editor\",\n            children: \"Editor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"maintainer\",\n            children: \"Maintainer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"author\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-1\",\n        value: plan,\n        onChange: e => setPlan(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"form-label\",\n          for: \"select-plan\",\n          children: \"Select Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          id: \"select-plan\",\n          name: \"select-plan\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"basic\",\n            children: \"Basic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"enterprise\",\n            children: \"Enterprise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"company\",\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"team\",\n            children: \"Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"me-1\",\n        color: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"reset\",\n        color: \"secondary\",\n        outline: true,\n        onClick: toggleSidebar,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SidebarNewUsers, \"ii7aRTUQwc9pBej+hYmM+oh27kg=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = SidebarNewUsers;\nexport default SidebarNewUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarNewUsers\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/apps/user/list/Sidebar.js"],"names":["useState","Sidebar","selectThemeColors","Select","classnames","useForm","Controller","Button","Label","FormText","Form","Input","addUser","useDispatch","defaultValues","email","contact","company","fullName","username","country","countryOptions","label","value","checkIsValid","data","Object","values","every","field","length","SidebarNewUsers","open","toggleSidebar","setData","plan","setPlan","role","setRole","dispatch","control","setValue","setError","handleSubmit","formState","errors","onSubmit","avatar","status","currentPlan","billing","key","type","handleSidebarClosed","e","target"],"mappings":";;;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,qBAApB,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,QAAlC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,IAAlC,EAAwCC,KAAxC,QAAqD,YAArD,C,CAEA;;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,OAAO,EAAE,EAFW;AAGpBC,EAAAA,OAAO,EAAE,EAHW;AAIpBC,EAAAA,QAAQ,EAAE,EAJU;AAKpBC,EAAAA,QAAQ,EAAE,EALU;AAMpBC,EAAAA,OAAO,EAAE;AANW,CAAtB;AASA,MAAMC,cAAc,GAAG,CACrB;AAAEC,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CADqB,EAErB;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAFqB,EAGrB;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAHqB,EAIrB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAJqB,EAKrB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CALqB,EAMrB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CANqB,EAOrB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAPqB,EAQrB;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CARqB,EASrB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CATqB,EAUrB;AAAED,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CAVqB,EAWrB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAXqB,EAYrB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAZqB,EAarB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAbqB,EAcrB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAdqB,EAerB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAfqB,EAgBrB;AAAED,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,KAAK,EAAE;AAA/B,CAhBqB,EAiBrB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAjBqB,EAkBrB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAlBqB,EAmBrB;AAAED,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAnBqB,EAoBrB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CApBqB,EAqBrB;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CArBqB,EAsBrB;AAAED,EAAAA,KAAK,EAAE,sBAAT;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CAtBqB,EAuBrB;AAAED,EAAAA,KAAK,EAAE,gBAAT;AAA2BC,EAAAA,KAAK,EAAE;AAAlC,CAvBqB,EAwBrB;AAAED,EAAAA,KAAK,EAAE,eAAT;AAA0BC,EAAAA,KAAK,EAAE;AAAjC,CAxBqB,CAAvB;;AA2BA,MAAMC,YAAY,GAAGC,IAAI,IAAI;AAC3B,SAAOC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoBG,KAApB,CAA0BC,KAAK,IAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,KAAK,IAAtC,GAA6CA,KAAK,CAACC,MAAN,GAAe,CAAhG,CAAP;AACD,CAFD;;AAIA,MAAMC,eAAe,GAAG,QAA6B;AAAA;;AAAA,MAA5B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA4B;AACnD;AACA,QAAM,CAACR,IAAD,EAAOS,OAAP,IAAkBlC,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACmC,IAAD,EAAOC,OAAP,IAAkBpC,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM,CAACqC,IAAD,EAAOC,OAAP,IAAkBtC,QAAQ,CAAC,YAAD,CAAhC,CAJmD,CAMnD;;AACA,QAAMuC,QAAQ,GAAG1B,WAAW,EAA5B,CAPmD,CASnD;;AACA,QAAM;AACJ2B,IAAAA,OADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AALP,MAMFxC,OAAO,CAAC;AAAES,IAAAA;AAAF,GAAD,CANX,CAVmD,CAkBnD;;AACA,QAAMgC,QAAQ,GAAGrB,IAAI,IAAI;AACvBS,IAAAA,OAAO,CAACT,IAAD,CAAP;;AACA,QAAID,YAAY,CAACC,IAAD,CAAhB,EAAwB;AACtBQ,MAAAA,aAAa;AACbM,MAAAA,QAAQ,CACN3B,OAAO,CAAC;AACNyB,QAAAA,IADM;AAENU,QAAAA,MAAM,EAAE,EAFF;AAGNC,QAAAA,MAAM,EAAE,QAHF;AAINjC,QAAAA,KAAK,EAAEU,IAAI,CAACV,KAJN;AAKNkC,QAAAA,WAAW,EAAEd,IALP;AAMNe,QAAAA,OAAO,EAAE,YANH;AAONjC,QAAAA,OAAO,EAAEQ,IAAI,CAACR,OAPR;AAQND,QAAAA,OAAO,EAAES,IAAI,CAACT,OARR;AASNE,QAAAA,QAAQ,EAAEO,IAAI,CAACP,QATT;AAUNC,QAAAA,QAAQ,EAAEM,IAAI,CAACN,QAVT;AAWNC,QAAAA,OAAO,EAAEK,IAAI,CAACL,OAAL,CAAaG;AAXhB,OAAD,CADD,CAAR;AAeD,KAjBD,MAiBO;AACL,WAAK,MAAM4B,GAAX,IAAkB1B,IAAlB,EAAwB;AACtB,YAAIA,IAAI,CAAC0B,GAAD,CAAJ,KAAc,IAAlB,EAAwB;AACtBT,UAAAA,QAAQ,CAAC,SAAD,EAAY;AAClBU,YAAAA,IAAI,EAAE;AADY,WAAZ,CAAR;AAGD;;AACD,YAAI3B,IAAI,CAAC0B,GAAD,CAAJ,KAAc,IAAd,IAAsB1B,IAAI,CAAC0B,GAAD,CAAJ,CAAUrB,MAAV,KAAqB,CAA/C,EAAkD;AAChDY,UAAAA,QAAQ,CAACS,GAAD,EAAM;AACZC,YAAAA,IAAI,EAAE;AADM,WAAN,CAAR;AAGD;AACF;AACF;AACF,GAjCD;;AAmCA,QAAMC,mBAAmB,GAAG,MAAM;AAChC,SAAK,MAAMF,GAAX,IAAkBrC,aAAlB,EAAiC;AAC/B2B,MAAAA,QAAQ,CAACU,GAAD,EAAM,EAAN,CAAR;AACD;;AACDb,IAAAA,OAAO,CAAC,YAAD,CAAP;AACAF,IAAAA,OAAO,CAAC,OAAD,CAAP;AACD,GAND;;AAQA,sBACE,QAAC,OAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,IAAI,EAAEJ,IAFR;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,eAAe,EAAC,MAJlB;AAKE,IAAA,gBAAgB,EAAC,MALnB;AAME,IAAA,aAAa,EAAEC,aANjB;AAOE,IAAA,QAAQ,EAAEoB,mBAPZ;AAAA,2BASE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEV,YAAY,CAACG,QAAD,CAA5B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,YAAjB;AAA8B,UAAA,GAAG,EAAC,UAAlC;AAAA,gDACY;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,OAAO,EAAEN,OAFX;AAGE,UAAA,MAAM,EAAE;AAAA,gBAAC;AAAEX,cAAAA;AAAF,aAAD;AAAA,gCACN,QAAC,KAAD;AAAO,cAAA,EAAE,EAAC,UAAV;AAAqB,cAAA,WAAW,EAAC,UAAjC;AAA4C,cAAA,OAAO,EAAEgB,MAAM,CAAC3B,QAAP,IAAmB,IAAxE;AAAA,iBAAkFW;AAAlF;AAAA;AAAA;AAAA;AAAA,oBADM;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,YAAjB;AAA8B,UAAA,GAAG,EAAC,UAAlC;AAAA,+CACW;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADX;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,OAAO,EAAEW,OAFX;AAGE,UAAA,MAAM,EAAE;AAAA,gBAAC;AAAEX,cAAAA;AAAF,aAAD;AAAA,gCACN,QAAC,KAAD;AAAO,cAAA,EAAE,EAAC,UAAV;AAAqB,cAAA,WAAW,EAAC,WAAjC;AAA6C,cAAA,OAAO,EAAEgB,MAAM,CAAC1B,QAAP,IAAmB,IAAzE;AAAA,iBAAmFU;AAAnF;AAAA;AAAA;AAAA;AAAA,oBADM;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAyBE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,YAAjB;AAA8B,UAAA,GAAG,EAAC,WAAlC;AAAA,4CACQ;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,OAAO,EAAEW,OAFX;AAGE,UAAA,MAAM,EAAE;AAAA,gBAAC;AAAEX,cAAAA;AAAF,aAAD;AAAA,gCACN,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,EAAE,EAAC,WAFL;AAGE,cAAA,WAAW,EAAC,sBAHd;AAIE,cAAA,OAAO,EAAEgB,MAAM,CAAC9B,KAAP,IAAgB,IAJ3B;AAAA,iBAKMc;AALN;AAAA;AAAA;AAAA;AAAA,oBADM;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,gBAJF,eAiBE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,eA6CE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,YAAjB;AAA8B,UAAA,GAAG,EAAC,SAAlC;AAAA,8CACU;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,OAAO,EAAEW,OAFX;AAGE,UAAA,MAAM,EAAE;AAAA,gBAAC;AAAEX,cAAAA;AAAF,aAAD;AAAA,gCACN,QAAC,KAAD;AAAO,cAAA,EAAE,EAAC,SAAV;AAAoB,cAAA,WAAW,EAAC,gBAAhC;AAAiD,cAAA,OAAO,EAAEgB,MAAM,CAAC7B,OAAP,IAAkB,IAA5E;AAAA,iBAAsFa;AAAtF;AAAA;AAAA;AAAA;AAAA,oBADM;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7CF,eAyDE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,YAAjB;AAA8B,UAAA,GAAG,EAAC,SAAlC;AAAA,8CACU;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,OAAO,EAAEW,OAFX;AAGE,UAAA,MAAM,EAAE;AAAA,gBAAC;AAAEX,cAAAA;AAAF,aAAD;AAAA,gCACN,QAAC,KAAD;AAAO,cAAA,EAAE,EAAC,SAAV;AAAoB,cAAA,WAAW,EAAC,iBAAhC;AAAkD,cAAA,OAAO,EAAEgB,MAAM,CAAC5B,OAAP,IAAkB,IAA7E;AAAA,iBAAuFY;AAAvF;AAAA;AAAA;AAAA;AAAA,oBADM;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzDF,eAqEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,YAAjB;AAA8B,UAAA,GAAG,EAAC,SAAlC;AAAA,8CACU;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,OAAO,EAAEW,OAFX;AAGE,UAAA,MAAM,EAAE;AAAA,gBAAC;AAAEX,cAAAA;AAAF,aAAD;AAAA;AAAA;AACN;AACA,sBAAC,MAAD;AACE,gBAAA,WAAW,EAAE,KADf;AAEE,gBAAA,eAAe,EAAC,QAFlB;AAGE,gBAAA,OAAO,EAAER,cAHX;AAIE,gBAAA,KAAK,EAAEnB,iBAJT;AAKE,gBAAA,SAAS,EAAEE,UAAU,CAAC,cAAD,EAAiB;AAAE,gCAAcqB,IAAI,KAAK,IAAT,IAAiBA,IAAI,CAACL,OAAL,KAAiB;AAAlD,iBAAjB,CALvB;AAAA,mBAMMS;AANN;AAAA;AAAA;AAAA;AAAA;AAFM;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cArEF,eAyFE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,YAAjB;AAA8B,UAAA,GAAG,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAC,WAAxB;AAAoC,UAAA,IAAI,EAAC,WAAzC;AAAqD,UAAA,KAAK,EAAEQ,IAA5D;AAAkE,UAAA,QAAQ,EAAEiB,CAAC,IAAIhB,OAAO,CAACgB,CAAC,CAACC,MAAF,CAAShC,KAAV,CAAxF;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAQ,YAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzFF,eAqGE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAEY,IAA7B;AAAmC,QAAA,QAAQ,EAAEmB,CAAC,IAAIlB,OAAO,CAACkB,CAAC,CAACC,MAAF,CAAShC,KAAV,CAAzD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,YAAjB;AAA8B,UAAA,GAAG,EAAC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAC,aAAxB;AAAsC,UAAA,IAAI,EAAC,aAA3C;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cArGF,eAgHE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,MAAhC;AAAuC,QAAA,KAAK,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhHF,eAmHE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,KAAK,EAAC,WAA3B;AAAuC,QAAA,OAAO,MAA9C;AAA+C,QAAA,OAAO,EAAEU,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnHF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADF;AAmID,CAjMD;;GAAMF,e;UAOalB,W,EASbR,O;;;KAhBA0B,e;AAmMN,eAAeA,eAAf","sourcesContent":["// ** React Import\nimport { useState } from 'react'\n\n// ** Custom Components\nimport Sidebar from '@components/sidebar'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Reactstrap Imports\nimport { Button, Label, FormText, Form, Input } from 'reactstrap'\n\n// ** Store & Actions\nimport { addUser } from '../store'\nimport { useDispatch } from 'react-redux'\n\nconst defaultValues = {\n  email: '',\n  contact: '',\n  company: '',\n  fullName: '',\n  username: '',\n  country: null\n}\n\nconst countryOptions = [\n  { label: 'Australia', value: 'Australia' },\n  { label: 'Bangladesh', value: 'Bangladesh' },\n  { label: 'Belarus', value: 'Belarus' },\n  { label: 'Brazil', value: 'Brazil' },\n  { label: 'Canada', value: 'Canada' },\n  { label: 'China', value: 'China' },\n  { label: 'France', value: 'France' },\n  { label: 'Germany', value: 'Germany' },\n  { label: 'India', value: 'India' },\n  { label: 'Indonesia', value: 'Indonesia' },\n  { label: 'Israel', value: 'Israel' },\n  { label: 'Italy', value: 'Italy' },\n  { label: 'Japan', value: 'Japan' },\n  { label: 'Korea', value: 'Korea' },\n  { label: 'Mexico', value: 'Mexico' },\n  { label: 'Philippines', value: 'Philippines' },\n  { label: 'Russia', value: 'Russia' },\n  { label: 'South', value: 'South' },\n  { label: 'Thailand', value: 'Thailand' },\n  { label: 'Turkey', value: 'Turkey' },\n  { label: 'Ukraine', value: 'Ukraine' },\n  { label: 'United Arab Emirates', value: 'United Arab Emirates' },\n  { label: 'United Kingdom', value: 'United Kingdom' },\n  { label: 'United States', value: 'United States' }\n]\n\nconst checkIsValid = data => {\n  return Object.values(data).every(field => (typeof field === 'object' ? field !== null : field.length > 0))\n}\n\nconst SidebarNewUsers = ({ open, toggleSidebar }) => {\n  // ** States\n  const [data, setData] = useState(null)\n  const [plan, setPlan] = useState('basic')\n  const [role, setRole] = useState('subscriber')\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** Vars\n  const {\n    control,\n    setValue,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({ defaultValues })\n\n  // ** Function to handle form submit\n  const onSubmit = data => {\n    setData(data)\n    if (checkIsValid(data)) {\n      toggleSidebar()\n      dispatch(\n        addUser({\n          role,\n          avatar: '',\n          status: 'active',\n          email: data.email,\n          currentPlan: plan,\n          billing: 'auto debit',\n          company: data.company,\n          contact: data.contact,\n          fullName: data.fullName,\n          username: data.username,\n          country: data.country.value\n        })\n      )\n    } else {\n      for (const key in data) {\n        if (data[key] === null) {\n          setError('country', {\n            type: 'manual'\n          })\n        }\n        if (data[key] !== null && data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          })\n        }\n      }\n    }\n  }\n\n  const handleSidebarClosed = () => {\n    for (const key in defaultValues) {\n      setValue(key, '')\n    }\n    setRole('subscriber')\n    setPlan('basic')\n  }\n\n  return (\n    <Sidebar\n      size='lg'\n      open={open}\n      title='New User'\n      headerClassName='mb-1'\n      contentClassName='pt-0'\n      toggleSidebar={toggleSidebar}\n      onClosed={handleSidebarClosed}\n    >\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <div className='mb-1'>\n          <Label className='form-label' for='fullName'>\n            Full Name <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='fullName'\n            control={control}\n            render={({ field }) => (\n              <Input id='fullName' placeholder='John Doe' invalid={errors.fullName && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='username'>\n            Username <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='username'\n            control={control}\n            render={({ field }) => (\n              <Input id='username' placeholder='johnDoe99' invalid={errors.username && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='userEmail'>\n            Email <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='email'\n            control={control}\n            render={({ field }) => (\n              <Input\n                type='email'\n                id='userEmail'\n                placeholder='john.doe@example.com'\n                invalid={errors.email && true}\n                {...field}\n              />\n            )}\n          />\n          <FormText color='muted'>You can use letters, numbers & periods</FormText>\n        </div>\n\n        <div className='mb-1'>\n          <Label className='form-label' for='contact'>\n            Contact <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='contact'\n            control={control}\n            render={({ field }) => (\n              <Input id='contact' placeholder='(397) 294-5153' invalid={errors.contact && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='company'>\n            Company <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='company'\n            control={control}\n            render={({ field }) => (\n              <Input id='company' placeholder='Company Pvt Ltd' invalid={errors.company && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='country'>\n            Country <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='country'\n            control={control}\n            render={({ field }) => (\n              // <Input id='country' placeholder='Australia' invalid={errors.country && true} {...field} />\n              <Select\n                isClearable={false}\n                classNamePrefix='select'\n                options={countryOptions}\n                theme={selectThemeColors}\n                className={classnames('react-select', { 'is-invalid': data !== null && data.country === null })}\n                {...field}\n              />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='user-role'>\n            User Role\n          </Label>\n          <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\n            <option value='subscriber'>Subscriber</option>\n            <option value='editor'>Editor</option>\n            <option value='maintainer'>Maintainer</option>\n            <option value='author'>Author</option>\n            <option value='admin'>Admin</option>\n          </Input>\n        </div>\n        <div className='mb-1' value={plan} onChange={e => setPlan(e.target.value)}>\n          <Label className='form-label' for='select-plan'>\n            Select Plan\n          </Label>\n          <Input type='select' id='select-plan' name='select-plan'>\n            <option value='basic'>Basic</option>\n            <option value='enterprise'>Enterprise</option>\n            <option value='company'>Company</option>\n            <option value='team'>Team</option>\n          </Input>\n        </div>\n        <Button type='submit' className='me-1' color='primary'>\n          Submit\n        </Button>\n        <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\n          Cancel\n        </Button>\n      </Form>\n    </Sidebar>\n  )\n}\n\nexport default SidebarNewUsers\n"]},"metadata":{},"sourceType":"module"}