{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\apps\\\\calendar\\\\index.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { Row, Col } from 'reactstrap'; // ** Calendar App Component Imports\n\nimport Calendar from './Calendar';\nimport SidebarLeft from './SidebarLeft';\nimport AddEventSidebar from './AddEventSidebar'; // ** Custom Hooks\n\nimport { useRTL } from '@hooks/useRTL'; // ** Store & Actions\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchEvents, selectEvent, updateEvent, updateFilter, updateAllFilters, addEvent, removeEvent } from './store'; // ** Styles\n\nimport '@styles/react/apps/app-calendar.scss'; // ** CalendarColors\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calendarsColor = {\n  Business: 'primary',\n  Holiday: 'success',\n  Personal: 'danger',\n  Family: 'warning',\n  ETC: 'info'\n};\n\nconst CalendarComponent = () => {\n  _s();\n\n  // ** Variables\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.calendar); // ** states\n\n  const [calendarApi, setCalendarApi] = useState(null);\n  const [addSidebarOpen, setAddSidebarOpen] = useState(false);\n  const [leftSidebarOpen, setLeftSidebarOpen] = useState(false); // ** Hooks\n\n  const [isRtl] = useRTL(); // ** AddEventSidebar Toggle Function\n\n  const handleAddEventSidebar = () => setAddSidebarOpen(!addSidebarOpen); // ** LeftSidebar Toggle Function\n\n\n  const toggleSidebar = val => setLeftSidebarOpen(val); // ** Blank Event Object\n\n\n  const blankEvent = {\n    title: '',\n    start: '',\n    end: '',\n    allDay: false,\n    url: '',\n    extendedProps: {\n      calendar: '',\n      guests: [],\n      location: '',\n      description: ''\n    }\n  }; // ** refetchEvents\n\n  const refetchEvents = () => {\n    if (calendarApi !== null) {\n      calendarApi.refetchEvents();\n    }\n  }; // ** Fetch Events On Mount\n\n\n  useEffect(() => {\n    dispatch(fetchEvents(store.selectedCalendars));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-calendar overflow-hidden border\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"g-0\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          id: \"app-calendar-sidebar\",\n          className: classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\n            show: leftSidebarOpen\n          }),\n          children: /*#__PURE__*/_jsxDEV(SidebarLeft, {\n            store: store,\n            dispatch: dispatch,\n            updateFilter: updateFilter,\n            toggleSidebar: toggleSidebar,\n            updateAllFilters: updateAllFilters,\n            handleAddEventSidebar: handleAddEventSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"position-relative\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            isRtl: isRtl,\n            store: store,\n            dispatch: dispatch,\n            blankEvent: blankEvent,\n            calendarApi: calendarApi,\n            selectEvent: selectEvent,\n            updateEvent: updateEvent,\n            toggleSidebar: toggleSidebar,\n            calendarsColor: calendarsColor,\n            setCalendarApi: setCalendarApi,\n            handleAddEventSidebar: handleAddEventSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames('body-content-overlay', {\n            show: leftSidebarOpen === true\n          }),\n          onClick: () => toggleSidebar(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEventSidebar, {\n      store: store,\n      dispatch: dispatch,\n      addEvent: addEvent,\n      open: addSidebarOpen,\n      selectEvent: selectEvent,\n      updateEvent: updateEvent,\n      removeEvent: removeEvent,\n      calendarApi: calendarApi,\n      refetchEvents: refetchEvents,\n      calendarsColor: calendarsColor,\n      handleAddEventSidebar: handleAddEventSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CalendarComponent, \"8xZfriqfrVAj9k8c5jPa4w/ZBac=\", false, function () {\n  return [useDispatch, useSelector, useRTL];\n});\n\n_c = CalendarComponent;\nexport default CalendarComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/apps/calendar/index.js"],"names":["Fragment","useState","useEffect","classnames","Row","Col","Calendar","SidebarLeft","AddEventSidebar","useRTL","useSelector","useDispatch","fetchEvents","selectEvent","updateEvent","updateFilter","updateAllFilters","addEvent","removeEvent","calendarsColor","Business","Holiday","Personal","Family","ETC","CalendarComponent","dispatch","store","state","calendar","calendarApi","setCalendarApi","addSidebarOpen","setAddSidebarOpen","leftSidebarOpen","setLeftSidebarOpen","isRtl","handleAddEventSidebar","toggleSidebar","val","blankEvent","title","start","end","allDay","url","extendedProps","guests","location","description","refetchEvents","selectedCalendars","show"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Row, Col } from 'reactstrap'\n\n// ** Calendar App Component Imports\nimport Calendar from './Calendar'\nimport SidebarLeft from './SidebarLeft'\nimport AddEventSidebar from './AddEventSidebar'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchEvents, selectEvent, updateEvent, updateFilter, updateAllFilters, addEvent, removeEvent } from './store'\n\n// ** Styles\nimport '@styles/react/apps/app-calendar.scss'\n\n// ** CalendarColors\nconst calendarsColor = {\n  Business: 'primary',\n  Holiday: 'success',\n  Personal: 'danger',\n  Family: 'warning',\n  ETC: 'info'\n}\n\nconst CalendarComponent = () => {\n  // ** Variables\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.calendar)\n\n  // ** states\n  const [calendarApi, setCalendarApi] = useState(null)\n  const [addSidebarOpen, setAddSidebarOpen] = useState(false)\n  const [leftSidebarOpen, setLeftSidebarOpen] = useState(false)\n\n  // ** Hooks\n  const [isRtl] = useRTL()\n\n  // ** AddEventSidebar Toggle Function\n  const handleAddEventSidebar = () => setAddSidebarOpen(!addSidebarOpen)\n\n  // ** LeftSidebar Toggle Function\n  const toggleSidebar = val => setLeftSidebarOpen(val)\n\n  // ** Blank Event Object\n  const blankEvent = {\n    title: '',\n    start: '',\n    end: '',\n    allDay: false,\n    url: '',\n    extendedProps: {\n      calendar: '',\n      guests: [],\n      location: '',\n      description: ''\n    }\n  }\n\n  // ** refetchEvents\n  const refetchEvents = () => {\n    if (calendarApi !== null) {\n      calendarApi.refetchEvents()\n    }\n  }\n\n  // ** Fetch Events On Mount\n  useEffect(() => {\n    dispatch(fetchEvents(store.selectedCalendars))\n  }, [])\n\n  return (\n    <Fragment>\n      <div className='app-calendar overflow-hidden border'>\n        <Row className='g-0'>\n          <Col\n            id='app-calendar-sidebar'\n            className={classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\n              show: leftSidebarOpen\n            })}\n          >\n            <SidebarLeft\n              store={store}\n              dispatch={dispatch}\n              updateFilter={updateFilter}\n              toggleSidebar={toggleSidebar}\n              updateAllFilters={updateAllFilters}\n              handleAddEventSidebar={handleAddEventSidebar}\n            />\n          </Col>\n          <Col className='position-relative'>\n            <Calendar\n              isRtl={isRtl}\n              store={store}\n              dispatch={dispatch}\n              blankEvent={blankEvent}\n              calendarApi={calendarApi}\n              selectEvent={selectEvent}\n              updateEvent={updateEvent}\n              toggleSidebar={toggleSidebar}\n              calendarsColor={calendarsColor}\n              setCalendarApi={setCalendarApi}\n              handleAddEventSidebar={handleAddEventSidebar}\n            />\n          </Col>\n          <div\n            className={classnames('body-content-overlay', {\n              show: leftSidebarOpen === true\n            })}\n            onClick={() => toggleSidebar(false)}\n          ></div>\n        </Row>\n      </div>\n      <AddEventSidebar\n        store={store}\n        dispatch={dispatch}\n        addEvent={addEvent}\n        open={addSidebarOpen}\n        selectEvent={selectEvent}\n        updateEvent={updateEvent}\n        removeEvent={removeEvent}\n        calendarApi={calendarApi}\n        refetchEvents={refetchEvents}\n        calendarsColor={calendarsColor}\n        handleAddEventSidebar={handleAddEventSidebar}\n      />\n    </Fragment>\n  )\n}\n\nexport default CalendarComponent\n"]},"metadata":{},"sourceType":"module"}