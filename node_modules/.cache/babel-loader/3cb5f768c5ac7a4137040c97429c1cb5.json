{"ast":null,"code":"import { ITSELF as r, createInterpreter as n } from \"@ucast/core\";\n\nfunction t(r, n, t) {\n  for (var u = 0, e = r.length; u < e; u++) if (0 === t(r[u], n)) return !0;\n\n  return !1;\n}\n\nfunction u(r, n) {\n  return Array.isArray(r) && Number.isNaN(Number(n));\n}\n\nfunction e(r, n, t) {\n  if (!u(r, n)) return t(r, n);\n\n  for (var e = [], o = 0; o < r.length; o++) {\n    var i = t(r[o], n);\n    void 0 !== i && (e = e.concat(i));\n  }\n\n  return e;\n}\n\nfunction o(r) {\n  return function (n, t, u) {\n    var e = u.get(t, n.field);\n    return Array.isArray(e) ? e.some(function (t) {\n      return r(n, t, u);\n    }) : r(n, e, u);\n  };\n}\n\nfunction i() {\n  return (i = Object.assign || function (r) {\n    for (var n = 1; n < arguments.length; n++) {\n      var t = arguments[n];\n\n      for (var u in t) Object.prototype.hasOwnProperty.call(t, u) && (r[u] = t[u]);\n    }\n\n    return r;\n  }).apply(this, arguments);\n}\n\nvar f = function (r, n) {\n  return r[n];\n};\n\nfunction c(r, n, t) {\n  var u = n.lastIndexOf(\".\");\n  return -1 === u ? [r, n] : [t(r, n.slice(0, u)), n.slice(u + 1)];\n}\n\nfunction a(n, t, u) {\n  if (void 0 === u && (u = f), t === r) return n;\n  if (!n) throw new Error('Unable to get field \"' + t + '\" out of ' + String(n) + \".\");\n  return function (r, n, t) {\n    if (-1 === n.indexOf(\".\")) return e(r, n, t);\n\n    for (var u = n.split(\".\"), o = r, i = 0, f = u.length; i < f; i++) if (!(o = e(o, u[i], t)) || \"object\" != typeof o) return o;\n\n    return o;\n  }(n, t, u);\n}\n\nfunction v(r) {\n  return function (n, t) {\n    return a(n, t, r);\n  };\n}\n\nfunction y(r, n) {\n  return r === n ? 0 : r > n ? 1 : -1;\n}\n\nfunction l(r, t) {\n  return void 0 === t && (t = {}), n(r, i({\n    get: a,\n    compare: y\n  }, t));\n}\n\nvar b = function (r, n, t) {\n  var u = t.interpret;\n  return r.value.some(function (r) {\n    return u(r, n);\n  });\n},\n    m = function (r, n, t) {\n  return !b(r, n, t);\n},\n    d = function (r, n, t) {\n  var u = t.interpret;\n  return r.value.every(function (r) {\n    return u(r, n);\n  });\n},\n    g = function (r, n, t) {\n  return !(0, t.interpret)(r.value[0], n);\n},\n    p = function (r, n, u) {\n  var e = u.compare,\n      o = (0, u.get)(n, r.field);\n  return Array.isArray(o) && !Array.isArray(r.value) ? t(o, r.value, e) : 0 === e(o, r.value);\n},\n    A = function (r, n, t) {\n  return !p(r, n, t);\n},\n    s = o(function (r, n, t) {\n  var u = t.compare(n, r.value);\n  return 0 === u || -1 === u;\n}),\n    h = o(function (r, n, t) {\n  return -1 === t.compare(n, r.value);\n}),\n    j = o(function (r, n, t) {\n  return 1 === t.compare(n, r.value);\n}),\n    w = o(function (r, n, t) {\n  var u = t.compare(n, r.value);\n  return 0 === u || 1 === u;\n}),\n    _ = function (n, t, e) {\n  var o = e.get;\n  if (n.field === r) return void 0 !== t;\n\n  var i = c(t, n.field, o),\n      f = i[0],\n      a = i[1],\n      v = function (r) {\n    return !!r && r.hasOwnProperty(a) === n.value;\n  };\n\n  return u(f, a) ? f.some(v) : v(f);\n},\n    x = o(function (r, n) {\n  return \"number\" == typeof n && n % r.value[0] === r.value[1];\n}),\n    O = function (n, t, e) {\n  var o = e.get,\n      i = c(t, n.field, o),\n      f = i[0],\n      a = i[1],\n      v = function (r) {\n    var t = o(r, a);\n    return Array.isArray(t) && t.length === n.value;\n  };\n\n  return n.field !== r && u(f, a) ? f.some(v) : v(f);\n},\n    N = o(function (r, n) {\n  return \"string\" == typeof n && r.value.test(n);\n}),\n    q = o(function (r, n, u) {\n  var e = u.compare;\n  return t(r.value, n, e);\n}),\n    z = function (r, n, t) {\n  return !q(r, n, t);\n},\n    E = function (r, n, u) {\n  var e = u.compare,\n      o = (0, u.get)(n, r.field);\n  return Array.isArray(o) && r.value.every(function (r) {\n    return t(o, r, e);\n  });\n},\n    M = function (r, n, t) {\n  var u = t.interpret,\n      e = (0, t.get)(n, r.field);\n  return Array.isArray(e) && e.some(function (n) {\n    return u(r.value, n);\n  });\n},\n    S = function (r, n) {\n  return r.value.call(n);\n},\n    U = i({}, Object.freeze({\n  __proto__: null,\n  or: b,\n  nor: m,\n  and: d,\n  not: g,\n  eq: p,\n  ne: A,\n  lte: s,\n  lt: h,\n  gt: j,\n  gte: w,\n  exists: _,\n  mod: x,\n  size: O,\n  regex: N,\n  within: q,\n  nin: z,\n  all: E,\n  elemMatch: M,\n  where: S\n}), {\n  in: q\n}),\n    k = l(U);\n\nexport { E as all, U as allInterpreters, d as and, y as compare, v as createGetter, l as createJsInterpreter, M as elemMatch, p as eq, _ as exists, a as getObjectField, c as getObjectFieldCursor, j as gt, w as gte, k as interpret, h as lt, s as lte, x as mod, A as ne, z as nin, m as nor, g as not, b as or, N as regex, O as size, S as where, q as within };","map":{"version":3,"sources":["../../src/utils.ts","../../src/interpreter.ts","../../src/interpreters.ts","../../src/defaults.ts"],"names":["includes","items","value","compare","i","length","isArrayAndNotNumericField","object","field","Array","isArray","Number","isNaN","getField","get","result","concat","indexOf","paths","split","testValueOrArray","test","node","context","some","v","defaultGet","getObjectFieldCursor","path","dotIndex","lastIndexOf","slice","getObjectField","ITSELF","Error","String","getValueByPath","createGetter","a","b","createJsInterpreter","operators","options","createInterpreter","or","interpret","condition","nor","and","every","not","eq","ne","lte","lt","gt","gte","exists","item","hasOwnProperty","mod","size","regex","within","nin","all","elemMatch","where","call","allInterpreters","in","interpreters"],"mappings":"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","sourcesContent":["import { FieldCondition } from '@ucast/core';\nimport { JsInterpretationOptions, JsInterpreter } from './types';\n\nexport type AnyObject = Record<PropertyKey, unknown>;\nexport type GetField = (object: any, field: string) => any;\n\nexport function includes<T>(\n  items: T[],\n  value: T,\n  compare: JsInterpretationOptions['compare']\n): boolean {\n  for (let i = 0, length = items.length; i < length; i++) {\n    if (compare(items[i], value) === 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function isArrayAndNotNumericField<T>(object: T | T[], field: string): object is T[] {\n  return Array.isArray(object) && Number.isNaN(Number(field));\n}\n\nfunction getField<T extends AnyObject>(object: T | T[], field: string, get: GetField) {\n  if (!isArrayAndNotNumericField(object, field)) {\n    return get(object, field);\n  }\n\n  let result: unknown[] = [];\n\n  for (let i = 0; i < object.length; i++) {\n    const value = get(object[i], field);\n    if (typeof value !== 'undefined') {\n      result = result.concat(value);\n    }\n  }\n\n  return result;\n}\n\nexport function getValueByPath(object: AnyObject, field: string, get: GetField) {\n  if (field.indexOf('.') === -1) {\n    return getField(object, field, get);\n  }\n\n  const paths = field.split('.');\n  let value = object;\n\n  for (let i = 0, length = paths.length; i < length; i++) {\n    value = getField(value, paths[i], get);\n\n    if (!value || typeof value !== 'object') {\n      return value;\n    }\n  }\n\n  return value;\n}\n\nexport function testValueOrArray<T, U = T>(test: JsInterpreter<FieldCondition<T>, U>) {\n  return ((node, object, context) => {\n    const value = context.get(object, node.field);\n\n    if (!Array.isArray(value)) {\n      return test(node, value, context);\n    }\n\n    return value.some(v => test(node, v, context));\n  }) as JsInterpreter<FieldCondition<T>, AnyObject | U>;\n}\n","import { createInterpreter, ITSELF } from '@ucast/core';\nimport { getValueByPath, AnyObject, GetField } from './utils';\nimport { JsInterpretationOptions, JsInterpreter } from './types';\n\nconst defaultGet = (object: AnyObject, field: string) => object[field];\ntype Field = string | typeof ITSELF;\n\nexport function getObjectFieldCursor<T extends {}>(object: T, path: string, get: GetField) {\n  const dotIndex = path.lastIndexOf('.');\n\n  if (dotIndex === -1) {\n    return [object, path] as const;\n  }\n\n  return [\n    get(object, path.slice(0, dotIndex)) as T,\n    path.slice(dotIndex + 1)\n  ] as const;\n}\n\nexport function getObjectField(object: unknown, field: Field, get: GetField = defaultGet) {\n  if (field === ITSELF) {\n    return object;\n  }\n\n  if (!object) {\n    throw new Error(`Unable to get field \"${field}\" out of ${String(object)}.`);\n  }\n\n  return getValueByPath(object as Record<string, unknown>, field, get);\n}\n\nexport function createGetter<T extends GetField>(get: T) {\n  return (object: Parameters<T>[0], field: Parameters<T>[1]) => getObjectField(object, field, get);\n}\n\nexport function compare<T>(a: T, b: T): 0 | 1 | -1 {\n  if (a === b) {\n    return 0;\n  }\n\n  return a > b ? 1 : -1;\n}\n\nexport function createJsInterpreter<\n  T extends JsInterpreter<any>,\n  O extends Partial<JsInterpretationOptions>\n>(\n  operators: Record<string, T>,\n  options: O = {} as O\n) {\n  return createInterpreter(operators, {\n    get: getObjectField,\n    compare,\n    ...options,\n  });\n}\n","import {\n  CompoundCondition as Compound,\n  FieldCondition as Field,\n  DocumentCondition as Document,\n  Condition,\n  Comparable,\n  ITSELF,\n} from '@ucast/core';\nimport { JsInterpreter as Interpret } from './types';\nimport {\n  includes,\n  testValueOrArray,\n  isArrayAndNotNumericField,\n  AnyObject,\n} from './utils';\nimport { getObjectFieldCursor } from './interpreter';\n\nexport const or: Interpret<Compound> = (node, object, { interpret }) => {\n  return node.value.some(condition => interpret(condition, object));\n};\n\nexport const nor: typeof or = (node, object, context) => {\n  return !or(node, object, context);\n};\n\nexport const and: Interpret<Compound> = (node, object, { interpret }) => {\n  return node.value.every(condition => interpret(condition, object));\n};\n\nexport const not: Interpret<Compound> = (node, object, { interpret }) => {\n  return !interpret(node.value[0], object);\n};\n\nexport const eq: Interpret<Field> = (node, object, { compare, get }) => {\n  const value = get(object, node.field);\n\n  if (Array.isArray(value) && !Array.isArray(node.value)) {\n    return includes(value, node.value, compare);\n  }\n\n  return compare(value, node.value) === 0;\n};\n\nexport const ne: typeof eq = (node, object, context) => {\n  return !eq(node, object, context);\n};\n\nexport const lte = testValueOrArray<Comparable>((node, value, context) => {\n  const result = context.compare(value, node.value);\n  return result === 0 || result === -1;\n});\n\nexport const lt = testValueOrArray<Comparable>((node, value, context) => {\n  return context.compare(value, node.value) === -1;\n});\nexport const gt = testValueOrArray<Comparable>((node, value, context) => {\n  return context.compare(value, node.value) === 1;\n});\nexport const gte = testValueOrArray<Comparable>((node, value, context) => {\n  const result = context.compare(value, node.value);\n  return result === 0 || result === 1;\n});\n\nexport const exists: Interpret<Field<boolean>> = (node, object, { get }) => {\n  if (node.field === ITSELF) {\n    return typeof object !== 'undefined';\n  }\n\n  const [item, field] = getObjectFieldCursor<{}>(object, node.field, get);\n  const test = (value: {}) => !!value && value.hasOwnProperty(field) === node.value;\n\n  return isArrayAndNotNumericField(item, field) ? item.some(test) : test(item);\n};\n\nexport const mod = testValueOrArray<[number, number], number>((node, value) => {\n  return typeof value === 'number' && value % node.value[0] === node.value[1];\n});\n\nexport const size: Interpret<Field<number>, AnyObject | unknown[]> = (node, object, { get }) => {\n  const [items, field] = getObjectFieldCursor(object as AnyObject, node.field, get);\n  const test = (item: unknown) => {\n    const value = get(item, field);\n    return Array.isArray(value) && value.length === node.value;\n  };\n\n  return node.field !== ITSELF && isArrayAndNotNumericField(items, field)\n    ? items.some(test)\n    : test(items);\n};\n\nexport const regex = testValueOrArray<RegExp, string>((node, value) => {\n  return typeof value === 'string' && node.value.test(value);\n});\n\nexport const within = testValueOrArray<unknown[], unknown>((node, object, { compare }) => {\n  return includes(node.value, object, compare);\n});\n\nexport const nin: typeof within = (node, object, context) => !within(node, object, context);\n\nexport const all: Interpret<Field<unknown[]>> = (node, object, { compare, get }) => {\n  const value = get(object, node.field);\n  return Array.isArray(value) && node.value.every(v => includes(value, v, compare));\n};\n\nexport const elemMatch: Interpret<Field<Condition>> = (node, object, { interpret, get }) => {\n  const value = get(object, node.field);\n  return Array.isArray(value) && value.some(v => interpret(node.value, v));\n};\n\ntype WhereFunction = (this: AnyObject) => boolean;\nexport const where: Interpret<Document<WhereFunction>, AnyObject> = (node, object) => {\n  return node.value.call(object);\n};\n","import { createJsInterpreter } from './interpreter';\nimport * as interpreters from './interpreters';\n\nexport const allInterpreters = {\n  ...interpreters,\n  in: interpreters.within,\n};\nexport const interpret = createJsInterpreter(allInterpreters);\n"]},"metadata":{},"sourceType":"module"}