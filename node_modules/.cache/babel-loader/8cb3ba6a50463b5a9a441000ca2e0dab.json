{"ast":null,"code":"import mock from '../mock';\nconst data = {\n  orders_bar_chart: {\n    title: 'Orders',\n    statistics: '2,76k',\n    series: [{\n      name: '2020',\n      data: [45, 85, 65, 45, 65]\n    }]\n  },\n  profit_line_chart: {\n    title: 'Profit',\n    statistics: '6,24k',\n    series: [{\n      data: [0, 20, 5, 30, 15, 45]\n    }]\n  },\n  subscribers_gained: {\n    series: [{\n      name: 'Subscribers',\n      data: [28, 40, 36, 52, 38, 60, 55]\n    }],\n    analyticsData: {\n      subscribers: 92600\n    }\n  },\n  revenueGenerated: {\n    series: [{\n      name: 'Revenue',\n      data: [350, 275, 400, 300, 350, 300, 450]\n    }],\n    analyticsData: {\n      revenue: 97500\n    }\n  },\n  quarterlySales: {\n    series: [{\n      name: 'Sales',\n      data: [10, 15, 7, 12, 3, 16]\n    }],\n    analyticsData: {\n      sales: '36%'\n    }\n  },\n  ordersRecevied: {\n    series: [{\n      name: 'Orders',\n      data: [10, 15, 8, 15, 7, 12, 8]\n    }],\n    analyticsData: {\n      orders: 97500\n    }\n  },\n  siteTraffic: {\n    series: [{\n      name: 'Traffic Rate',\n      data: [150, 200, 125, 225, 200, 250]\n    }]\n  },\n  activeUsers: {\n    series: [{\n      name: 'Active Users',\n      data: [750, 1000, 900, 1250, 1000, 1200, 1100]\n    }]\n  },\n  newsletter: {\n    series: [{\n      name: 'Newsletter',\n      data: [365, 390, 365, 400, 375, 400]\n    }]\n  }\n};\nmock.onGet('/card/card-statistics/orders-bar-chart').reply(() => [200, data.orders_bar_chart]);\nmock.onGet('/card/card-statistics/profit-line-chart').reply(() => [200, data.profit_line_chart]);\nmock.onGet('/card/card-statistics/subscribers').reply(() => [200, data.subscribers_gained]);\nmock.onGet('/card/card-statistics/revenue').reply(() => [200, data.revenueGenerated]);\nmock.onGet('/card/card-statistics/sales').reply(() => [200, data.quarterlySales]);\nmock.onGet('/card/card-statistics/orders').reply(() => [200, data.ordersRecevied]);\nmock.onGet('/card/card-statistics/site-traffic').reply(() => [200, data.siteTraffic]);\nmock.onGet('/card/card-statistics/active-users').reply(() => [200, data.activeUsers]);\nmock.onGet('/card/card-statistics/newsletter').reply(() => [200, data.newsletter]);","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/@fake-db/cards/card-statistics.js"],"names":["mock","data","orders_bar_chart","title","statistics","series","name","profit_line_chart","subscribers_gained","analyticsData","subscribers","revenueGenerated","revenue","quarterlySales","sales","ordersRecevied","orders","siteTraffic","activeUsers","newsletter","onGet","reply"],"mappings":"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","sourcesContent":["import mock from '../mock'\n\nconst data = {\n  orders_bar_chart: {\n    title: 'Orders',\n    statistics: '2,76k',\n    series: [\n      {\n        name: '2020',\n        data: [45, 85, 65, 45, 65]\n      }\n    ]\n  },\n  profit_line_chart: {\n    title: 'Profit',\n    statistics: '6,24k',\n    series: [\n      {\n        data: [0, 20, 5, 30, 15, 45]\n      }\n    ]\n  },\n  subscribers_gained: {\n    series: [\n      {\n        name: 'Subscribers',\n        data: [28, 40, 36, 52, 38, 60, 55]\n      }\n    ],\n    analyticsData: {\n      subscribers: 92600\n    }\n  },\n  revenueGenerated: {\n    series: [\n      {\n        name: 'Revenue',\n        data: [350, 275, 400, 300, 350, 300, 450]\n      }\n    ],\n    analyticsData: {\n      revenue: 97500\n    }\n  },\n  quarterlySales: {\n    series: [\n      {\n        name: 'Sales',\n        data: [10, 15, 7, 12, 3, 16]\n      }\n    ],\n    analyticsData: {\n      sales: '36%'\n    }\n  },\n  ordersRecevied: {\n    series: [\n      {\n        name: 'Orders',\n        data: [10, 15, 8, 15, 7, 12, 8]\n      }\n    ],\n    analyticsData: {\n      orders: 97500\n    }\n  },\n  siteTraffic: {\n    series: [\n      {\n        name: 'Traffic Rate',\n        data: [150, 200, 125, 225, 200, 250]\n      }\n    ]\n  },\n  activeUsers: {\n    series: [\n      {\n        name: 'Active Users',\n        data: [750, 1000, 900, 1250, 1000, 1200, 1100]\n      }\n    ]\n  },\n  newsletter: {\n    series: [\n      {\n        name: 'Newsletter',\n        data: [365, 390, 365, 400, 375, 400]\n      }\n    ]\n  }\n}\n\nmock.onGet('/card/card-statistics/orders-bar-chart').reply(() => [200, data.orders_bar_chart])\n\nmock.onGet('/card/card-statistics/profit-line-chart').reply(() => [200, data.profit_line_chart])\n\nmock.onGet('/card/card-statistics/subscribers').reply(() => [200, data.subscribers_gained])\n\nmock.onGet('/card/card-statistics/revenue').reply(() => [200, data.revenueGenerated])\n\nmock.onGet('/card/card-statistics/sales').reply(() => [200, data.quarterlySales])\n\nmock.onGet('/card/card-statistics/orders').reply(() => [200, data.ordersRecevied])\n\nmock.onGet('/card/card-statistics/site-traffic').reply(() => [200, data.siteTraffic])\n\nmock.onGet('/card/card-statistics/active-users').reply(() => [200, data.activeUsers])\n\nmock.onGet('/card/card-statistics/newsletter').reply(() => [200, data.newsletter])\n"]},"metadata":{},"sourceType":"module"}