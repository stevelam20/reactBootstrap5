{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\extensions\\\\sweet-alert\\\\SweetAlertOptions.js\";\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'; // ** Third Party Components\n\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content'; // ** Images\n\nimport alertImg from '@src/assets/images/slider/04.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\n\nconst SweetAlertOptions = () => {\n  const handleImageAlert = () => {\n    return MySwal.fire({\n      title: 'Sweet!',\n      text: 'Modal with a custom image.',\n      imageUrl: alertImg,\n      imageWidth: 300,\n      imageHeight: 200,\n      imageAlt: 'Custom image',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    });\n  };\n\n  const handleTimeoutAlert = () => {\n    let timerInterval;\n    Swal.fire({\n      title: 'Auto close alert!',\n      html: 'I will close in <b></b> seconds.',\n      timerProgressBar: true,\n      timer: 2000,\n\n      didOpen() {\n        Swal.showLoading();\n        const b = Swal.getHtmlContainer().querySelector('b');\n        timerInterval = setInterval(() => {\n          b.textContent = Swal.getTimerLeft();\n        }, 100);\n      },\n\n      willClose() {\n        clearInterval(timerInterval);\n      }\n\n    }).then(function (result) {\n      if (result.dismiss === Swal.DismissReason.timer) {\n        console.log('I was closed by the timer');\n      }\n    });\n  };\n\n  const handleClickOutside = () => {\n    return MySwal.fire({\n      backdrop: true,\n      title: 'Click outside to close!',\n      text: 'This is a cool message!',\n      allowOutsideClick: true,\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    });\n  };\n\n  const handleAjax = () => {\n    MySwal.fire({\n      title: 'Search for a user',\n      input: 'text',\n      customClass: {\n        input: 'mx-3',\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-danger ms-1'\n      },\n      buttonsStyling: false,\n      inputAttributes: {\n        autocapitalize: 'off'\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Look up',\n      showLoaderOnConfirm: true,\n\n      preConfirm(login) {\n        return fetch(`//api.github.com/users/${login}`).then(function (response) {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          return response.json();\n        }).catch(function (error) {\n          MySwal.showValidationMessage(`Request failed:  ${error}`);\n        });\n      }\n\n    }).then(function (result) {\n      if (result.value) {\n        MySwal.fire({\n          title: `${result.value.login}'s avatar`,\n          imageUrl: result.value.avatar_url,\n          customClass: {\n            confirmButton: 'btn btn-primary'\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"demo-inline-spacing\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleImageAlert,\n          outline: true,\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleTimeoutAlert,\n          outline: true,\n          children: \"Timeout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleClickOutside,\n          outline: true,\n          children: \"Click Outside\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleAjax,\n          outline: true,\n          children: \"Ajax\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = SweetAlertOptions;\nexport default SweetAlertOptions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MySwal\");\n$RefreshReg$(_c2, \"SweetAlertOptions\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/extensions/sweet-alert/SweetAlertOptions.js"],"names":["Card","CardHeader","CardBody","CardTitle","Button","Swal","withReactContent","alertImg","MySwal","SweetAlertOptions","handleImageAlert","fire","title","text","imageUrl","imageWidth","imageHeight","imageAlt","customClass","confirmButton","buttonsStyling","handleTimeoutAlert","timerInterval","html","timerProgressBar","timer","didOpen","showLoading","b","getHtmlContainer","querySelector","setInterval","textContent","getTimerLeft","willClose","clearInterval","then","result","dismiss","DismissReason","console","log","handleClickOutside","backdrop","allowOutsideClick","handleAjax","input","cancelButton","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","login","fetch","response","ok","Error","statusText","json","catch","error","showValidationMessage","value","avatar_url"],"mappings":"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","sourcesContent":["// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\n// ** Third Party Components\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\n// ** Images\nimport alertImg from '@src/assets/images/slider/04.jpg'\n\nconst MySwal = withReactContent(Swal)\n\nconst SweetAlertOptions = () => {\n  const handleImageAlert = () => {\n    return MySwal.fire({\n      title: 'Sweet!',\n      text: 'Modal with a custom image.',\n      imageUrl: alertImg,\n      imageWidth: 300,\n      imageHeight: 200,\n      imageAlt: 'Custom image',\n      customClass: { confirmButton: 'btn btn-primary' },\n      buttonsStyling: false\n    })\n  }\n\n  const handleTimeoutAlert = () => {\n    let timerInterval\n    Swal.fire({\n      title: 'Auto close alert!',\n      html: 'I will close in <b></b> seconds.',\n      timerProgressBar: true,\n      timer: 2000,\n      didOpen() {\n        Swal.showLoading()\n        const b = Swal.getHtmlContainer().querySelector('b')\n        timerInterval = setInterval(() => {\n          b.textContent = Swal.getTimerLeft()\n        }, 100)\n      },\n      willClose() {\n        clearInterval(timerInterval)\n      }\n    }).then(function (result) {\n      if (result.dismiss === Swal.DismissReason.timer) {\n        console.log('I was closed by the timer')\n      }\n    })\n  }\n\n  const handleClickOutside = () => {\n    return MySwal.fire({\n      backdrop: true,\n      title: 'Click outside to close!',\n      text: 'This is a cool message!',\n      allowOutsideClick: true,\n      customClass: { confirmButton: 'btn btn-primary' },\n      buttonsStyling: false\n    })\n  }\n\n  const handleAjax = () => {\n    MySwal.fire({\n      title: 'Search for a user',\n      input: 'text',\n      customClass: {\n        input: 'mx-3',\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-danger ms-1'\n      },\n      buttonsStyling: false,\n      inputAttributes: {\n        autocapitalize: 'off'\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Look up',\n      showLoaderOnConfirm: true,\n      preConfirm(login) {\n        return fetch(`//api.github.com/users/${login}`)\n          .then(function (response) {\n            if (!response.ok) {\n              throw new Error(response.statusText)\n            }\n            return response.json()\n          })\n          .catch(function (error) {\n            MySwal.showValidationMessage(`Request failed:  ${error}`)\n          })\n      }\n    }).then(function (result) {\n      if (result.value) {\n        MySwal.fire({\n          title: `${result.value.login}'s avatar`,\n          imageUrl: result.value.avatar_url,\n          customClass: {\n            confirmButton: 'btn btn-primary'\n          }\n        })\n      }\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Options</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' onClick={handleImageAlert} outline>\n            Image\n          </Button>\n          <Button color='primary' onClick={handleTimeoutAlert} outline>\n            Timeout\n          </Button>\n          <Button color='primary' onClick={handleClickOutside} outline>\n            Click Outside\n          </Button>\n          <Button color='primary' onClick={handleAjax} outline>\n            Ajax\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SweetAlertOptions\n"]},"metadata":{},"sourceType":"module"}