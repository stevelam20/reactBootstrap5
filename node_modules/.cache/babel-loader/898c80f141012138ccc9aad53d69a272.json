{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\pages\\\\account-settings\\\\SecurityTabContent.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment } from 'react'; // ** Reactstrap Imports\n\nimport { Row, Col, Card, Form, Button, CardBody, CardTitle, CardHeader, FormFeedback } from 'reactstrap'; // ** Third Party Components\n\nimport * as yup from 'yup';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // ** Custom Components\n\nimport InputPasswordToggle from '@components/input-password-toggle'; // ** Demo Components\n\nimport ApiKeysList from './ApiKeysList';\nimport CreateApiKey from './CreateApikey';\nimport TwoFactorAuth from './TwoFactorAuth';\nimport RecentDevices from './RecentDevices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst showErrors = (field, valueLen, min) => {\n  if (valueLen === 0) {\n    return `${field} field is required`;\n  } else if (valueLen > 0 && valueLen < min) {\n    return `${field} must be at least ${min} characters`;\n  } else {\n    return '';\n  }\n};\n\nconst defaultValues = {\n  newPassword: '',\n  currentPassword: '',\n  retypeNewPassword: ''\n};\n\nconst SecurityTabContent = () => {\n  _s();\n\n  const SignupSchema = yup.object().shape({\n    currentPassword: yup.string().min(8, obj => showErrors('Current Password', obj.value.length, obj.min)).required(),\n    newPassword: yup.string().min(8, obj => showErrors('New Password', obj.value.length, obj.min)).required(),\n    retypeNewPassword: yup.string().min(8, obj => showErrors('Retype New Password', obj.value.length, obj.min)).required().oneOf([yup.ref(`newPassword`), null], 'Passwords must match')\n  }); // ** Hooks\n\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues,\n    resolver: yupResolver(SignupSchema)\n  });\n\n  const onSubmit = data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      return null;\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          });\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"border-bottom\",\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h4\",\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        className: \"pt-1\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: \"6\",\n              className: \"mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                id: \"currentPassword\",\n                name: \"currentPassword\",\n                render: _ref => {\n                  let {\n                    field\n                  } = _ref;\n                  return /*#__PURE__*/_jsxDEV(InputPasswordToggle, {\n                    label: \"Current Password\",\n                    htmlFor: \"currentPassword\",\n                    className: \"input-group-merge\",\n                    invalid: errors.currentPassword && true,\n                    ...field\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), errors.currentPassword && /*#__PURE__*/_jsxDEV(FormFeedback, {\n                className: \"d-block\",\n                children: errors.currentPassword.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: \"6\",\n              className: \"mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                id: \"newPassword\",\n                name: \"newPassword\",\n                render: _ref2 => {\n                  let {\n                    field\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(InputPasswordToggle, {\n                    label: \"New Password\",\n                    htmlFor: \"newPassword\",\n                    className: \"input-group-merge\",\n                    invalid: errors.newPassword && true,\n                    ...field\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), errors.newPassword && /*#__PURE__*/_jsxDEV(FormFeedback, {\n                className: \"d-block\",\n                children: errors.newPassword.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 40\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: \"6\",\n              className: \"mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                id: \"retypeNewPassword\",\n                name: \"retypeNewPassword\",\n                render: _ref3 => {\n                  let {\n                    field\n                  } = _ref3;\n                  return /*#__PURE__*/_jsxDEV(InputPasswordToggle, {\n                    label: \"Retype New Password\",\n                    htmlFor: \"retypeNewPassword\",\n                    className: \"input-group-merge\",\n                    invalid: errors.newPassword && true,\n                    ...field\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), errors.retypeNewPassword && /*#__PURE__*/_jsxDEV(FormFeedback, {\n                className: \"d-block\",\n                children: errors.retypeNewPassword.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"fw-bolder\",\n                children: \"Password requirements:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"ps-1 ms-25\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"mb-50\",\n                  children: \"Minimum 8 characters long - the more, the better\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"mb-50\",\n                  children: \"At least one lowercase character\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"At least one number, symbol, or whitespace character\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"mt-1\",\n              sm: \"12\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: \"me-1\",\n                color: \"primary\",\n                children: \"Save changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"secondary\",\n                outline: true,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TwoFactorAuth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateApiKey, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ApiKeysList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecentDevices, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SecurityTabContent, \"OUzfJU1foSBMEYto97IehqIpfDI=\", false, function () {\n  return [useForm];\n});\n\n_c = SecurityTabContent;\nexport default SecurityTabContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecurityTabContent\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/pages/account-settings/SecurityTabContent.js"],"names":["Fragment","Row","Col","Card","Form","Button","CardBody","CardTitle","CardHeader","FormFeedback","yup","useForm","Controller","yupResolver","InputPasswordToggle","ApiKeysList","CreateApiKey","TwoFactorAuth","RecentDevices","showErrors","field","valueLen","min","defaultValues","newPassword","currentPassword","retypeNewPassword","SecurityTabContent","SignupSchema","object","shape","string","obj","value","length","required","oneOf","ref","control","handleSubmit","formState","errors","resolver","onSubmit","data","Object","values","every","key","setError","type","message"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, Form, Button, CardBody, CardTitle, CardHeader, FormFeedback } from 'reactstrap'\n\n// ** Third Party Components\nimport * as yup from 'yup'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\n// ** Custom Components\nimport InputPasswordToggle from '@components/input-password-toggle'\n\n// ** Demo Components\nimport ApiKeysList from './ApiKeysList'\nimport CreateApiKey from './CreateApikey'\nimport TwoFactorAuth from './TwoFactorAuth'\nimport RecentDevices from './RecentDevices'\n\nconst showErrors = (field, valueLen, min) => {\n  if (valueLen === 0) {\n    return `${field} field is required`\n  } else if (valueLen > 0 && valueLen < min) {\n    return `${field} must be at least ${min} characters`\n  } else {\n    return ''\n  }\n}\n\nconst defaultValues = {\n  newPassword: '',\n  currentPassword: '',\n  retypeNewPassword: ''\n}\n\nconst SecurityTabContent = () => {\n  const SignupSchema = yup.object().shape({\n    currentPassword: yup\n      .string()\n      .min(8, obj => showErrors('Current Password', obj.value.length, obj.min))\n      .required(),\n    newPassword: yup\n      .string()\n      .min(8, obj => showErrors('New Password', obj.value.length, obj.min))\n      .required(),\n    retypeNewPassword: yup\n      .string()\n      .min(8, obj => showErrors('Retype New Password', obj.value.length, obj.min))\n      .required()\n      .oneOf([yup.ref(`newPassword`), null], 'Passwords must match')\n  })\n  // ** Hooks\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues,\n    resolver: yupResolver(SignupSchema)\n  })\n\n  const onSubmit = data => {\n    if (Object.values(data).every(field => field.length > 0)) {\n      return null\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          })\n        }\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader className='border-bottom'>\n          <CardTitle tag='h4'>Change Password</CardTitle>\n        </CardHeader>\n        <CardBody className='pt-1'>\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Row>\n              <Col sm='6' className='mb-1'>\n                <Controller\n                  control={control}\n                  id='currentPassword'\n                  name='currentPassword'\n                  render={({ field }) => (\n                    <InputPasswordToggle\n                      label='Current Password'\n                      htmlFor='currentPassword'\n                      className='input-group-merge'\n                      invalid={errors.currentPassword && true}\n                      {...field}\n                    />\n                  )}\n                />\n                {errors.currentPassword && (\n                  <FormFeedback className='d-block'>{errors.currentPassword.message}</FormFeedback>\n                )}\n              </Col>\n            </Row>\n            <Row>\n              <Col sm='6' className='mb-1'>\n                <Controller\n                  control={control}\n                  id='newPassword'\n                  name='newPassword'\n                  render={({ field }) => (\n                    <InputPasswordToggle\n                      label='New Password'\n                      htmlFor='newPassword'\n                      className='input-group-merge'\n                      invalid={errors.newPassword && true}\n                      {...field}\n                    />\n                  )}\n                />\n                {errors.newPassword && <FormFeedback className='d-block'>{errors.newPassword.message}</FormFeedback>}\n              </Col>\n              <Col sm='6' className='mb-1'>\n                <Controller\n                  control={control}\n                  id='retypeNewPassword'\n                  name='retypeNewPassword'\n                  render={({ field }) => (\n                    <InputPasswordToggle\n                      label='Retype New Password'\n                      htmlFor='retypeNewPassword'\n                      className='input-group-merge'\n                      invalid={errors.newPassword && true}\n                      {...field}\n                    />\n                  )}\n                />\n                {errors.retypeNewPassword && (\n                  <FormFeedback className='d-block'>{errors.retypeNewPassword.message}</FormFeedback>\n                )}\n              </Col>\n              <Col xs={12}>\n                <p className='fw-bolder'>Password requirements:</p>\n                <ul className='ps-1 ms-25'>\n                  <li className='mb-50'>Minimum 8 characters long - the more, the better</li>\n                  <li className='mb-50'>At least one lowercase character</li>\n                  <li>At least one number, symbol, or whitespace character</li>\n                </ul>\n              </Col>\n              <Col className='mt-1' sm='12'>\n                <Button type='submit' className='me-1' color='primary'>\n                  Save changes\n                </Button>\n                <Button color='secondary' outline>\n                  Cancel\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <TwoFactorAuth />\n      <CreateApiKey />\n      <ApiKeysList />\n      <RecentDevices />\n    </Fragment>\n  )\n}\n\nexport default SecurityTabContent\n"]},"metadata":{},"sourceType":"module"}