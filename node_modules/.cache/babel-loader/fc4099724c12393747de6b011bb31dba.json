{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\extensions\\\\import-export\\\\ExportSelected.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState } from 'react'; // ** Custom Components\n\nimport ExtensionsHeader from '@components/extensions-header'; // ** Reactstrap Imports\n\nimport { Row, Col, Card, Table, Modal, Input, Label, Button, CardBody, ModalBody, ModalHeader, ModalFooter } from 'reactstrap'; // ** Third Party Components\n\nimport XLSX from 'xlsx';\nimport classnames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = [{\n  id: 1,\n  name: 'Leanne Graham',\n  username: 'Bret',\n  email: 'Sincere@april.biz',\n  website: 'hildegard.org'\n}, {\n  id: 2,\n  name: 'Ervin Howell',\n  username: 'Antonette',\n  email: 'Shanna@melissa.tv',\n  website: 'anastasia.net'\n}, {\n  id: 3,\n  name: 'Clementine Bauch',\n  username: 'Samantha',\n  email: 'Nathan@yesenia.net',\n  website: 'ramiro.info'\n}, {\n  id: 4,\n  name: 'Patricia Lebsack',\n  username: 'Karianne',\n  email: 'Julianne.OConner@kory.org',\n  website: 'kale.biz'\n}, {\n  id: 5,\n  name: 'Chelsey Dietrich',\n  username: 'Kamren',\n  email: 'Lucio_Hettinger@annie.ca',\n  website: 'demarco.info'\n}, {\n  id: 6,\n  name: 'Mrs. Dennis Schulist',\n  username: 'Leopoldo_Corkery',\n  email: 'Karley_Dach@jasper.info',\n  website: 'ola.org'\n}, {\n  id: 7,\n  name: 'Kurtis Weissnat',\n  username: 'Elwyn.Skiles',\n  email: 'Telly.Hoeger@billy.biz',\n  website: 'elvis.io'\n}, {\n  id: 8,\n  name: 'Nicholas Runolfsdottir V',\n  username: 'Maxime_Nienow',\n  email: 'Sherwood@rosamond.me',\n  website: 'jacynthe.com'\n}, {\n  id: 9,\n  name: 'Glenna Reichert',\n  username: 'Delphine',\n  email: 'Chaim_McDermott@dana.io',\n  website: 'conrad.com'\n}, {\n  id: 10,\n  name: 'Clementina DuBuque',\n  username: 'Moriah.Stanton',\n  email: 'Rey.Padberg@karina.biz',\n  website: 'ambrose.net'\n}];\n\nconst ExportSelected = () => {\n  _s();\n\n  // ** States\n  const [data] = useState(initialData);\n  const [value, setValue] = useState('');\n  const [modal, setModal] = useState(false);\n  const [fileName, setFileName] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n  const [dataToExport, setDataToExport] = useState([]);\n  const [fileFormat, setFileFormat] = useState('xlsx');\n  const [selectedRows, setSelectedRows] = useState([]);\n\n  const toggleModal = () => setModal(!modal);\n\n  const handleFilter = e => {\n    let filteredData = [];\n    const value = e.target.value;\n    setValue(value);\n\n    if (value.length) {\n      filteredData = data.filter(col => {\n        const startsWithCondition = col.name.toLowerCase().startsWith(value.toLowerCase()) || col.email.toLowerCase().startsWith(value.toLowerCase()) || col.website.toLowerCase().startsWith(value.toLowerCase()) || col.id.toString().toLowerCase().startsWith(value.toLowerCase());\n        const includesCondition = col.name.toLowerCase().includes(value.toLowerCase()) || col.email.toLowerCase().includes(value.toLowerCase()) || col.website.toLowerCase().includes(value.toLowerCase()) || col.id.toString().toLowerCase().includes(value.toLowerCase());\n        if (startsWithCondition) return startsWithCondition;else if (!startsWithCondition && includesCondition) return includesCondition;else return null;\n      });\n      setValue(value);\n      setFilteredData(filteredData);\n    }\n  };\n\n  const handleExport = () => {\n    const exportArr = dataToExport;\n    data.map(item => {\n      if (selectedRows.includes(item.id)) {\n        return exportArr.push(item);\n      } else {\n        return null;\n      }\n    });\n    setDataToExport([...exportArr]);\n    const name = fileName.length ? `${fileName}.${fileFormat}` : `excel-sheet.${fileFormat}`;\n    const wb = XLSX.utils.json_to_sheet(dataToExport);\n    const wbout = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wbout, wb, 'test');\n    XLSX.writeFile(wbout, name);\n    toggleModal();\n  };\n\n  const handleSelect = id => {\n    const selectedRowsArr = selectedRows;\n\n    if (!selectedRowsArr.includes(id)) {\n      selectedRowsArr.push(id);\n    } else if (selectedRowsArr.includes(id)) {\n      selectedRowsArr.splice(selectedRowsArr.indexOf(id), 1);\n    } else {\n      return null;\n    }\n\n    setSelectedRows([...selectedRowsArr]);\n  };\n\n  const handleSelectAll = () => {\n    let selectedRowsArr = selectedRows;\n\n    if (selectedRowsArr.length < data.length) {\n      const ids = data.map(i => i.id);\n      selectedRowsArr = ids;\n    } else if (selectedRowsArr.length === data.length) {\n      selectedRowsArr = [];\n    } else {\n      return null;\n    }\n\n    setSelectedRows(selectedRowsArr);\n  };\n\n  const array = value ? filteredData : data;\n  const renderTableData = array.map(col => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: classnames({\n        selected: selectedRows.includes(col.id)\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            id: col.id,\n            type: \"checkbox\",\n            onChange: () => handleSelect(col.id),\n            checked: !!selectedRows.includes(col.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: col.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: col.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: col.website\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: col.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, col.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ExtensionsHeader, {\n      title: \"XLSX\",\n      subTitle: \"Xlsx is a parser and writer for various spreadsheet formats\",\n      link: \"https://github.com/SheetJS/sheetjs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"export-component\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            className: \"pb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-wrap justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                onClick: () => toggleModal(),\n                children: \"Export Selected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center justify-content-end\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"search-input\",\n                  className: \"me-1\",\n                  children: \"Search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"search-input\",\n                  bsSize: \"sm\",\n                  type: \"text\",\n                  value: value,\n                  onChange: e => handleFilter(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table-hover-animation mt-2\",\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-check\",\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"checkbox\",\n                      id: \"select-all\",\n                      label: \"\",\n                      checked: !!selectedRows.length,\n                      onChange: () => handleSelectAll()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Website\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Rank\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: renderTableData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: () => toggleModal(),\n      className: \"modal-dialog-centered\",\n      onClosed: () => setFileName(''),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => toggleModal(),\n        children: \"Export To Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: fileName,\n            onChange: e => setFileName(e.target.value),\n            placeholder: \"Enter File Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"select\",\n            id: \"selectFileFormat\",\n            name: \"customSelect\",\n            value: fileFormat,\n            onChange: e => {\n              setFileFormat(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"xlsx\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"txt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: () => handleExport(),\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"flat-danger\",\n          onClick: () => toggleModal(),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExportSelected, \"dJiMH9BEuJVb01j6LM1JP3b6B0M=\");\n\n_c = ExportSelected;\nexport default ExportSelected;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExportSelected\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/extensions/import-export/ExportSelected.js"],"names":["Fragment","useState","ExtensionsHeader","Row","Col","Card","Table","Modal","Input","Label","Button","CardBody","ModalBody","ModalHeader","ModalFooter","XLSX","classnames","initialData","id","name","username","email","website","ExportSelected","data","value","setValue","modal","setModal","fileName","setFileName","filteredData","setFilteredData","dataToExport","setDataToExport","fileFormat","setFileFormat","selectedRows","setSelectedRows","toggleModal","handleFilter","e","target","length","filter","col","startsWithCondition","toLowerCase","startsWith","toString","includesCondition","includes","handleExport","exportArr","map","item","push","wb","utils","json_to_sheet","wbout","book_new","book_append_sheet","writeFile","handleSelect","selectedRowsArr","splice","indexOf","handleSelectAll","ids","i","array","renderTableData","selected"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Table,\n  Modal,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  ModalBody,\n  ModalHeader,\n  ModalFooter\n} from 'reactstrap'\n\n// ** Third Party Components\nimport XLSX from 'xlsx'\nimport classnames from 'classnames'\n\nconst initialData = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    website: 'hildegard.org'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    website: 'anastasia.net'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    website: 'ramiro.info'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    website: 'kale.biz'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    website: 'demarco.info'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    website: 'ola.org'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    website: 'elvis.io'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    website: 'jacynthe.com'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    website: 'conrad.com'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    website: 'ambrose.net'\n  }\n]\n\nconst ExportSelected = () => {\n  // ** States\n  const [data] = useState(initialData)\n  const [value, setValue] = useState('')\n  const [modal, setModal] = useState(false)\n  const [fileName, setFileName] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [dataToExport, setDataToExport] = useState([])\n  const [fileFormat, setFileFormat] = useState('xlsx')\n  const [selectedRows, setSelectedRows] = useState([])\n\n  const toggleModal = () => setModal(!modal)\n\n  const handleFilter = e => {\n    let filteredData = []\n    const value = e.target.value\n    setValue(value)\n    if (value.length) {\n      filteredData = data.filter(col => {\n        const startsWithCondition =\n          col.name.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.email.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.website.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.id.toString().toLowerCase().startsWith(value.toLowerCase())\n\n        const includesCondition =\n          col.name.toLowerCase().includes(value.toLowerCase()) ||\n          col.email.toLowerCase().includes(value.toLowerCase()) ||\n          col.website.toLowerCase().includes(value.toLowerCase()) ||\n          col.id.toString().toLowerCase().includes(value.toLowerCase())\n\n        if (startsWithCondition) return startsWithCondition\n        else if (!startsWithCondition && includesCondition) return includesCondition\n        else return null\n      })\n      setValue(value)\n      setFilteredData(filteredData)\n    }\n  }\n\n  const handleExport = () => {\n    const exportArr = dataToExport\n    data.map(item => {\n      if (selectedRows.includes(item.id)) {\n        return exportArr.push(item)\n      } else {\n        return null\n      }\n    })\n    setDataToExport([...exportArr])\n    const name = fileName.length ? `${fileName}.${fileFormat}` : `excel-sheet.${fileFormat}`\n    const wb = XLSX.utils.json_to_sheet(dataToExport)\n    const wbout = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(wbout, wb, 'test')\n    XLSX.writeFile(wbout, name)\n    toggleModal()\n  }\n\n  const handleSelect = id => {\n    const selectedRowsArr = selectedRows\n    if (!selectedRowsArr.includes(id)) {\n      selectedRowsArr.push(id)\n    } else if (selectedRowsArr.includes(id)) {\n      selectedRowsArr.splice(selectedRowsArr.indexOf(id), 1)\n    } else {\n      return null\n    }\n    setSelectedRows([...selectedRowsArr])\n  }\n\n  const handleSelectAll = () => {\n    let selectedRowsArr = selectedRows\n    if (selectedRowsArr.length < data.length) {\n      const ids = data.map(i => i.id)\n      selectedRowsArr = ids\n    } else if (selectedRowsArr.length === data.length) {\n      selectedRowsArr = []\n    } else {\n      return null\n    }\n\n    setSelectedRows(selectedRowsArr)\n  }\n\n  const array = value ? filteredData : data\n  const renderTableData = array.map(col => {\n    return (\n      <tr\n        key={col.id}\n        className={classnames({\n          selected: selectedRows.includes(col.id)\n        })}\n      >\n        <td>\n          <div className='form-check'>\n            <Input\n              id={col.id}\n              type='checkbox'\n              onChange={() => handleSelect(col.id)}\n              checked={!!selectedRows.includes(col.id)}\n            />\n          </div>\n        </td>\n        <td>{col.email}</td>\n        <td>{col.name}</td>\n        <td>{col.website}</td>\n        <td>{col.id}</td>\n      </tr>\n    )\n  })\n\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='XLSX'\n        subTitle='Xlsx is a parser and writer for various spreadsheet formats'\n        link='https://github.com/SheetJS/sheetjs'\n      />\n      <Row className='export-component'>\n        <Col sm='12'>\n          <Card>\n            <CardBody className='pb-0'>\n              <div className='d-flex flex-wrap justify-content-between'>\n                <Button color='primary' onClick={() => toggleModal()}>\n                  Export Selected\n                </Button>\n                <div className='d-flex align-items-center justify-content-end'>\n                  <Label for='search-input' className='me-1'>\n                    Search\n                  </Label>\n                  <Input id='search-input' bsSize='sm' type='text' value={value} onChange={e => handleFilter(e)} />\n                </div>\n              </div>\n            </CardBody>\n            <Table className='table-hover-animation mt-2' responsive>\n              <thead>\n                <tr>\n                  <th>\n                    <div className='form-check'>\n                      <Input\n                        type='checkbox'\n                        id='select-all'\n                        label=''\n                        checked={!!selectedRows.length}\n                        onChange={() => handleSelectAll()}\n                      />\n                    </div>\n                  </th>\n                  <th>Email</th>\n                  <th>Name</th>\n                  <th>Website</th>\n                  <th>Rank</th>\n                </tr>\n              </thead>\n              <tbody>{renderTableData}</tbody>\n            </Table>\n          </Card>\n        </Col>\n      </Row>\n      <Modal\n        isOpen={modal}\n        toggle={() => toggleModal()}\n        className='modal-dialog-centered'\n        onClosed={() => setFileName('')}\n      >\n        <ModalHeader toggle={() => toggleModal()}>Export To Excel</ModalHeader>\n        <ModalBody>\n          <div className='mb-2'>\n            <Input\n              type='text'\n              value={fileName}\n              onChange={e => setFileName(e.target.value)}\n              placeholder='Enter File Name'\n            />\n          </div>\n          <div>\n            <Input\n              type='select'\n              id='selectFileFormat'\n              name='customSelect'\n              value={fileFormat}\n              onChange={e => {\n                setFileFormat(e.target.value)\n              }}\n            >\n              <option>xlsx</option>\n              <option>csv</option>\n              <option>txt</option>\n            </Input>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color='primary' onClick={() => handleExport()}>\n            Export\n          </Button>\n          <Button color='flat-danger' onClick={() => toggleModal()}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default ExportSelected\n"]},"metadata":{},"sourceType":"module"}