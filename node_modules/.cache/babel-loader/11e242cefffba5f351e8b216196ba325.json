{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\@core\\\\layouts\\\\components\\\\menu\\\\vertical-menu\\\\index.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { Fragment, useState, useRef } from 'react'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport PerfectScrollbar from 'react-perfect-scrollbar'; // ** Vertical Menu Components\n\nimport VerticalMenuHeader from './VerticalMenuHeader';\nimport VerticalNavMenuItems from './VerticalNavMenuItems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = props => {\n  _s();\n\n  // ** Props\n  const {\n    menuCollapsed,\n    menu,\n    skin,\n    menuData\n  } = props; // ** States\n\n  const [groupOpen, setGroupOpen] = useState([]);\n  const [groupActive, setGroupActive] = useState([]);\n  const [currentActiveGroup, setCurrentActiveGroup] = useState([]);\n  const [activeItem, setActiveItem] = useState(null); // ** Menu Hover State\n\n  const [menuHover, setMenuHover] = useState(false); // ** Ref\n\n  const shadowRef = useRef(null); // ** Function to handle Mouse Enter\n\n  const onMouseEnter = () => {\n    setMenuHover(true);\n  }; // ** Scroll Menu\n\n\n  const scrollMenu = container => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.add('d-block');\n      }\n    } else {\n      if (shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.remove('d-block');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames('main-menu menu-fixed menu-accordion menu-shadow', {\n        expanded: menuHover || menuCollapsed === false,\n        'menu-light': skin !== 'semi-dark' && skin !== 'dark',\n        'menu-dark': skin === 'semi-dark' || skin === 'dark'\n      }),\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: () => setMenuHover(false),\n      children: menu ? menu({ ...props\n      }) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(VerticalMenuHeader, {\n          setGroupOpen: setGroupOpen,\n          menuHover: menuHover,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shadow-bottom\",\n          ref: shadowRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n          className: \"main-menu-content\",\n          options: {\n            wheelPropagation: false\n          },\n          onScrollY: container => scrollMenu(container),\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"navigation navigation-main\",\n            children: /*#__PURE__*/_jsxDEV(VerticalNavMenuItems, {\n              items: menuData,\n              menuData: menuData,\n              menuHover: menuHover,\n              groupOpen: groupOpen,\n              activeItem: activeItem,\n              groupActive: groupActive,\n              setGroupOpen: setGroupOpen,\n              menuCollapsed: menuCollapsed,\n              setActiveItem: setActiveItem,\n              setGroupActive: setGroupActive,\n              currentActiveGroup: currentActiveGroup,\n              setCurrentActiveGroup: setCurrentActiveGroup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"stkasXwx3Pf9sAs/Nt2d2JsizFs=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/@core/layouts/components/menu/vertical-menu/index.js"],"names":["Fragment","useState","useRef","classnames","PerfectScrollbar","VerticalMenuHeader","VerticalNavMenuItems","Sidebar","props","menuCollapsed","menu","skin","menuData","groupOpen","setGroupOpen","groupActive","setGroupActive","currentActiveGroup","setCurrentActiveGroup","activeItem","setActiveItem","menuHover","setMenuHover","shadowRef","onMouseEnter","scrollMenu","container","scrollTop","current","classList","contains","add","remove","expanded","wheelPropagation"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,MAA7B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B,C,CAEA;;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AACvB;AACA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA,IAAvB;AAA6BC,IAAAA;AAA7B,MAA0CJ,KAAhD,CAFuB,CAIvB;;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,kBAAD,EAAqBC,qBAArB,IAA8CjB,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,IAAD,CAA5C,CARuB,CAUvB;;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,KAAD,CAA1C,CAXuB,CAavB;;AACA,QAAMsB,SAAS,GAAGrB,MAAM,CAAC,IAAD,CAAxB,CAduB,CAgBvB;;AACA,QAAMsB,YAAY,GAAG,MAAM;AACzBF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD,CAjBuB,CAqBvB;;;AACA,QAAMG,UAAU,GAAGC,SAAS,IAAI;AAC9B,QAAIH,SAAS,IAAIG,SAAS,CAACC,SAAV,GAAsB,CAAvC,EAA0C;AACxC,UAAI,CAACJ,SAAS,CAACK,OAAV,CAAkBC,SAAlB,CAA4BC,QAA5B,CAAqC,SAArC,CAAL,EAAsD;AACpDP,QAAAA,SAAS,CAACK,OAAV,CAAkBC,SAAlB,CAA4BE,GAA5B,CAAgC,SAAhC;AACD;AACF,KAJD,MAIO;AACL,UAAIR,SAAS,CAACK,OAAV,CAAkBC,SAAlB,CAA4BC,QAA5B,CAAqC,SAArC,CAAJ,EAAqD;AACnDP,QAAAA,SAAS,CAACK,OAAV,CAAkBC,SAAlB,CAA4BG,MAA5B,CAAmC,SAAnC;AACD;AACF;AACF,GAVD;;AAYA,sBACE,QAAC,QAAD;AAAA,2BACE;AACE,MAAA,SAAS,EAAE7B,UAAU,CAAC,iDAAD,EAAoD;AACvE8B,QAAAA,QAAQ,EAAEZ,SAAS,IAAIZ,aAAa,KAAK,KAD8B;AAEvE,sBAAcE,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,MAFwB;AAGvE,qBAAaA,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK;AAHyB,OAApD,CADvB;AAME,MAAA,YAAY,EAAEa,YANhB;AAOE,MAAA,YAAY,EAAE,MAAMF,YAAY,CAAC,KAAD,CAPlC;AAAA,gBASGZ,IAAI,GACHA,IAAI,CAAC,EAAE,GAAGF;AAAL,OAAD,CADD,gBAGH,QAAC,QAAD;AAAA,gCAEE,QAAC,kBAAD;AAAoB,UAAA,YAAY,EAAEM,YAAlC;AAAgD,UAAA,SAAS,EAAEO,SAA3D;AAAA,aAA0Eb;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,GAAG,EAAEe;AAApC;AAAA;AAAA;AAAA;AAAA,gBAJF,eAME,QAAC,gBAAD;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,UAAA,OAAO,EAAE;AAAEW,YAAAA,gBAAgB,EAAE;AAApB,WAFX;AAGE,UAAA,SAAS,EAAER,SAAS,IAAID,UAAU,CAACC,SAAD,CAHpC;AAAA,iCAKE;AAAI,YAAA,SAAS,EAAC,4BAAd;AAAA,mCACE,QAAC,oBAAD;AACE,cAAA,KAAK,EAAEd,QADT;AAEE,cAAA,QAAQ,EAAEA,QAFZ;AAGE,cAAA,SAAS,EAAES,SAHb;AAIE,cAAA,SAAS,EAAER,SAJb;AAKE,cAAA,UAAU,EAAEM,UALd;AAME,cAAA,WAAW,EAAEJ,WANf;AAOE,cAAA,YAAY,EAAED,YAPhB;AAQE,cAAA,aAAa,EAAEL,aARjB;AASE,cAAA,aAAa,EAAEW,aATjB;AAUE,cAAA,cAAc,EAAEJ,cAVlB;AAWE,cAAA,kBAAkB,EAAEC,kBAXtB;AAYE,cAAA,qBAAqB,EAAEC;AAZzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD,CAjFD;;GAAMX,O;;KAAAA,O;AAmFN,eAAeA,OAAf","sourcesContent":["// ** React Imports\nimport { Fragment, useState, useRef } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from './VerticalMenuHeader'\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\nconst Sidebar = props => {\n  // ** Props\n  const { menuCollapsed, menu, skin, menuData } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [currentActiveGroup, setCurrentActiveGroup] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    setMenuHover(true)\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = container => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.add('d-block')\n      }\n    } else {\n      if (shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.remove('d-block')\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\n          expanded: menuHover || menuCollapsed === false,\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\n        })}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu({ ...props })\n        ) : (\n          <Fragment>\n            {/* Vertical Menu Header */}\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\n            {/* Vertical Menu Header Shadow */}\n            <div className='shadow-bottom' ref={shadowRef}></div>\n            {/* Perfect Scrollbar */}\n            <PerfectScrollbar\n              className='main-menu-content'\n              options={{ wheelPropagation: false }}\n              onScrollY={container => scrollMenu(container)}\n            >\n              <ul className='navigation navigation-main'>\n                <VerticalNavMenuItems\n                  items={menuData}\n                  menuData={menuData}\n                  menuHover={menuHover}\n                  groupOpen={groupOpen}\n                  activeItem={activeItem}\n                  groupActive={groupActive}\n                  setGroupOpen={setGroupOpen}\n                  menuCollapsed={menuCollapsed}\n                  setActiveItem={setActiveItem}\n                  setGroupActive={setGroupActive}\n                  currentActiveGroup={currentActiveGroup}\n                  setCurrentActiveGroup={setCurrentActiveGroup}\n                />\n              </ul>\n            </PerfectScrollbar>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n"]},"metadata":{},"sourceType":"module"}