{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\@core\\\\layouts\\\\components\\\\menu\\\\vertical-menu\\\\VerticalNavMenuGroup.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { useTranslation } from 'react-i18next'; // ** Reactstrap Imports\n\nimport { Collapse, Badge } from 'reactstrap'; // ** Vertical Menu Items Component\n\nimport VerticalNavMenuItems from './VerticalNavMenuItems'; // ** Utils\n\nimport { hasActiveChild, removeChildren } from '@layouts/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VerticalNavMenuGroup = _ref => {\n  _s();\n\n  let {\n    item,\n    groupOpen,\n    menuHover,\n    activeItem,\n    parentItem,\n    groupActive,\n    setGroupOpen,\n    menuCollapsed,\n    setGroupActive,\n    currentActiveGroup,\n    setCurrentActiveGroup,\n    ...rest\n  } = _ref;\n  // ** Hooks\n  const {\n    t\n  } = useTranslation();\n  const location = useLocation(); // ** Current Val\n\n  const currentURL = useLocation().pathname; // ** Toggle Open Group\n\n  const toggleOpenGroup = (item, parent) => {\n    let openGroup = groupOpen;\n    const activeGroup = groupActive; // ** If Group is already open and clicked, close the group\n\n    if (openGroup.includes(item.id)) {\n      openGroup.splice(openGroup.indexOf(item.id), 1); // ** If clicked Group has open group children, Also remove those children to close those groups\n\n      if (item.children) {\n        removeChildren(item.children, openGroup, groupActive);\n      }\n    } else if (activeGroup.includes(item.id) || currentActiveGroup.includes(item.id)) {\n      // ** If Group clicked is Active Group\n      // ** If Active group is closed and clicked again, we should open active group else close active group\n      if (!activeGroup.includes(item.id) && currentActiveGroup.includes(item.id)) {\n        activeGroup.push(item.id);\n      } else {\n        activeGroup.splice(activeGroup.indexOf(item.id), 1);\n      } // ** Update Active Group\n\n\n      setGroupActive([...activeGroup]);\n    } else if (parent) {\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\n      if (parent.children) {\n        removeChildren(parent.children, openGroup, groupActive);\n      } // ** After removing all the open groups under that parent, add the clicked group to open group array\n\n\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id);\n      }\n    } else {\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\n      // ** Empty Open Group array\n      openGroup = []; // ** Push current clicked group item to Open Group array\n\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id);\n      }\n    }\n\n    setGroupOpen([...openGroup]);\n  }; // ** On Group Item Click\n\n\n  const onCollapseClick = (e, item) => {\n    toggleOpenGroup(item, parentItem);\n    e.preventDefault();\n  }; // ** Checks url & updates active item\n\n\n  useEffect(() => {\n    if (hasActiveChild(item, currentURL)) {\n      if (!groupActive.includes(item.id)) groupActive.push(item.id);\n    } else {\n      const index = groupActive.indexOf(item.id);\n      if (index > -1) groupActive.splice(index, 1);\n    }\n\n    setGroupActive([...groupActive]);\n    setCurrentActiveGroup([...groupActive]);\n    setGroupOpen([]);\n  }, [location]); // ** Returns condition to add open class\n\n  const openClassCondition = id => {\n    if (menuCollapsed && menuHover || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\n        return true;\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false;\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classnames('nav-item has-sub', {\n      open: openClassCondition(item.id),\n      'menu-collapsed-open': groupActive.includes(item.id),\n      'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id) || currentActiveGroup.includes(item.id)\n    }),\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"d-flex align-items-center\",\n      to: \"/\",\n      onClick: e => onCollapseClick(e, item),\n      children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"menu-title text-truncate\",\n        children: t(item.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), item.badge && item.badgeText ? /*#__PURE__*/_jsxDEV(Badge, {\n        className: \"ms-auto me-1\",\n        color: item.badge,\n        pill: true,\n        children: item.badgeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"menu-content\",\n      children: /*#__PURE__*/_jsxDEV(Collapse, {\n        isOpen: groupActive && groupActive.includes(item.id) || groupOpen && groupOpen.includes(item.id),\n        children: /*#__PURE__*/_jsxDEV(VerticalNavMenuItems, { ...rest,\n          items: item.children,\n          groupActive: groupActive,\n          setGroupActive: setGroupActive,\n          currentActiveGroup: currentActiveGroup,\n          setCurrentActiveGroup: setCurrentActiveGroup,\n          groupOpen: groupOpen,\n          setGroupOpen: setGroupOpen,\n          parentItem: item,\n          menuCollapsed: menuCollapsed,\n          menuHover: menuHover,\n          activeItem: activeItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VerticalNavMenuGroup, \"5evRWzZM58ocCZYipES80tW+uLk=\", false, function () {\n  return [useTranslation, useLocation, useLocation];\n});\n\n_c = VerticalNavMenuGroup;\nexport default VerticalNavMenuGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerticalNavMenuGroup\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js"],"names":["useEffect","Link","useLocation","classnames","useTranslation","Collapse","Badge","VerticalNavMenuItems","hasActiveChild","removeChildren","VerticalNavMenuGroup","item","groupOpen","menuHover","activeItem","parentItem","groupActive","setGroupOpen","menuCollapsed","setGroupActive","currentActiveGroup","setCurrentActiveGroup","rest","t","location","currentURL","pathname","toggleOpenGroup","parent","openGroup","activeGroup","includes","id","splice","indexOf","children","push","onCollapseClick","e","preventDefault","index","openClassCondition","open","icon","title","badge","badgeText"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { useEffect } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\n// ** Reactstrap Imports\nimport { Collapse, Badge } from 'reactstrap'\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\n// ** Utils\nimport { hasActiveChild, removeChildren } from '@layouts/utils'\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupOpen,\n  menuHover,\n  activeItem,\n  parentItem,\n  groupActive,\n  setGroupOpen,\n  menuCollapsed,\n  setGroupActive,\n  currentActiveGroup,\n  setCurrentActiveGroup,\n  ...rest\n}) => {\n  // ** Hooks\n  const { t } = useTranslation()\n  const location = useLocation()\n\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggle Open Group\n  const toggleOpenGroup = (item, parent) => {\n    let openGroup = groupOpen\n    const activeGroup = groupActive\n\n    // ** If Group is already open and clicked, close the group\n    if (openGroup.includes(item.id)) {\n      openGroup.splice(openGroup.indexOf(item.id), 1)\n\n      // ** If clicked Group has open group children, Also remove those children to close those groups\n      if (item.children) {\n        removeChildren(item.children, openGroup, groupActive)\n      }\n    } else if (activeGroup.includes(item.id) || currentActiveGroup.includes(item.id)) {\n      // ** If Group clicked is Active Group\n\n      // ** If Active group is closed and clicked again, we should open active group else close active group\n      if (!activeGroup.includes(item.id) && currentActiveGroup.includes(item.id)) {\n        activeGroup.push(item.id)\n      } else {\n        activeGroup.splice(activeGroup.indexOf(item.id), 1)\n      }\n\n      // ** Update Active Group\n      setGroupActive([...activeGroup])\n    } else if (parent) {\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\n      if (parent.children) {\n        removeChildren(parent.children, openGroup, groupActive)\n      }\n\n      // ** After removing all the open groups under that parent, add the clicked group to open group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    } else {\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\n\n      // ** Empty Open Group array\n      openGroup = []\n\n      // ** Push current clicked group item to Open Group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    }\n    setGroupOpen([...openGroup])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    toggleOpenGroup(item, parentItem)\n\n    e.preventDefault()\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (hasActiveChild(item, currentURL)) {\n      if (!groupActive.includes(item.id)) groupActive.push(item.id)\n    } else {\n      const index = groupActive.indexOf(item.id)\n      if (index > -1) groupActive.splice(index, 1)\n    }\n    setGroupActive([...groupActive])\n    setCurrentActiveGroup([...groupActive])\n    setGroupOpen([])\n  }, [location])\n\n  // ** Returns condition to add open class\n  const openClassCondition = id => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\n        return true\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames('nav-item has-sub', {\n        open: openClassCondition(item.id),\n        'menu-collapsed-open': groupActive.includes(item.id),\n        'sidebar-group-active':\n          groupActive.includes(item.id) || groupOpen.includes(item.id) || currentActiveGroup.includes(item.id)\n      })}\n    >\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\n        {item.icon}\n        <span className='menu-title text-truncate'>{t(item.title)}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ms-auto me-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className='menu-content'>\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\n          <VerticalNavMenuItems\n            {...rest}\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            currentActiveGroup={currentActiveGroup}\n            setCurrentActiveGroup={setCurrentActiveGroup}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            activeItem={activeItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n"]},"metadata":{},"sourceType":"module"}