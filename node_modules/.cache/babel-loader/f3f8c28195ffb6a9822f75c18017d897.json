{"ast":null,"code":"// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'; // ** Axios Imports\n\nimport axios from 'axios';\nexport const getUserProfile = createAsyncThunk('appChat/getTasks', async () => {\n  const response = await axios.get('/apps/chat/users/profile-user');\n  return response.data;\n});\nexport const getChatContacts = createAsyncThunk('appChat/getChatContacts', async () => {\n  const response = await axios.get('/apps/chat/chats-and-contacts');\n  return response.data;\n});\nexport const selectChat = createAsyncThunk('appChat/selectChat', async (id, _ref) => {\n  let {\n    dispatch\n  } = _ref;\n  const response = await axios.get('/apps/chat/get-chat', {\n    id\n  });\n  await dispatch(getChatContacts());\n  return response.data;\n});\nexport const sendMsg = createAsyncThunk('appChat/sendMsg', async (obj, _ref2) => {\n  let {\n    dispatch\n  } = _ref2;\n  const response = await axios.post('/apps/chat/send-msg', {\n    obj\n  });\n  await dispatch(selectChat(obj.contact.id));\n  return response.data;\n});\nexport const appChatSlice = createSlice({\n  name: 'appChat',\n  initialState: {\n    chats: [],\n    contacts: [],\n    userProfile: {},\n    selectedUser: {}\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getUserProfile.fulfilled, (state, action) => {\n      state.userProfile = action.payload;\n    }).addCase(getChatContacts.fulfilled, (state, action) => {\n      state.chats = action.payload.chatsContacts;\n      state.contacts = action.payload.contacts;\n    }).addCase(selectChat.fulfilled, (state, action) => {\n      state.selectedUser = action.payload;\n    });\n  }\n});\nexport default appChatSlice.reducer;","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/apps/chat/store/index.js"],"names":["createSlice","createAsyncThunk","axios","getUserProfile","response","get","data","getChatContacts","selectChat","id","dispatch","sendMsg","obj","post","contact","appChatSlice","name","initialState","chats","contacts","userProfile","selectedUser","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","chatsContacts","reducer"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAGF,gBAAgB,CAAC,kBAAD,EAAqB,YAAY;AAC7E,QAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,+BAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAH6C,CAAvC;AAKP,OAAO,MAAMC,eAAe,GAAGN,gBAAgB,CAAC,yBAAD,EAA4B,YAAY;AACrF,QAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,+BAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD,CAH8C,CAAxC;AAKP,OAAO,MAAME,UAAU,GAAGP,gBAAgB,CAAC,oBAAD,EAAuB,OAAOQ,EAAP,WAA4B;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC3F,QAAMN,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,qBAAV,EAAiC;AAAEI,IAAAA;AAAF,GAAjC,CAAvB;AACA,QAAMC,QAAQ,CAACH,eAAe,EAAhB,CAAd;AACA,SAAOH,QAAQ,CAACE,IAAhB;AACD,CAJyC,CAAnC;AAMP,OAAO,MAAMK,OAAO,GAAGV,gBAAgB,CAAC,iBAAD,EAAoB,OAAOW,GAAP,YAA6B;AAAA,MAAjB;AAAEF,IAAAA;AAAF,GAAiB;AACtF,QAAMN,QAAQ,GAAG,MAAMF,KAAK,CAACW,IAAN,CAAW,qBAAX,EAAkC;AAAED,IAAAA;AAAF,GAAlC,CAAvB;AACA,QAAMF,QAAQ,CAACF,UAAU,CAACI,GAAG,CAACE,OAAJ,CAAYL,EAAb,CAAX,CAAd;AACA,SAAOL,QAAQ,CAACE,IAAhB;AACD,CAJsC,CAAhC;AAMP,OAAO,MAAMS,YAAY,GAAGf,WAAW,CAAC;AACtCgB,EAAAA,IAAI,EAAE,SADgC;AAEtCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,QAAQ,EAAE,EAFE;AAGZC,IAAAA,WAAW,EAAE,EAHD;AAIZC,IAAAA,YAAY,EAAE;AAJF,GAFwB;AAQtCC,EAAAA,QAAQ,EAAE,EAR4B;AAStCC,EAAAA,aAAa,EAAEC,OAAO,IAAI;AACxBA,IAAAA,OAAO,CACJC,OADH,CACWtB,cAAc,CAACuB,SAD1B,EACqC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpDD,MAAAA,KAAK,CAACP,WAAN,GAAoBQ,MAAM,CAACC,OAA3B;AACD,KAHH,EAIGJ,OAJH,CAIWlB,eAAe,CAACmB,SAJ3B,EAIsC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrDD,MAAAA,KAAK,CAACT,KAAN,GAAcU,MAAM,CAACC,OAAP,CAAeC,aAA7B;AACAH,MAAAA,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAAP,CAAeV,QAAhC;AACD,KAPH,EAQGM,OARH,CAQWjB,UAAU,CAACkB,SARtB,EAQiC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChDD,MAAAA,KAAK,CAACN,YAAN,GAAqBO,MAAM,CAACC,OAA5B;AACD,KAVH;AAWD;AArBqC,CAAD,CAAhC;AAwBP,eAAed,YAAY,CAACgB,OAA5B","sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from 'axios'\n\nexport const getUserProfile = createAsyncThunk('appChat/getTasks', async () => {\n  const response = await axios.get('/apps/chat/users/profile-user')\n  return response.data\n})\n\nexport const getChatContacts = createAsyncThunk('appChat/getChatContacts', async () => {\n  const response = await axios.get('/apps/chat/chats-and-contacts')\n  return response.data\n})\n\nexport const selectChat = createAsyncThunk('appChat/selectChat', async (id, { dispatch }) => {\n  const response = await axios.get('/apps/chat/get-chat', { id })\n  await dispatch(getChatContacts())\n  return response.data\n})\n\nexport const sendMsg = createAsyncThunk('appChat/sendMsg', async (obj, { dispatch }) => {\n  const response = await axios.post('/apps/chat/send-msg', { obj })\n  await dispatch(selectChat(obj.contact.id))\n  return response.data\n})\n\nexport const appChatSlice = createSlice({\n  name: 'appChat',\n  initialState: {\n    chats: [],\n    contacts: [],\n    userProfile: {},\n    selectedUser: {}\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getUserProfile.fulfilled, (state, action) => {\n        state.userProfile = action.payload\n      })\n      .addCase(getChatContacts.fulfilled, (state, action) => {\n        state.chats = action.payload.chatsContacts\n        state.contacts = action.payload.contacts\n      })\n      .addCase(selectChat.fulfilled, (state, action) => {\n        state.selectedUser = action.payload\n      })\n  }\n})\n\nexport default appChatSlice.reducer\n"]},"metadata":{},"sourceType":"module"}