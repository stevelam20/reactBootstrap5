{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\extensions\\\\drag-and-drop\\\\DndClone.js\",\n    _s = $RefreshSig$();\n\n// ** React Imports\nimport { useState } from 'react'; // ** Third Party Components\n\nimport classnames from 'classnames';\nimport { ReactSortable } from 'react-sortablejs'; // ** Custom Hooks\n\nimport { useRTL } from '@hooks/useRTL'; // ** Reactstrap Imports\n\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Badge } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DndClone = () => {\n  _s();\n\n  // ** State\n  const [isRtl] = useRTL();\n  const source1 = [{\n    text: 'Youtube',\n    color: 'light-secondary'\n  }, {\n    text: 'Facebook',\n    color: 'light-primary'\n  }, {\n    text: 'Google',\n    color: 'light-success'\n  }, {\n    text: 'Instagram',\n    color: 'light-danger'\n  }, {\n    text: 'Twitter',\n    color: 'light-info'\n  }, {\n    text: 'Discord',\n    color: 'light-warning'\n  }];\n  const source2 = [{\n    text: 'Github',\n    color: 'light-secondary'\n  }, {\n    text: 'Gitlab',\n    color: 'light-primary'\n  }, {\n    text: 'Slack',\n    color: 'light-success'\n  }, {\n    text: 'Pinterest',\n    color: 'light-danger'\n  }, {\n    text: 'Tinder',\n    color: 'light-info'\n  }, {\n    text: 'Amazon',\n    color: 'light-warning'\n  }];\n  const [list, setList] = useState(source1);\n  const [list2, setList2] = useState(source2);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Clone List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CardText, {\n        children: [\"Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"pull:clone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), \" with your group prop to clone items.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          sm: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"my-1\",\n            children: \"Badge Source 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactSortable, {\n            list: list,\n            setList: setList,\n            group: {\n              name: 'shared-badge-group',\n              pull: 'clone'\n            },\n            className: classnames('demo-inline-spacing sortable', {\n              'flex-row-reverse': isRtl\n            }),\n            children: list.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(Badge, {\n                className: \"draggable\",\n                color: item.color,\n                pill: true,\n                children: item.text\n              }, `${item.text}-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          sm: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"my-1\",\n            children: \"Badge Source 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactSortable, {\n            list: list2,\n            setList: setList2,\n            group: {\n              name: 'shared-badge-group',\n              pull: 'clone'\n            },\n            className: classnames('demo-inline-spacing sortable', {\n              'flex-row-reverse': isRtl\n            }),\n            children: list2.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(Badge, {\n                className: \"draggable\",\n                color: item.color,\n                pill: true,\n                children: item.text\n              }, `${item.text}-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DndClone, \"hgYcl/KIFCcBziu+0w1Vs8hJSnA=\", false, function () {\n  return [useRTL];\n});\n\n_c = DndClone;\nexport default DndClone;\n\nvar _c;\n\n$RefreshReg$(_c, \"DndClone\");","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/extensions/drag-and-drop/DndClone.js"],"names":["useState","classnames","ReactSortable","useRTL","Card","CardHeader","CardTitle","CardBody","CardText","Row","Col","Badge","DndClone","isRtl","source1","text","color","source2","list","setList","list2","setList2","name","pull","map","item","index"],"mappings":"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","sourcesContent":["// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ReactSortable } from 'react-sortablejs'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Badge } from 'reactstrap'\n\nconst DndClone = () => {\n  // ** State\n  const [isRtl] = useRTL()\n\n  const source1 = [\n    {\n      text: 'Youtube',\n      color: 'light-secondary'\n    },\n    {\n      text: 'Facebook',\n      color: 'light-primary'\n    },\n    {\n      text: 'Google',\n      color: 'light-success'\n    },\n    {\n      text: 'Instagram',\n      color: 'light-danger'\n    },\n    {\n      text: 'Twitter',\n      color: 'light-info'\n    },\n    {\n      text: 'Discord',\n      color: 'light-warning'\n    }\n  ]\n  const source2 = [\n    {\n      text: 'Github',\n      color: 'light-secondary'\n    },\n    {\n      text: 'Gitlab',\n      color: 'light-primary'\n    },\n    {\n      text: 'Slack',\n      color: 'light-success'\n    },\n    {\n      text: 'Pinterest',\n      color: 'light-danger'\n    },\n    {\n      text: 'Tinder',\n      color: 'light-info'\n    },\n    {\n      text: 'Amazon',\n      color: 'light-warning'\n    }\n  ]\n\n  const [list, setList] = useState(source1)\n  const [list2, setList2] = useState(source2)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Clone List</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText>\n          Add <code>pull:clone</code> with your group prop to clone items.\n        </CardText>\n        <Row>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>Badge Source 1</h4>\n            <ReactSortable\n              list={list}\n              setList={setList}\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\n              className={classnames('demo-inline-spacing sortable', {\n                'flex-row-reverse': isRtl\n              })}\n            >\n              {list.map((item, index) => {\n                return (\n                  <Badge className='draggable' key={`${item.text}-${index}`} color={item.color} pill>\n                    {item.text}\n                  </Badge>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>Badge Source 2</h4>\n            <ReactSortable\n              list={list2}\n              setList={setList2}\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\n              className={classnames('demo-inline-spacing sortable', {\n                'flex-row-reverse': isRtl\n              })}\n            >\n              {list2.map((item, index) => {\n                return (\n                  <Badge className='draggable' key={`${item.text}-${index}`} color={item.color} pill>\n                    {item.text}\n                  </Badge>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default DndClone\n"]},"metadata":{},"sourceType":"module"}