{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEVEDESKTOP\\\\Desktop\\\\themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template\\\\vuexy-admin-v8.1.0\\\\react-version\\\\Bootstrap5\\\\full-version\\\\full-version\\\\src\\\\views\\\\components\\\\dropdowns\\\\DropdownsSourceCode.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const dropdownControlled = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: `\nimport React, { useState } from 'react'\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\nconst DropdownControlled = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n\nconst toggleDropdown = () => {\n  setDropdownOpen(!dropdownOpen)\n}\n\n  return (\n    <ButtonDropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\n      <DropdownToggle color='primary' caret>\n        Controlled\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n        <DropdownItem href='/' tag='a' disabled>\n          Option 2\n        </DropdownItem>\n        <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n      </DropdownMenu>\n    </ButtonDropdown>\n  )\n}\nexport default DropdownControlled`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 2,\n  columnNumber: 3\n}, this);\nexport const dropdownUncontrolled = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: `\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownUncontrolled = () => {\n  return (\n    <UncontrolledButtonDropdown>\n      <DropdownToggle color='primary' caret>\n        Uncontrolled\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n        <DropdownItem href='/' tag='a' disabled>\n          Option 2\n        </DropdownItem>\n        <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n      </DropdownMenu>\n    </UncontrolledButtonDropdown>\n  )\n}\nexport default DropdownUncontrolled`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this);\nexport const dropdownBasic = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: `\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownBasic = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='secondary' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='warning' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='dark' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownBasic`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 3\n}, this);\nexport const dropdownSplit = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: `\n\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownSplit = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <Button color='primary'>Primary</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='secondary'>Secondary</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='secondary' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='success'>Success</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='success' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='warning'>Warning</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='warning' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='danger'>Danger</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='danger' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='info'>Info</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='info' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='dark'>Dark</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='dark' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownSplit`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 153,\n  columnNumber: 3\n}, this);\nexport const dropdownOutline = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: `\n\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownOutline = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button outline color='secondary'>\n          Secondary\n        </Button>\n        <DropdownToggle outline className='dropdown-toggle-split' color='secondary' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button outline color='warning'>\n          Warning\n        </Button>\n        <DropdownToggle outline className='dropdown-toggle-split' color='warning' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownOutline`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 248,\n  columnNumber: 3\n}, this);\nexport const dropdownFlat = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: `\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownFlat = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-secondary' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-warning' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-dark' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownFlat`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 341,\n  columnNumber: 3\n}, this);\nexport const dropdownGradient = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: `\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownGradient = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-primary' color='none' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-secondary' color='none' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-success' color='none' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-warning' color='none' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-danger' color='none' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-info' color='none' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-dark' color='none' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownGradient`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 432,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 431,\n  columnNumber: 3\n}, this);\nexport const dropdownSizes = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: `\n\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle, Row, Col } from 'reactstrap'\n\nconst DropdownSizes = () => {\n  return (\n    <React.Fragment>\n      <Row>\n        <Col md='6' sm='12'>\n          <div className='demo-inline-spacing'>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' size='lg' caret>\n                Large\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' caret>\n                Default\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' size='sm' caret>\n                Small\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </Col>\n        <Col md='6' sm='12'>\n          <div className='demo-inline-spacing'>\n            <UncontrolledButtonDropdown>\n              <Button color='primary' size='lg'>\n                Large\n              </Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret size='lg'></DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>{' '}\n            <UncontrolledButtonDropdown>\n              <Button color='primary'>Default</Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>{' '}\n            <UncontrolledButtonDropdown>\n              <Button color='primary' size='sm'>\n                Small\n              </Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </Col>\n      </Row>\n    </React.Fragment>\n  )\n}\nexport default DropdownSizes`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 520,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 519,\n  columnNumber: 3\n}, this);\nexport const dropdownDirections = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: `\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownDirections = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='primary' caret>\n          Drop bottom right\n        </DropdownToggle>\n        <DropdownMenu end>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='up'>\n        <DropdownToggle color='primary' caret>\n          Drop Up\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='end'>\n        <DropdownToggle color='primary' caret>\n          Drop Right\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='start'>\n        <DropdownToggle color='primary' caret>\n          Drop Left\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownDirections`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 609,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 608,\n  columnNumber: 3\n}, this);\nexport const dropdownVariations = /*#__PURE__*/_jsxDEV(\"pre\", {\n  children: /*#__PURE__*/_jsxDEV(\"code\", {\n    className: \"language-jsx\",\n    children: `\nimport { useState } from 'react'\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  ButtonDropdown,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\nimport { Wifi, WifiOff, PhoneOff, BellOff, Bell, VolumeX, Volume2 } from 'react-feather'\n\nconst icons = [\n  {\n    id: 1,\n    item: <WifiOff size={15} />\n  },\n  {\n    id: 2,\n    item: <VolumeX size={15} />\n  },\n  {\n    id: 3,\n    item: <Volume2 size={15} />\n  },\n  {\n    id: 4,\n    item: <Bell size={15} />\n  },\n  {\n    id: 5,\n    item: <BellOff size={15} />\n  },\n  {\n    id: 6,\n    item: <PhoneOff size={15} />\n  }\n]\n\nconst DropdownVariations = () => {\n  const [formDropdown, setFormDropdown] = useState(false)\n  const [activeIcon, setActiveIcon] = useState(<Wifi size={15} />)\n\n  const toggleIcon = icon => setActiveIcon(icon)\n  const toggleFormDropdown = () => setFormDropdown(!formDropdown)\n\n  const renderIconItem = icons.map(icon => {\n    return (\n      <DropdownItem tag='span' key={icon.id} onClick={() => toggleIcon(icon.item)}>\n        {icon.item}\n      </DropdownItem>\n    )\n  })\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown direction='up'>\n        <DropdownToggle color='primary' caret>\n          Group\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' header>\n            Group 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem href='/' tag='a' header>\n            Group 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem href='/' tag='a' header>\n            Group 3\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown className='dropdown-icon-wrapper' direction='up'>\n        <Button color='primary'>Icons</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='primary' caret>\n          {activeIcon}\n        </DropdownToggle>\n        <DropdownMenu tag='div' end>\n          {renderIconItem}\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n\n      <ButtonDropdown isOpen={formDropdown} toggle={toggleFormDropdown} direction='up'>\n        <DropdownToggle color='primary' caret>\n          Form\n        </DropdownToggle>\n        <DropdownMenu>\n          <Form\n            className='px-2 py-2'\n            onSubmit={e => {\n              e.preventDefault()\n              setFormDropdown(false)\n            }}\n          >\n            <div className='mb-2'>\n              <Label className='form-label' for='ddEmail'>Email</Label>\n              <Input type='email' placeholder='Email' name='ddemail' id='ddEmail' />\n            </div>\n            <div className='mb-2'>\n              <Label className='form-label' for='ddPassword'>Password</Label>\n              <Input type='password' placeholder='Password' name='ddPassword' id='ddPassword' />\n            </div>\n            <div className='form-check mb-2'>\n              <Input type='checkbox' name='ddCheck' id='ddCheck' />\n              <Label className='form-check-label' for='ddCheck'>Remember Me</Label>\n            </div>\n            <Button color='primary' type='submit'>\n              Sign In\n            </Button>\n          </Form>\n          <DropdownItem divider />\n          <DropdownItem\n            href='/'\n            tag='a'\n            href='#'\n            onClick={e => {\n              e.preventDefault()\n              setFormDropdown(false)\n            }}\n          >\n            New around here? Sign up\n          </DropdownItem>\n          <DropdownItem\n            href='/'\n            tag='a'\n            href='#'\n            onClick={e => {\n              e.preventDefault()\n              setFormDropdown(false)\n            }}\n          >\n            Forgot password?\n          </DropdownItem>\n        </DropdownMenu>\n      </ButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownVariations`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 667,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 666,\n  columnNumber: 3\n}, this);","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/components/dropdowns/DropdownsSourceCode.js"],"names":["dropdownControlled","dropdownUncontrolled","dropdownBasic","dropdownSplit","dropdownOutline","dropdownFlat","dropdownGradient","dropdownSizes","dropdownDirections","dropdownVariations"],"mappings":";;AAAA,OAAO,MAAMA,kBAAkB,gBAC7B;AAAA,yBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,cACI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADK;AAkCP,OAAO,MAAMC,oBAAoB,gBAC/B;AAAA,yBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,cACI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADK;AA4BP,OAAO,MAAMC,aAAa,gBACxB;AAAA,yBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,cACI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlFI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADK;AAyFP,OAAO,MAAMC,aAAa,gBACxB;AAAA,yBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,cACI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxFI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADK;AA+FP,OAAO,MAAMC,eAAe,gBAC1B;AAAA,yBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,cACI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtFI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADK;AA6FP,OAAO,MAAMC,YAAY,gBACvB;AAAA,yBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,cACI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnFI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADK;AA0FP,OAAO,MAAMC,gBAAgB,gBAC3B;AAAA,yBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,cACI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjFI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADK;AAwFP,OAAO,MAAMC,aAAa,gBACxB;AAAA,yBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,cACI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlFI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADK;AAyFP,OAAO,MAAMC,kBAAkB,gBAC7B;AAAA,yBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,cACI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADK;AA0DP,OAAO,MAAMC,kBAAkB,gBAC7B;AAAA,yBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,clKI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADK","sourcesContent":["export const dropdownControlled = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\nconst DropdownControlled = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n\nconst toggleDropdown = () => {\n  setDropdownOpen(!dropdownOpen)\n}\n\n  return (\n    <ButtonDropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\n      <DropdownToggle color='primary' caret>\n        Controlled\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n        <DropdownItem href='/' tag='a' disabled>\n          Option 2\n        </DropdownItem>\n        <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n      </DropdownMenu>\n    </ButtonDropdown>\n  )\n}\nexport default DropdownControlled`}\n    </code>\n  </pre>\n)\n\nexport const dropdownUncontrolled = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownUncontrolled = () => {\n  return (\n    <UncontrolledButtonDropdown>\n      <DropdownToggle color='primary' caret>\n        Uncontrolled\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n        <DropdownItem href='/' tag='a' disabled>\n          Option 2\n        </DropdownItem>\n        <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n      </DropdownMenu>\n    </UncontrolledButtonDropdown>\n  )\n}\nexport default DropdownUncontrolled`}\n    </code>\n  </pre>\n)\n\nexport const dropdownBasic = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownBasic = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='secondary' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='warning' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='dark' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownBasic`}\n    </code>\n  </pre>\n)\n\nexport const dropdownSplit = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownSplit = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <Button color='primary'>Primary</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='secondary'>Secondary</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='secondary' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='success'>Success</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='success' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='warning'>Warning</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='warning' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='danger'>Danger</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='danger' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='info'>Info</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='info' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='dark'>Dark</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='dark' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownSplit`}\n    </code>\n  </pre>\n)\n\nexport const dropdownOutline = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownOutline = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button outline color='secondary'>\n          Secondary\n        </Button>\n        <DropdownToggle outline className='dropdown-toggle-split' color='secondary' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button outline color='warning'>\n          Warning\n        </Button>\n        <DropdownToggle outline className='dropdown-toggle-split' color='warning' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownOutline`}\n    </code>\n  </pre>\n)\n\nexport const dropdownFlat = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownFlat = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-secondary' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-warning' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-dark' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownFlat`}\n    </code>\n  </pre>\n)\n\nexport const dropdownGradient = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownGradient = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-primary' color='none' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-secondary' color='none' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-success' color='none' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-warning' color='none' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-danger' color='none' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-info' color='none' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-dark' color='none' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownGradient`}\n    </code>\n  </pre>\n)\n\nexport const dropdownSizes = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle, Row, Col } from 'reactstrap'\n\nconst DropdownSizes = () => {\n  return (\n    <React.Fragment>\n      <Row>\n        <Col md='6' sm='12'>\n          <div className='demo-inline-spacing'>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' size='lg' caret>\n                Large\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' caret>\n                Default\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' size='sm' caret>\n                Small\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </Col>\n        <Col md='6' sm='12'>\n          <div className='demo-inline-spacing'>\n            <UncontrolledButtonDropdown>\n              <Button color='primary' size='lg'>\n                Large\n              </Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret size='lg'></DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>{' '}\n            <UncontrolledButtonDropdown>\n              <Button color='primary'>Default</Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>{' '}\n            <UncontrolledButtonDropdown>\n              <Button color='primary' size='sm'>\n                Small\n              </Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </Col>\n      </Row>\n    </React.Fragment>\n  )\n}\nexport default DropdownSizes`}\n    </code>\n  </pre>\n)\n\nexport const dropdownDirections = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownDirections = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='primary' caret>\n          Drop bottom right\n        </DropdownToggle>\n        <DropdownMenu end>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='up'>\n        <DropdownToggle color='primary' caret>\n          Drop Up\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='end'>\n        <DropdownToggle color='primary' caret>\n          Drop Right\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='start'>\n        <DropdownToggle color='primary' caret>\n          Drop Left\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownDirections`}\n    </code>\n  </pre>\n)\n\nexport const dropdownVariations = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport { useState } from 'react'\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  ButtonDropdown,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\nimport { Wifi, WifiOff, PhoneOff, BellOff, Bell, VolumeX, Volume2 } from 'react-feather'\n\nconst icons = [\n  {\n    id: 1,\n    item: <WifiOff size={15} />\n  },\n  {\n    id: 2,\n    item: <VolumeX size={15} />\n  },\n  {\n    id: 3,\n    item: <Volume2 size={15} />\n  },\n  {\n    id: 4,\n    item: <Bell size={15} />\n  },\n  {\n    id: 5,\n    item: <BellOff size={15} />\n  },\n  {\n    id: 6,\n    item: <PhoneOff size={15} />\n  }\n]\n\nconst DropdownVariations = () => {\n  const [formDropdown, setFormDropdown] = useState(false)\n  const [activeIcon, setActiveIcon] = useState(<Wifi size={15} />)\n\n  const toggleIcon = icon => setActiveIcon(icon)\n  const toggleFormDropdown = () => setFormDropdown(!formDropdown)\n\n  const renderIconItem = icons.map(icon => {\n    return (\n      <DropdownItem tag='span' key={icon.id} onClick={() => toggleIcon(icon.item)}>\n        {icon.item}\n      </DropdownItem>\n    )\n  })\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown direction='up'>\n        <DropdownToggle color='primary' caret>\n          Group\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' header>\n            Group 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem href='/' tag='a' header>\n            Group 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem href='/' tag='a' header>\n            Group 3\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown className='dropdown-icon-wrapper' direction='up'>\n        <Button color='primary'>Icons</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='primary' caret>\n          {activeIcon}\n        </DropdownToggle>\n        <DropdownMenu tag='div' end>\n          {renderIconItem}\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n\n      <ButtonDropdown isOpen={formDropdown} toggle={toggleFormDropdown} direction='up'>\n        <DropdownToggle color='primary' caret>\n          Form\n        </DropdownToggle>\n        <DropdownMenu>\n          <Form\n            className='px-2 py-2'\n            onSubmit={e => {\n              e.preventDefault()\n              setFormDropdown(false)\n            }}\n          >\n            <div className='mb-2'>\n              <Label className='form-label' for='ddEmail'>Email</Label>\n              <Input type='email' placeholder='Email' name='ddemail' id='ddEmail' />\n            </div>\n            <div className='mb-2'>\n              <Label className='form-label' for='ddPassword'>Password</Label>\n              <Input type='password' placeholder='Password' name='ddPassword' id='ddPassword' />\n            </div>\n            <div className='form-check mb-2'>\n              <Input type='checkbox' name='ddCheck' id='ddCheck' />\n              <Label className='form-check-label' for='ddCheck'>Remember Me</Label>\n            </div>\n            <Button color='primary' type='submit'>\n              Sign In\n            </Button>\n          </Form>\n          <DropdownItem divider />\n          <DropdownItem\n            href='/'\n            tag='a'\n            href='#'\n            onClick={e => {\n              e.preventDefault()\n              setFormDropdown(false)\n            }}\n          >\n            New around here? Sign up\n          </DropdownItem>\n          <DropdownItem\n            href='/'\n            tag='a'\n            href='#'\n            onClick={e => {\n              e.preventDefault()\n              setFormDropdown(false)\n            }}\n          >\n            Forgot password?\n          </DropdownItem>\n        </DropdownMenu>\n      </ButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownVariations`}\n    </code>\n  </pre>\n)\n"]},"metadata":{},"sourceType":"module"}