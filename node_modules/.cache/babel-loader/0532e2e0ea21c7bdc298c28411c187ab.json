{"ast":null,"code":"import mock from '../mock'; // ** Utils\n\nimport { paginateArray } from '../utils';\nconst data = {\n  permissions: [{\n    id: 1,\n    name: 'Management',\n    assignedTo: ['administrator'],\n    createdDate: '14 Apr 2021, 8:43 PM'\n  }, {\n    id: 2,\n    assignedTo: ['administrator'],\n    name: 'Manage Billing & Roles',\n    createdDate: '16 Sep 2021, 5:20 PM'\n  }, {\n    id: 3,\n    name: 'Add & Remove Users',\n    createdDate: '14 Oct 2021, 10:20 AM',\n    assignedTo: ['administrator', 'manager']\n  }, {\n    id: 4,\n    name: 'Project Planning',\n    createdDate: '14 Oct 2021, 10:20 AM',\n    assignedTo: ['administrator', 'user', 'support']\n  }, {\n    id: 5,\n    name: 'Manage Email Sequences',\n    createdDate: '23 Aug 2021, 2:00 PM',\n    assignedTo: ['administrator', 'user', 'support']\n  }, {\n    id: 6,\n    name: 'Client Communication',\n    createdDate: '15 Apr 2021, 11:30 AM',\n    assignedTo: ['administrator', 'manager']\n  }, {\n    id: 7,\n    name: 'Only View',\n    createdDate: '04 Dec 2021, 8:15 PM',\n    assignedTo: ['administrator', 'restricted-user']\n  }, {\n    id: 8,\n    name: 'Financial Management',\n    createdDate: '25 Feb 2021, 10:30 AM',\n    assignedTo: ['administrator', 'manager']\n  }, {\n    id: 9,\n    name: 'Manage Othersâ€™ Tasks',\n    createdDate: '04 Nov 2021, 11:45 AM',\n    assignedTo: ['administrator', 'support']\n  }]\n}; // ------------------------------------------------\n// GET: Return Permissions List\n// ------------------------------------------------\n\nmock.onGet('/apps/permissions/data').reply(config => {\n  const {\n    q = '',\n    perPage = 10,\n    page = 1,\n    assignedTo = ''\n  } = config.params;\n  const queryLowered = q.toLowerCase();\n  const filteredData = data.permissions.filter(permission => {\n    if (assignedTo !== '') {\n      return (permission.name.toLowerCase().includes(queryLowered) || permission.createdDate.toLowerCase().includes(queryLowered)) && permission.assignedTo.includes(assignedTo);\n    } else {\n      return permission.name.toLowerCase().includes(queryLowered) || permission.createdDate.toLowerCase().includes(queryLowered);\n    }\n  });\n  return [200, {\n    params: config.params,\n    allData: data.permissions,\n    total: filteredData.length,\n    permissions: paginateArray(filteredData, perPage, page)\n  }];\n}); // POST: Add new permission\n\nmock.onPost('/apps/permissions/add-permission').reply(config => {\n  // Get permission from post data\n  const permission = JSON.parse(config.data).permission;\n  const {\n    length\n  } = data.permissions;\n  let lastIndex = 0;\n\n  if (length) {\n    lastIndex = data.permissions[length - 1].id;\n  }\n\n  permission.id = lastIndex + 1;\n  permission.assignedTo = ['administrator'];\n  const now = new Date();\n  const months = now.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  }).replace(',', '');\n  const time = now.toLocaleString('en-US', {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  });\n  const monthsArr = months.split(' ');\n  /*eslint-disable */\n\n  const moveElement = (array, sourceIndex, destinationIndex) => {\n    return array.map(a => a === sourceIndex ? array.find(a => a === destinationIndex) : a === destinationIndex ? array.find(a => a === sourceIndex) : a);\n  };\n\n  const finalDate = moveElement(monthsArr, monthsArr[0], monthsArr[1]).join(' ');\n  permission.createdDate = `${finalDate}, ${time}`;\n  data.permissions.unshift(permission);\n  return [201, {\n    permission\n  }];\n});\nmock.onPost('/apps/permissions/update-permission').reply(config => {\n  // Get permission from post data\n  const {\n    id,\n    name\n  } = JSON.parse(config.data);\n  data.permissions.find(i => {\n    if (i.id === id) {\n      i.name = name;\n    }\n  });\n  return [201];\n}); // DELETE: Deletes Permissions\n\nmock.onDelete('/apps/permissions/delete').reply(config => {\n  // Get  id from URL\n  let permissionID = config.id; // Convert Id to number\n\n  permissionID = Number(permissionID);\n  const permissionIndex = data.permissions.findIndex(t => t.id === permissionID);\n  data.permissions.splice(permissionIndex, 1);\n  return [200];\n});","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/@fake-db/apps/permissionsList.js"],"names":["mock","paginateArray","data","permissions","id","name","assignedTo","createdDate","onGet","reply","config","q","perPage","page","params","queryLowered","toLowerCase","filteredData","filter","permission","includes","allData","total","length","onPost","JSON","parse","lastIndex","now","Date","months","toLocaleDateString","year","month","day","replace","time","toLocaleString","hour","minute","hour12","monthsArr","split","moveElement","array","sourceIndex","destinationIndex","map","a","find","finalDate","join","unshift","i","onDelete","permissionID","Number","permissionIndex","findIndex","t","splice"],"mappings":"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","sourcesContent":["import mock from '../mock'\n\n// ** Utils\nimport { paginateArray } from '../utils'\n\nconst data = {\n  permissions: [\n    {\n      id: 1,\n      name: 'Management',\n      assignedTo: ['administrator'],\n      createdDate: '14 Apr 2021, 8:43 PM'\n    },\n    {\n      id: 2,\n      assignedTo: ['administrator'],\n      name: 'Manage Billing & Roles',\n      createdDate: '16 Sep 2021, 5:20 PM'\n    },\n    {\n      id: 3,\n      name: 'Add & Remove Users',\n      createdDate: '14 Oct 2021, 10:20 AM',\n      assignedTo: ['administrator', 'manager']\n    },\n    {\n      id: 4,\n      name: 'Project Planning',\n      createdDate: '14 Oct 2021, 10:20 AM',\n      assignedTo: ['administrator', 'user', 'support']\n    },\n    {\n      id: 5,\n      name: 'Manage Email Sequences',\n      createdDate: '23 Aug 2021, 2:00 PM',\n      assignedTo: ['administrator', 'user', 'support']\n    },\n    {\n      id: 6,\n      name: 'Client Communication',\n      createdDate: '15 Apr 2021, 11:30 AM',\n      assignedTo: ['administrator', 'manager']\n    },\n    {\n      id: 7,\n      name: 'Only View',\n      createdDate: '04 Dec 2021, 8:15 PM',\n      assignedTo: ['administrator', 'restricted-user']\n    },\n    {\n      id: 8,\n      name: 'Financial Management',\n      createdDate: '25 Feb 2021, 10:30 AM',\n      assignedTo: ['administrator', 'manager']\n    },\n    {\n      id: 9,\n      name: 'Manage Othersâ€™ Tasks',\n      createdDate: '04 Nov 2021, 11:45 AM',\n      assignedTo: ['administrator', 'support']\n    }\n  ]\n}\n\n// ------------------------------------------------\n// GET: Return Permissions List\n// ------------------------------------------------\nmock.onGet('/apps/permissions/data').reply(config => {\n  const { q = '', perPage = 10, page = 1, assignedTo = '' } = config.params\n  const queryLowered = q.toLowerCase()\n  const filteredData = data.permissions.filter(permission => {\n    if (assignedTo !== '') {\n      return (\n        (permission.name.toLowerCase().includes(queryLowered) ||\n          permission.createdDate.toLowerCase().includes(queryLowered)) &&\n        permission.assignedTo.includes(assignedTo)\n      )\n    } else {\n      return (\n        permission.name.toLowerCase().includes(queryLowered) ||\n        permission.createdDate.toLowerCase().includes(queryLowered)\n      )\n    }\n  })\n\n  return [\n    200,\n    {\n      params: config.params,\n      allData: data.permissions,\n      total: filteredData.length,\n      permissions: paginateArray(filteredData, perPage, page)\n    }\n  ]\n})\n\n// POST: Add new permission\nmock.onPost('/apps/permissions/add-permission').reply(config => {\n  // Get permission from post data\n  const permission = JSON.parse(config.data).permission\n\n  const { length } = data.permissions\n  let lastIndex = 0\n  if (length) {\n    lastIndex = data.permissions[length - 1].id\n  }\n  permission.id = lastIndex + 1\n\n  permission.assignedTo = ['administrator']\n\n  const now = new Date()\n  const months = now\n    .toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    })\n    .replace(',', '')\n  const time = now.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n\n  const monthsArr = months.split(' ')\n  /*eslint-disable */\n  const moveElement = (array, sourceIndex, destinationIndex) => {\n    return array.map(a =>\n      a === sourceIndex\n        ? array.find(a => a === destinationIndex)\n        : a === destinationIndex\n        ? array.find(a => a === sourceIndex)\n        : a\n    )\n  }\n\n  const finalDate = moveElement(monthsArr, monthsArr[0], monthsArr[1]).join(' ')\n\n  permission.createdDate = `${finalDate}, ${time}`\n\n  data.permissions.unshift(permission)\n\n  return [201, { permission }]\n})\n\nmock.onPost('/apps/permissions/update-permission').reply(config => {\n  // Get permission from post data\n  const { id, name } = JSON.parse(config.data)\n\n  data.permissions.find(i => {\n    if (i.id === id) {\n      i.name = name\n    }\n  })\n\n  return [201]\n})\n\n// DELETE: Deletes Permissions\nmock.onDelete('/apps/permissions/delete').reply(config => {\n  // Get  id from URL\n  let permissionID = config.id\n\n  // Convert Id to number\n  permissionID = Number(permissionID)\n\n  const permissionIndex = data.permissions.findIndex(t => t.id === permissionID)\n  data.permissions.splice(permissionIndex, 1)\n\n  return [200]\n})\n"]},"metadata":{},"sourceType":"module"}