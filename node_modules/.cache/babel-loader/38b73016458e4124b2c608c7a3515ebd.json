{"ast":null,"code":"// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'; // ** Axios Imports\n\nimport axios from 'axios';\nexport const fetchEvents = createAsyncThunk('appCalendar/fetchEvents', async calendars => {\n  const response = await axios.get('/apps/calendar/events', {\n    calendars\n  });\n  return response.data;\n});\nexport const addEvent = createAsyncThunk('appCalendar/addEvent', async (event, _ref) => {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n  await axios.post('/apps/calendar/add-event', {\n    event\n  });\n  await dispatch(fetchEvents(getState().calendar.selectedCalendars));\n  return event;\n});\nexport const updateEvent = createAsyncThunk('appCalendar/updateEvent', async (event, _ref2) => {\n  let {\n    dispatch,\n    getState\n  } = _ref2;\n  await axios.post('/apps/calendar/update-event', {\n    event\n  });\n  await dispatch(fetchEvents(getState().calendar.selectedCalendars));\n  return event;\n});\nexport const updateFilter = createAsyncThunk('appCalendar/updateFilter', async (filter, _ref3) => {\n  let {\n    dispatch,\n    getState\n  } = _ref3;\n\n  if (getState().calendar.selectedCalendars.includes(filter)) {\n    await dispatch(fetchEvents(getState().calendar.selectedCalendars.filter(i => i !== filter)));\n  } else {\n    await dispatch(fetchEvents([...getState().calendar.selectedCalendars, filter]));\n  }\n\n  return filter;\n});\nexport const updateAllFilters = createAsyncThunk('appCalendar/updateAllFilters', async (value, _ref4) => {\n  let {\n    dispatch\n  } = _ref4;\n\n  if (value === true) {\n    await dispatch(fetchEvents(['Personal', 'Business', 'Family', 'Holiday', 'ETC']));\n  } else {\n    await dispatch(fetchEvents([]));\n  }\n\n  return value;\n});\nexport const removeEvent = createAsyncThunk('appCalendar/removeEvent', async id => {\n  await axios.delete('/apps/calendar/remove-event', {\n    id\n  });\n  return id;\n});\nexport const appCalendarSlice = createSlice({\n  name: 'appCalendar',\n  initialState: {\n    events: [],\n    selectedEvent: {},\n    selectedCalendars: ['Personal', 'Business', 'Family', 'Holiday', 'ETC']\n  },\n  reducers: {\n    selectEvent: (state, action) => {\n      state.selectedEvent = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchEvents.fulfilled, (state, action) => {\n      state.events = action.payload;\n    }).addCase(updateFilter.fulfilled, (state, action) => {\n      if (state.selectedCalendars.includes(action.payload)) {\n        state.selectedCalendars.splice(state.selectedCalendars.indexOf(action.payload), 1);\n      } else {\n        state.selectedCalendars.push(action.payload);\n      }\n    }).addCase(updateAllFilters.fulfilled, (state, action) => {\n      const value = action.payload;\n      let selected = [];\n\n      if (value === true) {\n        selected = ['Personal', 'Business', 'Family', 'Holiday', 'ETC'];\n      } else {\n        selected = [];\n      }\n\n      state.selectedCalendars = selected;\n    });\n  }\n});\nexport const {\n  selectEvent\n} = appCalendarSlice.actions;\nexport default appCalendarSlice.reducer;","map":{"version":3,"sources":["C:/Users/STEVEDESKTOP/Desktop/themeforest-5lg3m8tG-vuexy-vuejs-html-laravel-admin-dashboard-template/vuexy-admin-v8.1.0/react-version/Bootstrap5/full-version/full-version/src/views/apps/calendar/store/index.js"],"names":["createSlice","createAsyncThunk","axios","fetchEvents","calendars","response","get","data","addEvent","event","dispatch","getState","post","calendar","selectedCalendars","updateEvent","updateFilter","filter","includes","i","updateAllFilters","value","removeEvent","id","delete","appCalendarSlice","name","initialState","events","selectedEvent","reducers","selectEvent","state","action","payload","extraReducers","builder","addCase","fulfilled","splice","indexOf","push","selected","actions","reducer"],"mappings":"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","sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from 'axios'\n\nexport const fetchEvents = createAsyncThunk('appCalendar/fetchEvents', async calendars => {\n  const response = await axios.get('/apps/calendar/events', { calendars })\n  return response.data\n})\n\nexport const addEvent = createAsyncThunk('appCalendar/addEvent', async (event, { dispatch, getState }) => {\n  await axios.post('/apps/calendar/add-event', { event })\n  await dispatch(fetchEvents(getState().calendar.selectedCalendars))\n  return event\n})\n\nexport const updateEvent = createAsyncThunk('appCalendar/updateEvent', async (event, { dispatch, getState }) => {\n  await axios.post('/apps/calendar/update-event', { event })\n  await dispatch(fetchEvents(getState().calendar.selectedCalendars))\n  return event\n})\n\nexport const updateFilter = createAsyncThunk('appCalendar/updateFilter', async (filter, { dispatch, getState }) => {\n  if (getState().calendar.selectedCalendars.includes(filter)) {\n    await dispatch(fetchEvents(getState().calendar.selectedCalendars.filter(i => i !== filter)))\n  } else {\n    await dispatch(fetchEvents([...getState().calendar.selectedCalendars, filter]))\n  }\n  return filter\n})\n\nexport const updateAllFilters = createAsyncThunk('appCalendar/updateAllFilters', async (value, { dispatch }) => {\n  if (value === true) {\n    await dispatch(fetchEvents(['Personal', 'Business', 'Family', 'Holiday', 'ETC']))\n  } else {\n    await dispatch(fetchEvents([]))\n  }\n  return value\n})\n\nexport const removeEvent = createAsyncThunk('appCalendar/removeEvent', async id => {\n  await axios.delete('/apps/calendar/remove-event', { id })\n  return id\n})\n\nexport const appCalendarSlice = createSlice({\n  name: 'appCalendar',\n  initialState: {\n    events: [],\n    selectedEvent: {},\n    selectedCalendars: ['Personal', 'Business', 'Family', 'Holiday', 'ETC']\n  },\n  reducers: {\n    selectEvent: (state, action) => {\n      state.selectedEvent = action.payload\n    }\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(fetchEvents.fulfilled, (state, action) => {\n        state.events = action.payload\n      })\n      .addCase(updateFilter.fulfilled, (state, action) => {\n        if (state.selectedCalendars.includes(action.payload)) {\n          state.selectedCalendars.splice(state.selectedCalendars.indexOf(action.payload), 1)\n        } else {\n          state.selectedCalendars.push(action.payload)\n        }\n      })\n      .addCase(updateAllFilters.fulfilled, (state, action) => {\n        const value = action.payload\n        let selected = []\n        if (value === true) {\n          selected = ['Personal', 'Business', 'Family', 'Holiday', 'ETC']\n        } else {\n          selected = []\n        }\n        state.selectedCalendars = selected\n      })\n  }\n})\n\nexport const { selectEvent } = appCalendarSlice.actions\n\nexport default appCalendarSlice.reducer\n"]},"metadata":{},"sourceType":"module"}