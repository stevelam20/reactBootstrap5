"use strict";Object.defineProperty(exports,"__esModule",{value:true});var t=require("@ucast/mongo2js");function e(t){return Array.isArray(t)?t:[t]}const s="__caslSubjectType__";function i(t,e){if(e)if(!e.hasOwnProperty(s))Object.defineProperty(e,s,{value:t});else if(t!==e[s])throw new Error(`Trying to cast object to subject type ${t} but previously it was casted to ${e[s]}`);return e}const r=t=>{const e=typeof t;return"string"===e||"function"===e};const n=t=>t.modelName||t.name;const o=t=>"string"===typeof t?t:n(t);function c(t){if(!t)return"all";if(t.hasOwnProperty(s))return t[s];return n(t.constructor)}function u(t,s){let i=e(s);let r=0;while(r<i.length){const e=i[r++];if(t.hasOwnProperty(e))i=i.concat(t[e])}return i}function h(t){if(t.manage)throw new Error('Cannot add alias for "manage" action because it is reserved');Object.keys(t).forEach((e=>{const s=e===t[e]||Array.isArray(t[e])&&(-1!==t[e].indexOf(e)||-1!==t[e].indexOf("manage"));if(s)throw new Error(`Attempt to alias action to itself: ${e} -> ${t[e]}`)}))}function l(t){if("production"!==process.env.NODE_ENV)h(t);return e=>u(t,e)}function a(t,e,s){for(let i=s;i<e.length;i++)t.push(e[i])}function f(t,e){if(!t||!t.length)return e||[];if(!e||!e.length)return t||[];let s=0;let i=0;const r=[];while(s<t.length&&i<e.length)if(t[s].priority<e[i].priority){r.push(t[s]);s++}else{r.push(e[i]);i++}a(r,t,s);a(r,e,i);return r}function d(t,e,s){let i=t.get(e);if(!i){i=s();t.set(e,i)}return i}const p=t=>t;function b(t,e){if(Array.isArray(t.fields)&&!t.fields.length)throw new Error("`rawRule.fields` cannot be an empty array. https://bit.ly/390miLa");if(t.fields&&!e.fieldMatcher)throw new Error('You need to pass "fieldMatcher" option in order to restrict access by fields');if(t.conditions&&!e.conditionsMatcher)throw new Error('You need to pass "conditionsMatcher" option in order to restrict access by conditions')}class y{constructor(t,s,i=0){b(t,s);this.action=s.resolveAction(t.action);this.subject=t.subject;this.inverted=!!t.inverted;this.conditions=t.conditions;this.reason=t.reason;this.fields=t.fields?e(t.fields):void 0;this.priority=i;this.t=s}i(){if(this.conditions&&!this.o)this.o=this.t.conditionsMatcher(this.conditions);return this.o}get ast(){const t=this.i();return t?t.ast:void 0}matchesConditions(t){if(!this.conditions)return true;if(!t||r(t))return!this.inverted;const e=this.i();return e(t)}matchesField(t){if(!this.fields)return true;if(!t)return!this.inverted;if(this.fields&&!this.u)this.u=this.t.fieldMatcher(this.fields);return this.u(t)}}const w=(t,e)=>{const s={value:t,prev:e,next:null};if(e)e.next=s;return s};const g=t=>{if(t.next)t.next.prev=t.prev;if(t.prev)t.prev.next=t.next;t.next=t.prev=null};const $=()=>({rules:[],merged:false});const x=()=>new Map;const m=(t,e)=>{if(!t.h&&e.fields)t.h=true};class A{constructor(t=[],e={}){this.h=false;this.l=new Map;this.p={conditionsMatcher:e.conditionsMatcher,fieldMatcher:e.fieldMatcher,resolveAction:e.resolveAction||p};this.g=e.detectSubjectType||c;this.$=t;this.m=this.A(t)}get rules(){return this.$}detectSubjectType(t){return r(t)?t:this.g(t)}update(t){const e={rules:t,ability:this,target:this};this.M("update",e);this.$=t;this.m=this.A(t);this.M("updated",e);return this}A(t){const s=new Map;for(let i=t.length-1;i>=0;i--){const r=t.length-i-1;const n=new y(t[i],this.p,r);const o=e(n.action);const c=e(n.subject||"all");m(this,n);for(let t=0;t<c.length;t++){const e=d(s,c[t],x);for(let t=0;t<o.length;t++)d(e,o[t],$).rules.push(n)}}return s}possibleRulesFor(t,e="all"){if(!r(e))throw new Error('"possibleRulesFor" accepts only subject types (i.e., string or class) as the 2nd parameter');const s=d(this.m,e,x);const i=d(s,t,$);if(i.merged)return i.rules;const n="manage"!==t&&s.has("manage")?s.get("manage").rules:void 0;let o=f(i.rules,n);if("all"!==e)o=f(o,this.possibleRulesFor(t,"all"));i.rules=o;i.merged=true;return o}rulesFor(t,e,s){const i=this.possibleRulesFor(t,e);if(s&&"string"!==typeof s)throw new Error("The 3rd, `field` parameter is expected to be a string. See https://stalniy.github.io/casl/en/api/casl-ability#can-of-pure-ability for details");if(!this.h)return i;return i.filter((t=>t.matchesField(s)))}on(t,e){const s=this.l.get(t)||null;const i=w(e,s);this.l.set(t,i);return()=>{if(!i.next&&!i.prev&&this.l.get(t)===i)this.l.delete(t);else g(i)}}M(t,e){let s=this.l.get(t)||null;while(null!==s){const t=s.prev;s.value(e);s=t}}}class PureAbility extends A{can(...t){const e=this.relevantRuleFor(...t);return!!e&&!e.inverted}relevantRuleFor(t,e,s){const i=this.detectSubjectType(e);const r=this.rulesFor(t,i,s);for(let t=0,s=r.length;t<s;t++)if(r[t].matchesConditions(e))return r[t];return null}cannot(...t){return!this.can(...t)}}const E={$eq:t.$eq,$ne:t.$ne,$lt:t.$lt,$lte:t.$lte,$gt:t.$gt,$gte:t.$gte,$in:t.$in,$nin:t.$nin,$all:t.$all,$size:t.$size,$regex:t.$regex,$options:t.$options,$elemMatch:t.$elemMatch,$exists:t.$exists};const M={eq:t.eq,ne:t.ne,lt:t.lt,lte:t.lte,gt:t.gt,gte:t.gte,in:t.within,nin:t.nin,all:t.all,size:t.size,regex:t.regex,elemMatch:t.elemMatch,exists:t.exists,and:t.and};const j=(e,s,i)=>t.createFactory(Object.assign({},E,e),Object.assign({},M,s),i);const v=t.createFactory(E,M);const F=/[-/\\^$+?.()|[\]{}]/g;const _=/\.?\*+\.?/g;const O=/\*+/;const R=/\./g;function C(t,e,s){const i="*"===s[0]||"."===t[0]&&"."===t[t.length-1]?"+":"*";const r=-1===t.indexOf("**")?"[^.]":".";const n=t.replace(R,"\\$&").replace(O,r+i);return e+t.length===s.length?`(?:${n})?`:n}function T(t,e,s){if("."===t&&("*"===s[e-1]||"*"===s[e+1]))return t;return`\\${t}`}function q(t){const e=t.map((t=>t.replace(F,T).replace(_,C)));const s=e.length>1?`(?:${e.join("|")})`:e[0];return new RegExp(`^${s}$`)}const B=t=>{let e;return s=>{if("undefined"===typeof e)e=t.every((t=>-1===t.indexOf("*")))?null:q(t);return null===e?-1!==t.indexOf(s):e.test(s)}};class Ability extends PureAbility{constructor(t=[],e={}){super(t,Object.assign({conditionsMatcher:v,fieldMatcher:B},e))}}class P{constructor(t){this.j=t}because(t){this.j.reason=t;return this}}class AbilityBuilder{constructor(t){this.rules=[];this.v=t;this.can=this.can.bind(this);this.cannot=this.cannot.bind(this);this.build=this.build.bind(this)}can(t,e,s,i){const r={action:t};if(e){r.subject=e;if(Array.isArray(s)||"string"===typeof s)r.fields=s;else if("undefined"!==typeof s)r.conditions=s;if("undefined"!==typeof i)r.conditions=i}this.rules.push(r);return new P(r)}cannot(t,e,s,i){const r=this.can(t,e,s,i);r.j.inverted=true;return r}build(t){return new this.v(this.rules,t)}}function defineAbility(t,e){const s=new AbilityBuilder(Ability);const i=t(s.can,s.cannot);if(i&&"function"===typeof i.then)return i.then((()=>s.build(e)));return s.build(e)}const S=t=>`Cannot execute "${t.action}" on "${t.subjectType}"`;const z=function t(e){this.message=e};z.prototype=Object.create(Error.prototype);class ForbiddenError extends z{static setDefaultMessage(t){this.F="string"===typeof t?()=>t:t}static from(t){return new this(t)}constructor(t){super("");this.ability=t;if("function"===typeof Error.captureStackTrace){this.name="ForbiddenError";Error.captureStackTrace(this,this.constructor)}}setMessage(t){this.message=t;return this}throwUnlessCan(...t){const e=this.ability.relevantRuleFor(...t);if(e&&!e.inverted)return;this.action=t[0];this.subject=t[1];this.subjectType=o(this.ability.detectSubjectType(t[1]));this.field=t[2];const s=e?e.reason:"";this.message=this.message||s||this.constructor.F(this);throw this}}ForbiddenError.F=S;exports.Ability=Ability;exports.AbilityBuilder=AbilityBuilder;exports.ForbiddenError=ForbiddenError;exports.PureAbility=PureAbility;exports.buildMongoQueryMatcher=j;exports.createAliasResolver=l;exports.defineAbility=defineAbility;exports.detectSubjectType=c;exports.fieldPatternMatcher=B;exports.getDefaultErrorMessage=S;exports.mongoQueryMatcher=v;exports.subject=i;exports.wrapArray=e;
//# sourceMappingURL=index.js.map
