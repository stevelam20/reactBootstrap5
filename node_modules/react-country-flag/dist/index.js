'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));
var PropTypes = _interopDefault(require('prop-types'));

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

var DEFAULT_CDN_URL = 'https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.3/flags/4x3/';
var DEFAULT_CDN_SUFFIX = 'svg';

// offset between uppercase ascii and regional indicator symbols
var OFFSET = 127397;

function ReactCountryFlag(_ref) {
    var cdnSuffix = _ref.cdnSuffix,
        cdnUrl = _ref.cdnUrl,
        countryCode = _ref.countryCode,
        style = _ref.style,
        svg = _ref.svg,
        props = objectWithoutProperties(_ref, ['cdnSuffix', 'cdnUrl', 'countryCode', 'style', 'svg']);

    if (typeof countryCode !== 'string') {
        return null;
    }

    if (svg) {
        var flagUrl = '' + cdnUrl + countryCode.toLowerCase() + '.' + DEFAULT_CDN_SUFFIX;

        return React.createElement('img', _extends({}, props, {
            src: flagUrl,
            style: _extends({
                display: 'inline-block',
                width: '1em',
                height: '1em',
                verticalAlign: 'middle'
            }, style)
        }));
    }

    var emoji = countryCode.toUpperCase().replace(/./g, function (char) {
        return String.fromCodePoint(char.charCodeAt(0) + OFFSET);
    });

    return React.createElement(
        'span',
        _extends({
            role: 'img'
        }, props, {
            style: _extends({
                display: 'inline-block',
                fontSize: '1em',
                lineHeight: '1em',
                verticalAlign: 'middle'
            }, style)
        }),
        emoji
    );
}

ReactCountryFlag.propTypes = {
    cdnUrl: PropTypes.string,
    countryCode: PropTypes.string.isRequired,
    style: PropTypes.object,
    svg: PropTypes.bool
};

ReactCountryFlag.defaultProps = {
    cdnUrl: DEFAULT_CDN_URL,
    svg: false
};

module.exports = ReactCountryFlag;
//# sourceMappingURL=index.js.map
